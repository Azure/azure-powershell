// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Extensions;

    /// <summary>Sync Session status object.</summary>
    public partial class ServerEndpointSyncSessionStatus :
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.IServerEndpointSyncSessionStatus,
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.IServerEndpointSyncSessionStatusInternal
    {

        /// <summary>Backing field for <see cref="FilesNotSyncingError" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.IServerEndpointFilesNotSyncingError[] _filesNotSyncingError;

        /// <summary>Array of per-item errors coming from the last sync session.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.IServerEndpointFilesNotSyncingError[] FilesNotSyncingError { get => this._filesNotSyncingError; }

        /// <summary>Backing field for <see cref="LastSyncMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.ServerEndpointSyncMode? _lastSyncMode;

        /// <summary>Sync mode</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.ServerEndpointSyncMode? LastSyncMode { get => this._lastSyncMode; }

        /// <summary>Backing field for <see cref="LastSyncPerItemErrorCount" /> property.</summary>
        private long? _lastSyncPerItemErrorCount;

        /// <summary>Last sync per item error count.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public long? LastSyncPerItemErrorCount { get => this._lastSyncPerItemErrorCount; }

        /// <summary>Backing field for <see cref="LastSyncResult" /> property.</summary>
        private int? _lastSyncResult;

        /// <summary>Last sync result (HResult)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public int? LastSyncResult { get => this._lastSyncResult; }

        /// <summary>Backing field for <see cref="LastSyncSuccessTimestamp" /> property.</summary>
        private global::System.DateTime? _lastSyncSuccessTimestamp;

        /// <summary>Last sync success timestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public global::System.DateTime? LastSyncSuccessTimestamp { get => this._lastSyncSuccessTimestamp; }

        /// <summary>Backing field for <see cref="LastSyncTimestamp" /> property.</summary>
        private global::System.DateTime? _lastSyncTimestamp;

        /// <summary>Last sync timestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public global::System.DateTime? LastSyncTimestamp { get => this._lastSyncTimestamp; }

        /// <summary>Internal Acessors for FilesNotSyncingError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.IServerEndpointFilesNotSyncingError[] Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.IServerEndpointSyncSessionStatusInternal.FilesNotSyncingError { get => this._filesNotSyncingError; set { {_filesNotSyncingError = value;} } }

        /// <summary>Internal Acessors for LastSyncMode</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.ServerEndpointSyncMode? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.IServerEndpointSyncSessionStatusInternal.LastSyncMode { get => this._lastSyncMode; set { {_lastSyncMode = value;} } }

        /// <summary>Internal Acessors for LastSyncPerItemErrorCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.IServerEndpointSyncSessionStatusInternal.LastSyncPerItemErrorCount { get => this._lastSyncPerItemErrorCount; set { {_lastSyncPerItemErrorCount = value;} } }

        /// <summary>Internal Acessors for LastSyncResult</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.IServerEndpointSyncSessionStatusInternal.LastSyncResult { get => this._lastSyncResult; set { {_lastSyncResult = value;} } }

        /// <summary>Internal Acessors for LastSyncSuccessTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.IServerEndpointSyncSessionStatusInternal.LastSyncSuccessTimestamp { get => this._lastSyncSuccessTimestamp; set { {_lastSyncSuccessTimestamp = value;} } }

        /// <summary>Internal Acessors for LastSyncTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.IServerEndpointSyncSessionStatusInternal.LastSyncTimestamp { get => this._lastSyncTimestamp; set { {_lastSyncTimestamp = value;} } }

        /// <summary>Internal Acessors for PersistentFilesNotSyncingCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.IServerEndpointSyncSessionStatusInternal.PersistentFilesNotSyncingCount { get => this._persistentFilesNotSyncingCount; set { {_persistentFilesNotSyncingCount = value;} } }

        /// <summary>Internal Acessors for TransientFilesNotSyncingCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.IServerEndpointSyncSessionStatusInternal.TransientFilesNotSyncingCount { get => this._transientFilesNotSyncingCount; set { {_transientFilesNotSyncingCount = value;} } }

        /// <summary>Backing field for <see cref="PersistentFilesNotSyncingCount" /> property.</summary>
        private long? _persistentFilesNotSyncingCount;

        /// <summary>Count of persistent files not syncing.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public long? PersistentFilesNotSyncingCount { get => this._persistentFilesNotSyncingCount; }

        /// <summary>Backing field for <see cref="TransientFilesNotSyncingCount" /> property.</summary>
        private long? _transientFilesNotSyncingCount;

        /// <summary>Count of transient files not syncing.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public long? TransientFilesNotSyncingCount { get => this._transientFilesNotSyncingCount; }

        /// <summary>Creates an new <see cref="ServerEndpointSyncSessionStatus" /> instance.</summary>
        public ServerEndpointSyncSessionStatus()
        {

        }
    }
    /// Sync Session status object.
    public partial interface IServerEndpointSyncSessionStatus :
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.IJsonSerializable
    {
        /// <summary>Array of per-item errors coming from the last sync session.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Array of per-item errors coming from the last sync session.",
        SerializedName = @"filesNotSyncingErrors",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.IServerEndpointFilesNotSyncingError) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.IServerEndpointFilesNotSyncingError[] FilesNotSyncingError { get;  }
        /// <summary>Sync mode</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Sync mode",
        SerializedName = @"lastSyncMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.ServerEndpointSyncMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.ServerEndpointSyncMode? LastSyncMode { get;  }
        /// <summary>Last sync per item error count.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last sync per item error count.",
        SerializedName = @"lastSyncPerItemErrorCount",
        PossibleTypes = new [] { typeof(long) })]
        long? LastSyncPerItemErrorCount { get;  }
        /// <summary>Last sync result (HResult)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last sync result (HResult)",
        SerializedName = @"lastSyncResult",
        PossibleTypes = new [] { typeof(int) })]
        int? LastSyncResult { get;  }
        /// <summary>Last sync success timestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last sync success timestamp",
        SerializedName = @"lastSyncSuccessTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastSyncSuccessTimestamp { get;  }
        /// <summary>Last sync timestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last sync timestamp",
        SerializedName = @"lastSyncTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastSyncTimestamp { get;  }
        /// <summary>Count of persistent files not syncing.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Count of persistent files not syncing.",
        SerializedName = @"persistentFilesNotSyncingCount",
        PossibleTypes = new [] { typeof(long) })]
        long? PersistentFilesNotSyncingCount { get;  }
        /// <summary>Count of transient files not syncing.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Count of transient files not syncing.",
        SerializedName = @"transientFilesNotSyncingCount",
        PossibleTypes = new [] { typeof(long) })]
        long? TransientFilesNotSyncingCount { get;  }

    }
    /// Sync Session status object.
    internal partial interface IServerEndpointSyncSessionStatusInternal

    {
        /// <summary>Array of per-item errors coming from the last sync session.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.IServerEndpointFilesNotSyncingError[] FilesNotSyncingError { get; set; }
        /// <summary>Sync mode</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.ServerEndpointSyncMode? LastSyncMode { get; set; }
        /// <summary>Last sync per item error count.</summary>
        long? LastSyncPerItemErrorCount { get; set; }
        /// <summary>Last sync result (HResult)</summary>
        int? LastSyncResult { get; set; }
        /// <summary>Last sync success timestamp</summary>
        global::System.DateTime? LastSyncSuccessTimestamp { get; set; }
        /// <summary>Last sync timestamp</summary>
        global::System.DateTime? LastSyncTimestamp { get; set; }
        /// <summary>Count of persistent files not syncing.</summary>
        long? PersistentFilesNotSyncingCount { get; set; }
        /// <summary>Count of transient files not syncing.</summary>
        long? TransientFilesNotSyncingCount { get; set; }

    }
}