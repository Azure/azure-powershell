// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Extensions;

    /// <summary>RegisteredServer Create Properties object.</summary>
    public partial class RegisteredServerCreateParametersProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.IRegisteredServerCreateParametersProperties,
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.IRegisteredServerCreateParametersPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AgentVersion" /> property.</summary>
        private string _agentVersion;

        /// <summary>Registered Server Agent Version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string AgentVersion { get => this._agentVersion; set => this._agentVersion = value; }

        /// <summary>Backing field for <see cref="ClusterId" /> property.</summary>
        private string _clusterId;

        /// <summary>Registered Server clusterId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string ClusterId { get => this._clusterId; set => this._clusterId = value; }

        /// <summary>Backing field for <see cref="ClusterName" /> property.</summary>
        private string _clusterName;

        /// <summary>Registered Server clusterName</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string ClusterName { get => this._clusterName; set => this._clusterName = value; }

        /// <summary>Backing field for <see cref="FriendlyName" /> property.</summary>
        private string _friendlyName;

        /// <summary>Friendly Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string FriendlyName { get => this._friendlyName; set => this._friendlyName = value; }

        /// <summary>Backing field for <see cref="LastHeartBeat" /> property.</summary>
        private string _lastHeartBeat;

        /// <summary>Registered Server last heart beat</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string LastHeartBeat { get => this._lastHeartBeat; set => this._lastHeartBeat = value; }

        /// <summary>Backing field for <see cref="ServerCertificate" /> property.</summary>
        private string _serverCertificate;

        /// <summary>Registered Server Certificate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string ServerCertificate { get => this._serverCertificate; set => this._serverCertificate = value; }

        /// <summary>Backing field for <see cref="ServerId" /> property.</summary>
        private string _serverId;

        /// <summary>Registered Server serverId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string ServerId { get => this._serverId; set => this._serverId = value; }

        /// <summary>Backing field for <see cref="ServerOSVersion" /> property.</summary>
        private string _serverOSVersion;

        /// <summary>Registered Server OS Version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string ServerOSVersion { get => this._serverOSVersion; set => this._serverOSVersion = value; }

        /// <summary>Backing field for <see cref="ServerRole" /> property.</summary>
        private string _serverRole;

        /// <summary>Registered Server serverRole</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string ServerRole { get => this._serverRole; set => this._serverRole = value; }

        /// <summary>
        /// Creates an new <see cref="RegisteredServerCreateParametersProperties" /> instance.
        /// </summary>
        public RegisteredServerCreateParametersProperties()
        {

        }
    }
    /// RegisteredServer Create Properties object.
    public partial interface IRegisteredServerCreateParametersProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.IJsonSerializable
    {
        /// <summary>Registered Server Agent Version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Registered Server Agent Version",
        SerializedName = @"agentVersion",
        PossibleTypes = new [] { typeof(string) })]
        string AgentVersion { get; set; }
        /// <summary>Registered Server clusterId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Registered Server clusterId",
        SerializedName = @"clusterId",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterId { get; set; }
        /// <summary>Registered Server clusterName</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Registered Server clusterName",
        SerializedName = @"clusterName",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterName { get; set; }
        /// <summary>Friendly Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Friendly Name",
        SerializedName = @"friendlyName",
        PossibleTypes = new [] { typeof(string) })]
        string FriendlyName { get; set; }
        /// <summary>Registered Server last heart beat</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Registered Server last heart beat",
        SerializedName = @"lastHeartBeat",
        PossibleTypes = new [] { typeof(string) })]
        string LastHeartBeat { get; set; }
        /// <summary>Registered Server Certificate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Registered Server Certificate",
        SerializedName = @"serverCertificate",
        PossibleTypes = new [] { typeof(string) })]
        string ServerCertificate { get; set; }
        /// <summary>Registered Server serverId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Registered Server serverId",
        SerializedName = @"serverId",
        PossibleTypes = new [] { typeof(string) })]
        string ServerId { get; set; }
        /// <summary>Registered Server OS Version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Registered Server OS Version",
        SerializedName = @"serverOSVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ServerOSVersion { get; set; }
        /// <summary>Registered Server serverRole</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Registered Server serverRole",
        SerializedName = @"serverRole",
        PossibleTypes = new [] { typeof(string) })]
        string ServerRole { get; set; }

    }
    /// RegisteredServer Create Properties object.
    internal partial interface IRegisteredServerCreateParametersPropertiesInternal

    {
        /// <summary>Registered Server Agent Version</summary>
        string AgentVersion { get; set; }
        /// <summary>Registered Server clusterId</summary>
        string ClusterId { get; set; }
        /// <summary>Registered Server clusterName</summary>
        string ClusterName { get; set; }
        /// <summary>Friendly Name</summary>
        string FriendlyName { get; set; }
        /// <summary>Registered Server last heart beat</summary>
        string LastHeartBeat { get; set; }
        /// <summary>Registered Server Certificate</summary>
        string ServerCertificate { get; set; }
        /// <summary>Registered Server serverId</summary>
        string ServerId { get; set; }
        /// <summary>Registered Server OS Version</summary>
        string ServerOSVersion { get; set; }
        /// <summary>Registered Server serverRole</summary>
        string ServerRole { get; set; }

    }
}