// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Extensions;

    /// <summary>Server endpoint cloud tiering status object.</summary>
    public partial class CloudTieringCachePerformance :
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.ICloudTieringCachePerformance,
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.ICloudTieringCachePerformanceInternal
    {

        /// <summary>Backing field for <see cref="CacheHitByte" /> property.</summary>
        private long? _cacheHitByte;

        /// <summary>Count of bytes that were served from the local server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public long? CacheHitByte { get => this._cacheHitByte; }

        /// <summary>Backing field for <see cref="CacheHitBytesPercent" /> property.</summary>
        private int? _cacheHitBytesPercent;

        /// <summary>Percentage of total bytes (hit + miss) that were served from the local server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public int? CacheHitBytesPercent { get => this._cacheHitBytesPercent; }

        /// <summary>Backing field for <see cref="CacheMissByte" /> property.</summary>
        private long? _cacheMissByte;

        /// <summary>Count of bytes that were served from the cloud</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public long? CacheMissByte { get => this._cacheMissByte; }

        /// <summary>Backing field for <see cref="LastUpdatedTimestamp" /> property.</summary>
        private global::System.DateTime? _lastUpdatedTimestamp;

        /// <summary>Last updated timestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public global::System.DateTime? LastUpdatedTimestamp { get => this._lastUpdatedTimestamp; }

        /// <summary>Internal Acessors for CacheHitByte</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.ICloudTieringCachePerformanceInternal.CacheHitByte { get => this._cacheHitByte; set { {_cacheHitByte = value;} } }

        /// <summary>Internal Acessors for CacheHitBytesPercent</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.ICloudTieringCachePerformanceInternal.CacheHitBytesPercent { get => this._cacheHitBytesPercent; set { {_cacheHitBytesPercent = value;} } }

        /// <summary>Internal Acessors for CacheMissByte</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.ICloudTieringCachePerformanceInternal.CacheMissByte { get => this._cacheMissByte; set { {_cacheMissByte = value;} } }

        /// <summary>Internal Acessors for LastUpdatedTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.ICloudTieringCachePerformanceInternal.LastUpdatedTimestamp { get => this._lastUpdatedTimestamp; set { {_lastUpdatedTimestamp = value;} } }

        /// <summary>Creates an new <see cref="CloudTieringCachePerformance" /> instance.</summary>
        public CloudTieringCachePerformance()
        {

        }
    }
    /// Server endpoint cloud tiering status object.
    public partial interface ICloudTieringCachePerformance :
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.IJsonSerializable
    {
        /// <summary>Count of bytes that were served from the local server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Count of bytes that were served from the local server",
        SerializedName = @"cacheHitBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? CacheHitByte { get;  }
        /// <summary>Percentage of total bytes (hit + miss) that were served from the local server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Percentage of total bytes (hit + miss) that were served from the local server",
        SerializedName = @"cacheHitBytesPercent",
        PossibleTypes = new [] { typeof(int) })]
        int? CacheHitBytesPercent { get;  }
        /// <summary>Count of bytes that were served from the cloud</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Count of bytes that were served from the cloud",
        SerializedName = @"cacheMissBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? CacheMissByte { get;  }
        /// <summary>Last updated timestamp</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last updated timestamp",
        SerializedName = @"lastUpdatedTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastUpdatedTimestamp { get;  }

    }
    /// Server endpoint cloud tiering status object.
    internal partial interface ICloudTieringCachePerformanceInternal

    {
        /// <summary>Count of bytes that were served from the local server</summary>
        long? CacheHitByte { get; set; }
        /// <summary>Percentage of total bytes (hit + miss) that were served from the local server</summary>
        int? CacheHitBytesPercent { get; set; }
        /// <summary>Count of bytes that were served from the cloud</summary>
        long? CacheMissByte { get; set; }
        /// <summary>Last updated timestamp</summary>
        global::System.DateTime? LastUpdatedTimestamp { get; set; }

    }
}