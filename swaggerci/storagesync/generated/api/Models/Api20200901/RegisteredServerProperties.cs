// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Extensions;

    /// <summary>RegisteredServer Properties object.</summary>
    public partial class RegisteredServerProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.IRegisteredServerProperties,
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.IRegisteredServerPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AgentVersion" /> property.</summary>
        private string _agentVersion;

        /// <summary>Registered Server Agent Version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string AgentVersion { get => this._agentVersion; set => this._agentVersion = value; }

        /// <summary>Backing field for <see cref="AgentVersionExpirationDate" /> property.</summary>
        private global::System.DateTime? _agentVersionExpirationDate;

        /// <summary>Registered Server Agent Version Expiration Date</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public global::System.DateTime? AgentVersionExpirationDate { get => this._agentVersionExpirationDate; }

        /// <summary>Backing field for <see cref="AgentVersionStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.RegisteredServerAgentVersionStatus? _agentVersionStatus;

        /// <summary>Registered Server Agent Version Status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.RegisteredServerAgentVersionStatus? AgentVersionStatus { get => this._agentVersionStatus; }

        /// <summary>Backing field for <see cref="ClusterId" /> property.</summary>
        private string _clusterId;

        /// <summary>Registered Server clusterId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string ClusterId { get => this._clusterId; set => this._clusterId = value; }

        /// <summary>Backing field for <see cref="ClusterName" /> property.</summary>
        private string _clusterName;

        /// <summary>Registered Server clusterName</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string ClusterName { get => this._clusterName; set => this._clusterName = value; }

        /// <summary>Backing field for <see cref="DiscoveryEndpointUri" /> property.</summary>
        private string _discoveryEndpointUri;

        /// <summary>Resource discoveryEndpointUri</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string DiscoveryEndpointUri { get => this._discoveryEndpointUri; set => this._discoveryEndpointUri = value; }

        /// <summary>Backing field for <see cref="FriendlyName" /> property.</summary>
        private string _friendlyName;

        /// <summary>Friendly Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string FriendlyName { get => this._friendlyName; set => this._friendlyName = value; }

        /// <summary>Backing field for <see cref="LastHeartBeat" /> property.</summary>
        private string _lastHeartBeat;

        /// <summary>Registered Server last heart beat</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string LastHeartBeat { get => this._lastHeartBeat; set => this._lastHeartBeat = value; }

        /// <summary>Backing field for <see cref="LastOperationName" /> property.</summary>
        private string _lastOperationName;

        /// <summary>Resource Last Operation Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string LastOperationName { get => this._lastOperationName; set => this._lastOperationName = value; }

        /// <summary>Backing field for <see cref="LastWorkflowId" /> property.</summary>
        private string _lastWorkflowId;

        /// <summary>Registered Server lastWorkflowId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string LastWorkflowId { get => this._lastWorkflowId; set => this._lastWorkflowId = value; }

        /// <summary>Backing field for <see cref="ManagementEndpointUri" /> property.</summary>
        private string _managementEndpointUri;

        /// <summary>Management Endpoint Uri</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string ManagementEndpointUri { get => this._managementEndpointUri; set => this._managementEndpointUri = value; }

        /// <summary>Internal Acessors for AgentVersionExpirationDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.IRegisteredServerPropertiesInternal.AgentVersionExpirationDate { get => this._agentVersionExpirationDate; set { {_agentVersionExpirationDate = value;} } }

        /// <summary>Internal Acessors for AgentVersionStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.RegisteredServerAgentVersionStatus? Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.IRegisteredServerPropertiesInternal.AgentVersionStatus { get => this._agentVersionStatus; set { {_agentVersionStatus = value;} } }

        /// <summary>Internal Acessors for ServerName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Models.Api20200901.IRegisteredServerPropertiesInternal.ServerName { get => this._serverName; set { {_serverName = value;} } }

        /// <summary>Backing field for <see cref="MonitoringConfiguration" /> property.</summary>
        private string _monitoringConfiguration;

        /// <summary>Monitoring Configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string MonitoringConfiguration { get => this._monitoringConfiguration; set => this._monitoringConfiguration = value; }

        /// <summary>Backing field for <see cref="MonitoringEndpointUri" /> property.</summary>
        private string _monitoringEndpointUri;

        /// <summary>Telemetry Endpoint Uri</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string MonitoringEndpointUri { get => this._monitoringEndpointUri; set => this._monitoringEndpointUri = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>Registered Server Provisioning State</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; set => this._provisioningState = value; }

        /// <summary>Backing field for <see cref="ResourceLocation" /> property.</summary>
        private string _resourceLocation;

        /// <summary>Resource Location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string ResourceLocation { get => this._resourceLocation; set => this._resourceLocation = value; }

        /// <summary>Backing field for <see cref="ServerCertificate" /> property.</summary>
        private string _serverCertificate;

        /// <summary>Registered Server Certificate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string ServerCertificate { get => this._serverCertificate; set => this._serverCertificate = value; }

        /// <summary>Backing field for <see cref="ServerId" /> property.</summary>
        private string _serverId;

        /// <summary>Registered Server serverId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string ServerId { get => this._serverId; set => this._serverId = value; }

        /// <summary>Backing field for <see cref="ServerManagementErrorCode" /> property.</summary>
        private int? _serverManagementErrorCode;

        /// <summary>Registered Server Management Error Code</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public int? ServerManagementErrorCode { get => this._serverManagementErrorCode; set => this._serverManagementErrorCode = value; }

        /// <summary>Backing field for <see cref="ServerName" /> property.</summary>
        private string _serverName;

        /// <summary>Server name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string ServerName { get => this._serverName; }

        /// <summary>Backing field for <see cref="ServerOSVersion" /> property.</summary>
        private string _serverOSVersion;

        /// <summary>Registered Server OS Version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string ServerOSVersion { get => this._serverOSVersion; set => this._serverOSVersion = value; }

        /// <summary>Backing field for <see cref="ServerRole" /> property.</summary>
        private string _serverRole;

        /// <summary>Registered Server serverRole</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string ServerRole { get => this._serverRole; set => this._serverRole = value; }

        /// <summary>Backing field for <see cref="ServiceLocation" /> property.</summary>
        private string _serviceLocation;

        /// <summary>Service Location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string ServiceLocation { get => this._serviceLocation; set => this._serviceLocation = value; }

        /// <summary>Backing field for <see cref="StorageSyncServiceUid" /> property.</summary>
        private string _storageSyncServiceUid;

        /// <summary>Registered Server storageSyncServiceUid</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.PropertyOrigin.Owned)]
        public string StorageSyncServiceUid { get => this._storageSyncServiceUid; set => this._storageSyncServiceUid = value; }

        /// <summary>Creates an new <see cref="RegisteredServerProperties" /> instance.</summary>
        public RegisteredServerProperties()
        {

        }
    }
    /// RegisteredServer Properties object.
    public partial interface IRegisteredServerProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.IJsonSerializable
    {
        /// <summary>Registered Server Agent Version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Registered Server Agent Version",
        SerializedName = @"agentVersion",
        PossibleTypes = new [] { typeof(string) })]
        string AgentVersion { get; set; }
        /// <summary>Registered Server Agent Version Expiration Date</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Registered Server Agent Version Expiration Date",
        SerializedName = @"agentVersionExpirationDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? AgentVersionExpirationDate { get;  }
        /// <summary>Registered Server Agent Version Status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Registered Server Agent Version Status",
        SerializedName = @"agentVersionStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.RegisteredServerAgentVersionStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.RegisteredServerAgentVersionStatus? AgentVersionStatus { get;  }
        /// <summary>Registered Server clusterId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Registered Server clusterId",
        SerializedName = @"clusterId",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterId { get; set; }
        /// <summary>Registered Server clusterName</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Registered Server clusterName",
        SerializedName = @"clusterName",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterName { get; set; }
        /// <summary>Resource discoveryEndpointUri</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource discoveryEndpointUri",
        SerializedName = @"discoveryEndpointUri",
        PossibleTypes = new [] { typeof(string) })]
        string DiscoveryEndpointUri { get; set; }
        /// <summary>Friendly Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Friendly Name",
        SerializedName = @"friendlyName",
        PossibleTypes = new [] { typeof(string) })]
        string FriendlyName { get; set; }
        /// <summary>Registered Server last heart beat</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Registered Server last heart beat",
        SerializedName = @"lastHeartBeat",
        PossibleTypes = new [] { typeof(string) })]
        string LastHeartBeat { get; set; }
        /// <summary>Resource Last Operation Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Last Operation Name",
        SerializedName = @"lastOperationName",
        PossibleTypes = new [] { typeof(string) })]
        string LastOperationName { get; set; }
        /// <summary>Registered Server lastWorkflowId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Registered Server lastWorkflowId",
        SerializedName = @"lastWorkflowId",
        PossibleTypes = new [] { typeof(string) })]
        string LastWorkflowId { get; set; }
        /// <summary>Management Endpoint Uri</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Management Endpoint Uri",
        SerializedName = @"managementEndpointUri",
        PossibleTypes = new [] { typeof(string) })]
        string ManagementEndpointUri { get; set; }
        /// <summary>Monitoring Configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Monitoring Configuration",
        SerializedName = @"monitoringConfiguration",
        PossibleTypes = new [] { typeof(string) })]
        string MonitoringConfiguration { get; set; }
        /// <summary>Telemetry Endpoint Uri</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Telemetry Endpoint Uri",
        SerializedName = @"monitoringEndpointUri",
        PossibleTypes = new [] { typeof(string) })]
        string MonitoringEndpointUri { get; set; }
        /// <summary>Registered Server Provisioning State</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Registered Server Provisioning State",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get; set; }
        /// <summary>Resource Location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Location",
        SerializedName = @"resourceLocation",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceLocation { get; set; }
        /// <summary>Registered Server Certificate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Registered Server Certificate",
        SerializedName = @"serverCertificate",
        PossibleTypes = new [] { typeof(string) })]
        string ServerCertificate { get; set; }
        /// <summary>Registered Server serverId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Registered Server serverId",
        SerializedName = @"serverId",
        PossibleTypes = new [] { typeof(string) })]
        string ServerId { get; set; }
        /// <summary>Registered Server Management Error Code</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Registered Server Management Error Code",
        SerializedName = @"serverManagementErrorCode",
        PossibleTypes = new [] { typeof(int) })]
        int? ServerManagementErrorCode { get; set; }
        /// <summary>Server name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Server name",
        SerializedName = @"serverName",
        PossibleTypes = new [] { typeof(string) })]
        string ServerName { get;  }
        /// <summary>Registered Server OS Version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Registered Server OS Version",
        SerializedName = @"serverOSVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ServerOSVersion { get; set; }
        /// <summary>Registered Server serverRole</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Registered Server serverRole",
        SerializedName = @"serverRole",
        PossibleTypes = new [] { typeof(string) })]
        string ServerRole { get; set; }
        /// <summary>Service Location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Service Location",
        SerializedName = @"serviceLocation",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceLocation { get; set; }
        /// <summary>Registered Server storageSyncServiceUid</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Registered Server storageSyncServiceUid",
        SerializedName = @"storageSyncServiceUid",
        PossibleTypes = new [] { typeof(string) })]
        string StorageSyncServiceUid { get; set; }

    }
    /// RegisteredServer Properties object.
    internal partial interface IRegisteredServerPropertiesInternal

    {
        /// <summary>Registered Server Agent Version</summary>
        string AgentVersion { get; set; }
        /// <summary>Registered Server Agent Version Expiration Date</summary>
        global::System.DateTime? AgentVersionExpirationDate { get; set; }
        /// <summary>Registered Server Agent Version Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageSync.Support.RegisteredServerAgentVersionStatus? AgentVersionStatus { get; set; }
        /// <summary>Registered Server clusterId</summary>
        string ClusterId { get; set; }
        /// <summary>Registered Server clusterName</summary>
        string ClusterName { get; set; }
        /// <summary>Resource discoveryEndpointUri</summary>
        string DiscoveryEndpointUri { get; set; }
        /// <summary>Friendly Name</summary>
        string FriendlyName { get; set; }
        /// <summary>Registered Server last heart beat</summary>
        string LastHeartBeat { get; set; }
        /// <summary>Resource Last Operation Name</summary>
        string LastOperationName { get; set; }
        /// <summary>Registered Server lastWorkflowId</summary>
        string LastWorkflowId { get; set; }
        /// <summary>Management Endpoint Uri</summary>
        string ManagementEndpointUri { get; set; }
        /// <summary>Monitoring Configuration</summary>
        string MonitoringConfiguration { get; set; }
        /// <summary>Telemetry Endpoint Uri</summary>
        string MonitoringEndpointUri { get; set; }
        /// <summary>Registered Server Provisioning State</summary>
        string ProvisioningState { get; set; }
        /// <summary>Resource Location</summary>
        string ResourceLocation { get; set; }
        /// <summary>Registered Server Certificate</summary>
        string ServerCertificate { get; set; }
        /// <summary>Registered Server serverId</summary>
        string ServerId { get; set; }
        /// <summary>Registered Server Management Error Code</summary>
        int? ServerManagementErrorCode { get; set; }
        /// <summary>Server name</summary>
        string ServerName { get; set; }
        /// <summary>Registered Server OS Version</summary>
        string ServerOSVersion { get; set; }
        /// <summary>Registered Server serverRole</summary>
        string ServerRole { get; set; }
        /// <summary>Service Location</summary>
        string ServiceLocation { get; set; }
        /// <summary>Registered Server storageSyncServiceUid</summary>
        string StorageSyncServiceUid { get; set; }

    }
}