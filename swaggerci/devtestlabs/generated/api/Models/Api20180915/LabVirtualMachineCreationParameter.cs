// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Extensions;

    /// <summary>Properties for creating a virtual machine.</summary>
    public partial class LabVirtualMachineCreationParameter :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameter,
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterInternal
    {

        /// <summary>Indicates whether another user can take ownership of the virtual machine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public bool? AllowClaim { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).AllowClaim; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).AllowClaim = value ?? default(bool); }

        /// <summary>The artifacts to be installed on the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactInstallProperties[] Artifact { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).Artifact; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).Artifact = value ?? null /* arrayOf */; }

        /// <summary>The number of virtual machine instances to create.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public int? BulkCreationParameterInstanceCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).BulkCreationParameterInstanceCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).BulkCreationParameterInstanceCount = value ?? default(int); }

        /// <summary>The creation date of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public global::System.DateTime? CreatedDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).CreatedDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).CreatedDate = value ?? default(global::System.DateTime); }

        /// <summary>The custom image identifier of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string CustomImageId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).CustomImageId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).CustomImageId = value ?? null; }

        /// <summary>New or existing data disks to attach to the virtual machine after creation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskProperties[] DataDiskParameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).DataDiskParameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).DataDiskParameter = value ?? null /* arrayOf */; }

        /// <summary>
        /// Indicates whether the virtual machine is to be created without a public IP address.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public bool? DisallowPublicIPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).DisallowPublicIPAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).DisallowPublicIPAddress = value ?? default(bool); }

        /// <summary>The resource ID of the environment that contains this virtual machine, if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string EnvironmentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).EnvironmentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).EnvironmentId = value ?? null; }

        /// <summary>The expiration date for VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public global::System.DateTime? ExpirationDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ExpirationDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ExpirationDate = value ?? default(global::System.DateTime); }

        /// <summary>The OS type of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string GalleryImageReferenceOSType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).GalleryImageReferenceOSType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).GalleryImageReferenceOSType = value ?? null; }

        /// <summary>The offer of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string GalleryImageReferenceOffer { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).GalleryImageReferenceOffer; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).GalleryImageReferenceOffer = value ?? null; }

        /// <summary>The publisher of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string GalleryImageReferencePublisher { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).GalleryImageReferencePublisher; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).GalleryImageReferencePublisher = value ?? null; }

        /// <summary>The SKU of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string GalleryImageReferenceSku { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).GalleryImageReferenceSku; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).GalleryImageReferenceSku = value ?? null; }

        /// <summary>The version of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string GalleryImageReferenceVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).GalleryImageReferenceVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).GalleryImageReferenceVersion = value ?? null; }

        /// <summary>Indicates whether this virtual machine uses an SSH key for authentication.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public bool? IsAuthenticationWithSshKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).IsAuthenticationWithSshKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).IsAuthenticationWithSshKey = value ?? default(bool); }

        /// <summary>The lab subnet name of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string LabSubnetName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).LabSubnetName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).LabSubnetName = value ?? null; }

        /// <summary>The lab virtual network identifier of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string LabVirtualNetworkId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).LabVirtualNetworkId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).LabVirtualNetworkId = value ?? null; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>The location of the new virtual machine or environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Internal Acessors for BulkCreationParameter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IBulkCreationParameters Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterInternal.BulkCreationParameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).BulkCreationParameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).BulkCreationParameter = value; }

        /// <summary>Internal Acessors for GalleryImageReference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IGalleryImageReference Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterInternal.GalleryImageReference { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).GalleryImageReference; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).GalleryImageReference = value; }

        /// <summary>Internal Acessors for NetworkInterface</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INetworkInterfaceProperties Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterInternal.NetworkInterface { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterface; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterface = value; }

        /// <summary>Internal Acessors for NetworkInterfaceSharedPublicIPAddressConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ISharedPublicIPAddressConfiguration Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterInternal.NetworkInterfaceSharedPublicIPAddressConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfaceSharedPublicIPAddressConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfaceSharedPublicIPAddressConfiguration = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterProperties Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabVirtualMachineCreationParameterProperties()); set { {_property = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The name of the virtual machine or environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>The DNS name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string NetworkInterfaceDnsName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfaceDnsName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfaceDnsName = value ?? null; }

        /// <summary>The private IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string NetworkInterfacePrivateIPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfacePrivateIPAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfacePrivateIPAddress = value ?? null; }

        /// <summary>The public IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string NetworkInterfacePublicIPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfacePublicIPAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfacePublicIPAddress = value ?? null; }

        /// <summary>The resource ID of the public IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string NetworkInterfacePublicIPAddressId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfacePublicIPAddressId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfacePublicIPAddressId = value ?? null; }

        /// <summary>
        /// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote
        /// Desktop Protocol).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string NetworkInterfaceRdpAuthority { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfaceRdpAuthority; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfaceRdpAuthority = value ?? null; }

        /// <summary>
        /// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string NetworkInterfaceSshAuthority { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfaceSshAuthority; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfaceSshAuthority = value ?? null; }

        /// <summary>The resource ID of the sub net.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string NetworkInterfaceSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfaceSubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfaceSubnetId = value ?? null; }

        /// <summary>The resource ID of the virtual network.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string NetworkInterfaceVirtualNetworkId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfaceVirtualNetworkId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).NetworkInterfaceVirtualNetworkId = value ?? null; }

        /// <summary>The notes of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string Note { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).Note; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).Note = value ?? null; }

        /// <summary>The object identifier of the owner of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string OwnerObjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).OwnerObjectId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).OwnerObjectId = value ?? null; }

        /// <summary>The user principal name of the virtual machine owner.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string OwnerUserPrincipalName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).OwnerUserPrincipalName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).OwnerUserPrincipalName = value ?? null; }

        /// <summary>The password of the virtual machine administrator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string Password { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).Password = value ?? null; }

        /// <summary>The id of the plan associated with the virtual machine image</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string PlanId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).PlanId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).PlanId = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterProperties _property;

        /// <summary>The properties of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabVirtualMachineCreationParameterProperties()); set => this._property = value; }

        /// <summary>Virtual Machine schedules to be created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameter[] ScheduleParameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ScheduleParameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).ScheduleParameter = value ?? null /* arrayOf */; }

        /// <summary>The incoming NAT rules</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IInboundNatRule[] SharedPublicIPAddressConfigurationInboundNatRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).SharedPublicIPAddressConfigurationInboundNatRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).SharedPublicIPAddressConfigurationInboundNatRule = value ?? null /* arrayOf */; }

        /// <summary>The size of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string Size { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).Size; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).Size = value ?? null; }

        /// <summary>The SSH key of the virtual machine administrator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string SshKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).SshKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).SshKey = value ?? null; }

        /// <summary>Storage type to use for virtual machine (i.e. Standard, Premium).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string StorageType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).StorageType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).StorageType = value ?? null; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterTags _tag;

        /// <summary>The tags of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabVirtualMachineCreationParameterTags()); set => this._tag = value; }

        /// <summary>The user name of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string UserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).UserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterPropertiesInternal)Property).UserName = value ?? null; }

        /// <summary>Creates an new <see cref="LabVirtualMachineCreationParameter" /> instance.</summary>
        public LabVirtualMachineCreationParameter()
        {

        }
    }
    /// Properties for creating a virtual machine.
    public partial interface ILabVirtualMachineCreationParameter :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.IJsonSerializable
    {
        /// <summary>Indicates whether another user can take ownership of the virtual machine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether another user can take ownership of the virtual machine",
        SerializedName = @"allowClaim",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AllowClaim { get; set; }
        /// <summary>The artifacts to be installed on the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The artifacts to be installed on the virtual machine.",
        SerializedName = @"artifacts",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactInstallProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactInstallProperties[] Artifact { get; set; }
        /// <summary>The number of virtual machine instances to create.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of virtual machine instances to create.",
        SerializedName = @"instanceCount",
        PossibleTypes = new [] { typeof(int) })]
        int? BulkCreationParameterInstanceCount { get; set; }
        /// <summary>The creation date of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The creation date of the virtual machine.",
        SerializedName = @"createdDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedDate { get; set; }
        /// <summary>The custom image identifier of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The custom image identifier of the virtual machine.",
        SerializedName = @"customImageId",
        PossibleTypes = new [] { typeof(string) })]
        string CustomImageId { get; set; }
        /// <summary>New or existing data disks to attach to the virtual machine after creation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"New or existing data disks to attach to the virtual machine after creation",
        SerializedName = @"dataDiskParameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskProperties[] DataDiskParameter { get; set; }
        /// <summary>
        /// Indicates whether the virtual machine is to be created without a public IP address.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether the virtual machine is to be created without a public IP address.",
        SerializedName = @"disallowPublicIpAddress",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DisallowPublicIPAddress { get; set; }
        /// <summary>The resource ID of the environment that contains this virtual machine, if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the environment that contains this virtual machine, if any.",
        SerializedName = @"environmentId",
        PossibleTypes = new [] { typeof(string) })]
        string EnvironmentId { get; set; }
        /// <summary>The expiration date for VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The expiration date for VM.",
        SerializedName = @"expirationDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExpirationDate { get; set; }
        /// <summary>The OS type of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The OS type of the gallery image.",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(string) })]
        string GalleryImageReferenceOSType { get; set; }
        /// <summary>The offer of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The offer of the gallery image.",
        SerializedName = @"offer",
        PossibleTypes = new [] { typeof(string) })]
        string GalleryImageReferenceOffer { get; set; }
        /// <summary>The publisher of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The publisher of the gallery image.",
        SerializedName = @"publisher",
        PossibleTypes = new [] { typeof(string) })]
        string GalleryImageReferencePublisher { get; set; }
        /// <summary>The SKU of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SKU of the gallery image.",
        SerializedName = @"sku",
        PossibleTypes = new [] { typeof(string) })]
        string GalleryImageReferenceSku { get; set; }
        /// <summary>The version of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the gallery image.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string GalleryImageReferenceVersion { get; set; }
        /// <summary>Indicates whether this virtual machine uses an SSH key for authentication.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether this virtual machine uses an SSH key for authentication.",
        SerializedName = @"isAuthenticationWithSshKey",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsAuthenticationWithSshKey { get; set; }
        /// <summary>The lab subnet name of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The lab subnet name of the virtual machine.",
        SerializedName = @"labSubnetName",
        PossibleTypes = new [] { typeof(string) })]
        string LabSubnetName { get; set; }
        /// <summary>The lab virtual network identifier of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The lab virtual network identifier of the virtual machine.",
        SerializedName = @"labVirtualNetworkId",
        PossibleTypes = new [] { typeof(string) })]
        string LabVirtualNetworkId { get; set; }
        /// <summary>The location of the new virtual machine or environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The location of the new virtual machine or environment",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>The name of the virtual machine or environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the virtual machine or environment",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>The DNS name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The DNS name.",
        SerializedName = @"dnsName",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfaceDnsName { get; set; }
        /// <summary>The private IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The private IP address.",
        SerializedName = @"privateIpAddress",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfacePrivateIPAddress { get; set; }
        /// <summary>The public IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The public IP address.",
        SerializedName = @"publicIpAddress",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfacePublicIPAddress { get; set; }
        /// <summary>The resource ID of the public IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the public IP address.",
        SerializedName = @"publicIpAddressId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfacePublicIPAddressId { get; set; }
        /// <summary>
        /// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote
        /// Desktop Protocol).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).",
        SerializedName = @"rdpAuthority",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfaceRdpAuthority { get; set; }
        /// <summary>
        /// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.",
        SerializedName = @"sshAuthority",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfaceSshAuthority { get; set; }
        /// <summary>The resource ID of the sub net.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the sub net.",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfaceSubnetId { get; set; }
        /// <summary>The resource ID of the virtual network.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the virtual network.",
        SerializedName = @"virtualNetworkId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfaceVirtualNetworkId { get; set; }
        /// <summary>The notes of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The notes of the virtual machine.",
        SerializedName = @"notes",
        PossibleTypes = new [] { typeof(string) })]
        string Note { get; set; }
        /// <summary>The object identifier of the owner of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The object identifier of the owner of the virtual machine.",
        SerializedName = @"ownerObjectId",
        PossibleTypes = new [] { typeof(string) })]
        string OwnerObjectId { get; set; }
        /// <summary>The user principal name of the virtual machine owner.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user principal name of the virtual machine owner.",
        SerializedName = @"ownerUserPrincipalName",
        PossibleTypes = new [] { typeof(string) })]
        string OwnerUserPrincipalName { get; set; }
        /// <summary>The password of the virtual machine administrator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The password of the virtual machine administrator.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string Password { get; set; }
        /// <summary>The id of the plan associated with the virtual machine image</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The id of the plan associated with the virtual machine image",
        SerializedName = @"planId",
        PossibleTypes = new [] { typeof(string) })]
        string PlanId { get; set; }
        /// <summary>Virtual Machine schedules to be created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Virtual Machine schedules to be created",
        SerializedName = @"scheduleParameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameter) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameter[] ScheduleParameter { get; set; }
        /// <summary>The incoming NAT rules</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The incoming NAT rules",
        SerializedName = @"inboundNatRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IInboundNatRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IInboundNatRule[] SharedPublicIPAddressConfigurationInboundNatRule { get; set; }
        /// <summary>The size of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The size of the virtual machine.",
        SerializedName = @"size",
        PossibleTypes = new [] { typeof(string) })]
        string Size { get; set; }
        /// <summary>The SSH key of the virtual machine administrator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SSH key of the virtual machine administrator.",
        SerializedName = @"sshKey",
        PossibleTypes = new [] { typeof(string) })]
        string SshKey { get; set; }
        /// <summary>Storage type to use for virtual machine (i.e. Standard, Premium).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage type to use for virtual machine (i.e. Standard, Premium).",
        SerializedName = @"storageType",
        PossibleTypes = new [] { typeof(string) })]
        string StorageType { get; set; }
        /// <summary>The tags of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tags of the resource.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterTags Tag { get; set; }
        /// <summary>The user name of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user name of the virtual machine.",
        SerializedName = @"userName",
        PossibleTypes = new [] { typeof(string) })]
        string UserName { get; set; }

    }
    /// Properties for creating a virtual machine.
    internal partial interface ILabVirtualMachineCreationParameterInternal

    {
        /// <summary>Indicates whether another user can take ownership of the virtual machine</summary>
        bool? AllowClaim { get; set; }
        /// <summary>The artifacts to be installed on the virtual machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactInstallProperties[] Artifact { get; set; }
        /// <summary>The number of virtual machine instances to create.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IBulkCreationParameters BulkCreationParameter { get; set; }
        /// <summary>The number of virtual machine instances to create.</summary>
        int? BulkCreationParameterInstanceCount { get; set; }
        /// <summary>The creation date of the virtual machine.</summary>
        global::System.DateTime? CreatedDate { get; set; }
        /// <summary>The custom image identifier of the virtual machine.</summary>
        string CustomImageId { get; set; }
        /// <summary>New or existing data disks to attach to the virtual machine after creation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskProperties[] DataDiskParameter { get; set; }
        /// <summary>
        /// Indicates whether the virtual machine is to be created without a public IP address.
        /// </summary>
        bool? DisallowPublicIPAddress { get; set; }
        /// <summary>The resource ID of the environment that contains this virtual machine, if any.</summary>
        string EnvironmentId { get; set; }
        /// <summary>The expiration date for VM.</summary>
        global::System.DateTime? ExpirationDate { get; set; }
        /// <summary>The Microsoft Azure Marketplace image reference of the virtual machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IGalleryImageReference GalleryImageReference { get; set; }
        /// <summary>The OS type of the gallery image.</summary>
        string GalleryImageReferenceOSType { get; set; }
        /// <summary>The offer of the gallery image.</summary>
        string GalleryImageReferenceOffer { get; set; }
        /// <summary>The publisher of the gallery image.</summary>
        string GalleryImageReferencePublisher { get; set; }
        /// <summary>The SKU of the gallery image.</summary>
        string GalleryImageReferenceSku { get; set; }
        /// <summary>The version of the gallery image.</summary>
        string GalleryImageReferenceVersion { get; set; }
        /// <summary>Indicates whether this virtual machine uses an SSH key for authentication.</summary>
        bool? IsAuthenticationWithSshKey { get; set; }
        /// <summary>The lab subnet name of the virtual machine.</summary>
        string LabSubnetName { get; set; }
        /// <summary>The lab virtual network identifier of the virtual machine.</summary>
        string LabVirtualNetworkId { get; set; }
        /// <summary>The location of the new virtual machine or environment</summary>
        string Location { get; set; }
        /// <summary>The name of the virtual machine or environment</summary>
        string Name { get; set; }
        /// <summary>The network interface properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INetworkInterfaceProperties NetworkInterface { get; set; }
        /// <summary>The DNS name.</summary>
        string NetworkInterfaceDnsName { get; set; }
        /// <summary>The private IP address.</summary>
        string NetworkInterfacePrivateIPAddress { get; set; }
        /// <summary>The public IP address.</summary>
        string NetworkInterfacePublicIPAddress { get; set; }
        /// <summary>The resource ID of the public IP address.</summary>
        string NetworkInterfacePublicIPAddressId { get; set; }
        /// <summary>
        /// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote
        /// Desktop Protocol).
        /// </summary>
        string NetworkInterfaceRdpAuthority { get; set; }
        /// <summary>
        /// The configuration for sharing a public IP address across multiple virtual machines.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ISharedPublicIPAddressConfiguration NetworkInterfaceSharedPublicIPAddressConfiguration { get; set; }
        /// <summary>
        /// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
        /// </summary>
        string NetworkInterfaceSshAuthority { get; set; }
        /// <summary>The resource ID of the sub net.</summary>
        string NetworkInterfaceSubnetId { get; set; }
        /// <summary>The resource ID of the virtual network.</summary>
        string NetworkInterfaceVirtualNetworkId { get; set; }
        /// <summary>The notes of the virtual machine.</summary>
        string Note { get; set; }
        /// <summary>The object identifier of the owner of the virtual machine.</summary>
        string OwnerObjectId { get; set; }
        /// <summary>The user principal name of the virtual machine owner.</summary>
        string OwnerUserPrincipalName { get; set; }
        /// <summary>The password of the virtual machine administrator.</summary>
        string Password { get; set; }
        /// <summary>The id of the plan associated with the virtual machine image</summary>
        string PlanId { get; set; }
        /// <summary>The properties of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterProperties Property { get; set; }
        /// <summary>Virtual Machine schedules to be created</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameter[] ScheduleParameter { get; set; }
        /// <summary>The incoming NAT rules</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IInboundNatRule[] SharedPublicIPAddressConfigurationInboundNatRule { get; set; }
        /// <summary>The size of the virtual machine.</summary>
        string Size { get; set; }
        /// <summary>The SSH key of the virtual machine administrator.</summary>
        string SshKey { get; set; }
        /// <summary>Storage type to use for virtual machine (i.e. Standard, Premium).</summary>
        string StorageType { get; set; }
        /// <summary>The tags of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameterTags Tag { get; set; }
        /// <summary>The user name of the virtual machine.</summary>
        string UserName { get; set; }

    }
}