// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Extensions;

    /// <summary>A Policy.</summary>
    public partial class Policy :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicy,
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyInternal,
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.Resource();

        /// <summary>The creation date of the policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public global::System.DateTime? CreatedDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyPropertiesInternal)Property).CreatedDate; }

        /// <summary>The description of the policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyPropertiesInternal)Property).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyPropertiesInternal)Property).Description = value ?? null; }

        /// <summary>The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.PolicyEvaluatorType? EvaluatorType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyPropertiesInternal)Property).EvaluatorType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyPropertiesInternal)Property).EvaluatorType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.PolicyEvaluatorType)""); }

        /// <summary>The fact data of the policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string FactData { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyPropertiesInternal)Property).FactData; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyPropertiesInternal)Property).FactData = value ?? null; }

        /// <summary>
        /// The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.PolicyFactName? FactName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyPropertiesInternal)Property).FactName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyPropertiesInternal)Property).FactName = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.PolicyFactName)""); }

        /// <summary>The identifier of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Id; }

        /// <summary>The location of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Location = value ?? null; }

        /// <summary>Internal Acessors for CreatedDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyInternal.CreatedDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyPropertiesInternal)Property).CreatedDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyPropertiesInternal)Property).CreatedDate = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyProperties Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.PolicyProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for UniqueIdentifier</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyInternal.UniqueIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyPropertiesInternal)Property).UniqueIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyPropertiesInternal)Property).UniqueIdentifier = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyProperties _property;

        /// <summary>The properties of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.PolicyProperties()); set => this._property = value; }

        /// <summary>The provisioning status of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyPropertiesInternal)Property).ProvisioningState; }

        /// <summary>The status of the policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.PolicyStatus? Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyPropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyPropertiesInternal)Property).Status = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.PolicyStatus)""); }

        /// <summary>The tags of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Tag = value ?? null /* model class */; }

        /// <summary>
        /// The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string Threshold { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyPropertiesInternal)Property).Threshold; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyPropertiesInternal)Property).Threshold = value ?? null; }

        /// <summary>The type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Type; }

        /// <summary>The unique immutable identifier of a resource (Guid).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string UniqueIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyPropertiesInternal)Property).UniqueIdentifier; }

        /// <summary>Creates an new <see cref="Policy" /> instance.</summary>
        public Policy()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// A Policy.
    public partial interface IPolicy :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResource
    {
        /// <summary>The creation date of the policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The creation date of the policy.",
        SerializedName = @"createdDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedDate { get;  }
        /// <summary>The description of the policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The description of the policy.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).",
        SerializedName = @"evaluatorType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.PolicyEvaluatorType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.PolicyEvaluatorType? EvaluatorType { get; set; }
        /// <summary>The fact data of the policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The fact data of the policy.",
        SerializedName = @"factData",
        PossibleTypes = new [] { typeof(string) })]
        string FactData { get; set; }
        /// <summary>
        /// The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.",
        SerializedName = @"factName",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.PolicyFactName) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.PolicyFactName? FactName { get; set; }
        /// <summary>The provisioning status of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning status of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>The status of the policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The status of the policy.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.PolicyStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.PolicyStatus? Status { get; set; }
        /// <summary>
        /// The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy).",
        SerializedName = @"threshold",
        PossibleTypes = new [] { typeof(string) })]
        string Threshold { get; set; }
        /// <summary>The unique immutable identifier of a resource (Guid).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The unique immutable identifier of a resource (Guid).",
        SerializedName = @"uniqueIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string UniqueIdentifier { get;  }

    }
    /// A Policy.
    internal partial interface IPolicyInternal :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal
    {
        /// <summary>The creation date of the policy.</summary>
        global::System.DateTime? CreatedDate { get; set; }
        /// <summary>The description of the policy.</summary>
        string Description { get; set; }
        /// <summary>The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.PolicyEvaluatorType? EvaluatorType { get; set; }
        /// <summary>The fact data of the policy.</summary>
        string FactData { get; set; }
        /// <summary>
        /// The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.PolicyFactName? FactName { get; set; }
        /// <summary>The properties of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IPolicyProperties Property { get; set; }
        /// <summary>The provisioning status of the resource.</summary>
        string ProvisioningState { get; set; }
        /// <summary>The status of the policy.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.PolicyStatus? Status { get; set; }
        /// <summary>
        /// The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy).
        /// </summary>
        string Threshold { get; set; }
        /// <summary>The unique immutable identifier of a resource (Guid).</summary>
        string UniqueIdentifier { get; set; }

    }
}