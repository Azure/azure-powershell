// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915
{
    using Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.PowerShell;

    /// <summary>Properties of a custom image.</summary>
    [System.ComponentModel.TypeConverter(typeof(CustomImagePropertiesTypeConverter))]
    public partial class CustomImageProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.CustomImageProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal CustomImageProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("VM"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).VM = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromVM) content.GetValueForProperty("VM",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).VM, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.CustomImagePropertiesFromVMTypeConverter.ConvertFrom);
            }
            if (content.Contains("Vhd"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).Vhd = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesCustom) content.GetValueForProperty("Vhd",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).Vhd, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.CustomImagePropertiesCustomTypeConverter.ConvertFrom);
            }
            if (content.Contains("CustomImagePlan"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).CustomImagePlan = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromPlan) content.GetValueForProperty("CustomImagePlan",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).CustomImagePlan, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.CustomImagePropertiesFromPlanTypeConverter.ConvertFrom);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("Author"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).Author = (string) content.GetValueForProperty("Author",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).Author, global::System.Convert.ToString);
            }
            if (content.Contains("CreationDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).CreationDate = (global::System.DateTime?) content.GetValueForProperty("CreationDate",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).CreationDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ManagedImageId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).ManagedImageId = (string) content.GetValueForProperty("ManagedImageId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).ManagedImageId, global::System.Convert.ToString);
            }
            if (content.Contains("ManagedSnapshotId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).ManagedSnapshotId = (string) content.GetValueForProperty("ManagedSnapshotId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).ManagedSnapshotId, global::System.Convert.ToString);
            }
            if (content.Contains("DataDiskStorageInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).DataDiskStorageInfo = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskStorageTypeInfo[]) content.GetValueForProperty("DataDiskStorageInfo",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).DataDiskStorageInfo, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskStorageTypeInfo>(__y, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.DataDiskStorageTypeInfoTypeConverter.ConvertFrom));
            }
            if (content.Contains("IsPlanAuthorized"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).IsPlanAuthorized = (bool?) content.GetValueForProperty("IsPlanAuthorized",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).IsPlanAuthorized, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("UniqueIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).UniqueIdentifier = (string) content.GetValueForProperty("UniqueIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).UniqueIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("VMWindowsOsinfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).VMWindowsOsinfo = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IWindowsOSInfo) content.GetValueForProperty("VMWindowsOsinfo",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).VMWindowsOsinfo, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.WindowsOSInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMLinuxOsinfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).VMLinuxOsinfo = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILinuxOSInfo) content.GetValueForProperty("VMLinuxOsinfo",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).VMLinuxOsinfo, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LinuxOSInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMSourceVmid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).VMSourceVmid = (string) content.GetValueForProperty("VMSourceVmid",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).VMSourceVmid, global::System.Convert.ToString);
            }
            if (content.Contains("VhdImageName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).VhdImageName = (string) content.GetValueForProperty("VhdImageName",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).VhdImageName, global::System.Convert.ToString);
            }
            if (content.Contains("VhdSysPrep"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).VhdSysPrep = (bool?) content.GetValueForProperty("VhdSysPrep",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).VhdSysPrep, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("VhdOSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).VhdOSType = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.CustomImageOSType) content.GetValueForProperty("VhdOSType",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).VhdOSType, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.CustomImageOSType.CreateFrom);
            }
            if (content.Contains("CustomImagePlanId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).CustomImagePlanId = (string) content.GetValueForProperty("CustomImagePlanId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).CustomImagePlanId, global::System.Convert.ToString);
            }
            if (content.Contains("CustomImagePlanPublisher"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).CustomImagePlanPublisher = (string) content.GetValueForProperty("CustomImagePlanPublisher",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).CustomImagePlanPublisher, global::System.Convert.ToString);
            }
            if (content.Contains("CustomImagePlanOffer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).CustomImagePlanOffer = (string) content.GetValueForProperty("CustomImagePlanOffer",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).CustomImagePlanOffer, global::System.Convert.ToString);
            }
            if (content.Contains("WindowOSInfoWindowsOsstate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).WindowOSInfoWindowsOsstate = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.WindowsOSState?) content.GetValueForProperty("WindowOSInfoWindowsOsstate",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).WindowOSInfoWindowsOsstate, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.WindowsOSState.CreateFrom);
            }
            if (content.Contains("LinuxOSInfoLinuxOsstate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).LinuxOSInfoLinuxOsstate = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.LinuxOSState?) content.GetValueForProperty("LinuxOSInfoLinuxOsstate",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).LinuxOSInfoLinuxOsstate, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.LinuxOSState.CreateFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.CustomImageProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal CustomImageProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("VM"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).VM = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromVM) content.GetValueForProperty("VM",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).VM, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.CustomImagePropertiesFromVMTypeConverter.ConvertFrom);
            }
            if (content.Contains("Vhd"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).Vhd = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesCustom) content.GetValueForProperty("Vhd",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).Vhd, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.CustomImagePropertiesCustomTypeConverter.ConvertFrom);
            }
            if (content.Contains("CustomImagePlan"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).CustomImagePlan = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromPlan) content.GetValueForProperty("CustomImagePlan",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).CustomImagePlan, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.CustomImagePropertiesFromPlanTypeConverter.ConvertFrom);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("Author"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).Author = (string) content.GetValueForProperty("Author",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).Author, global::System.Convert.ToString);
            }
            if (content.Contains("CreationDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).CreationDate = (global::System.DateTime?) content.GetValueForProperty("CreationDate",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).CreationDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ManagedImageId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).ManagedImageId = (string) content.GetValueForProperty("ManagedImageId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).ManagedImageId, global::System.Convert.ToString);
            }
            if (content.Contains("ManagedSnapshotId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).ManagedSnapshotId = (string) content.GetValueForProperty("ManagedSnapshotId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).ManagedSnapshotId, global::System.Convert.ToString);
            }
            if (content.Contains("DataDiskStorageInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).DataDiskStorageInfo = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskStorageTypeInfo[]) content.GetValueForProperty("DataDiskStorageInfo",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).DataDiskStorageInfo, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskStorageTypeInfo>(__y, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.DataDiskStorageTypeInfoTypeConverter.ConvertFrom));
            }
            if (content.Contains("IsPlanAuthorized"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).IsPlanAuthorized = (bool?) content.GetValueForProperty("IsPlanAuthorized",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).IsPlanAuthorized, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("UniqueIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).UniqueIdentifier = (string) content.GetValueForProperty("UniqueIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).UniqueIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("VMWindowsOsinfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).VMWindowsOsinfo = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IWindowsOSInfo) content.GetValueForProperty("VMWindowsOsinfo",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).VMWindowsOsinfo, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.WindowsOSInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMLinuxOsinfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).VMLinuxOsinfo = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILinuxOSInfo) content.GetValueForProperty("VMLinuxOsinfo",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).VMLinuxOsinfo, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LinuxOSInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMSourceVmid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).VMSourceVmid = (string) content.GetValueForProperty("VMSourceVmid",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).VMSourceVmid, global::System.Convert.ToString);
            }
            if (content.Contains("VhdImageName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).VhdImageName = (string) content.GetValueForProperty("VhdImageName",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).VhdImageName, global::System.Convert.ToString);
            }
            if (content.Contains("VhdSysPrep"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).VhdSysPrep = (bool?) content.GetValueForProperty("VhdSysPrep",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).VhdSysPrep, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("VhdOSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).VhdOSType = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.CustomImageOSType) content.GetValueForProperty("VhdOSType",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).VhdOSType, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.CustomImageOSType.CreateFrom);
            }
            if (content.Contains("CustomImagePlanId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).CustomImagePlanId = (string) content.GetValueForProperty("CustomImagePlanId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).CustomImagePlanId, global::System.Convert.ToString);
            }
            if (content.Contains("CustomImagePlanPublisher"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).CustomImagePlanPublisher = (string) content.GetValueForProperty("CustomImagePlanPublisher",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).CustomImagePlanPublisher, global::System.Convert.ToString);
            }
            if (content.Contains("CustomImagePlanOffer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).CustomImagePlanOffer = (string) content.GetValueForProperty("CustomImagePlanOffer",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).CustomImagePlanOffer, global::System.Convert.ToString);
            }
            if (content.Contains("WindowOSInfoWindowsOsstate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).WindowOSInfoWindowsOsstate = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.WindowsOSState?) content.GetValueForProperty("WindowOSInfoWindowsOsstate",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).WindowOSInfoWindowsOsstate, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.WindowsOSState.CreateFrom);
            }
            if (content.Contains("LinuxOSInfoLinuxOsstate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).LinuxOSInfoLinuxOsstate = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.LinuxOSState?) content.GetValueForProperty("LinuxOSInfoLinuxOsstate",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)this).LinuxOSInfoLinuxOsstate, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.LinuxOSState.CreateFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.CustomImageProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImageProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImageProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new CustomImageProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.CustomImageProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImageProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImageProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new CustomImageProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="CustomImageProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImageProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Properties of a custom image.
    [System.ComponentModel.TypeConverter(typeof(CustomImagePropertiesTypeConverter))]
    public partial interface ICustomImageProperties

    {

    }
}