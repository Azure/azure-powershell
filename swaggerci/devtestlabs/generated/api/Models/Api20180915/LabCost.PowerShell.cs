// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915
{
    using Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.PowerShell;

    /// <summary>A cost item.</summary>
    [System.ComponentModel.TypeConverter(typeof(LabCostTypeConverter))]
    public partial class LabCost
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabCost"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCost" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCost DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new LabCost(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabCost"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCost" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCost DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new LabCost(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="LabCost" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCost FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabCost"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal LabCost(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabCostPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("TargetCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).TargetCost = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ITargetCostProperties) content.GetValueForProperty("TargetCost",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).TargetCost, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.TargetCostPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Summary"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).Summary = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostSummaryProperties) content.GetValueForProperty("Summary",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).Summary, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabCostSummaryPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Detail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).Detail = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostDetailsProperties[]) content.GetValueForProperty("Detail",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).Detail, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostDetailsProperties>(__y, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabCostDetailsPropertiesTypeConverter.ConvertFrom));
            }
            if (content.Contains("ResourceCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).ResourceCost = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabResourceCostProperties[]) content.GetValueForProperty("ResourceCost",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).ResourceCost, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabResourceCostProperties>(__y, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabResourceCostPropertiesTypeConverter.ConvertFrom));
            }
            if (content.Contains("CurrencyCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).CurrencyCode = (string) content.GetValueForProperty("CurrencyCode",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).CurrencyCode, global::System.Convert.ToString);
            }
            if (content.Contains("StartDateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).StartDateTime = (global::System.DateTime?) content.GetValueForProperty("StartDateTime",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).StartDateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("EndDateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).EndDateTime = (global::System.DateTime?) content.GetValueForProperty("EndDateTime",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).EndDateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("CreatedDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).CreatedDate = (global::System.DateTime?) content.GetValueForProperty("CreatedDate",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).CreatedDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("UniqueIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).UniqueIdentifier = (string) content.GetValueForProperty("UniqueIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).UniqueIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("TargetCostStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).TargetCostStatus = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.TargetCostStatus?) content.GetValueForProperty("TargetCostStatus",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).TargetCostStatus, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.TargetCostStatus.CreateFrom);
            }
            if (content.Contains("TargetCostTarget"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).TargetCostTarget = (int?) content.GetValueForProperty("TargetCostTarget",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).TargetCostTarget, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("TargetCostThreshold"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).TargetCostThreshold = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICostThresholdProperties[]) content.GetValueForProperty("TargetCostThreshold",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).TargetCostThreshold, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICostThresholdProperties>(__y, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.CostThresholdPropertiesTypeConverter.ConvertFrom));
            }
            if (content.Contains("TargetCostCycleStartDateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).TargetCostCycleStartDateTime = (global::System.DateTime?) content.GetValueForProperty("TargetCostCycleStartDateTime",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).TargetCostCycleStartDateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("TargetCostCycleEndDateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).TargetCostCycleEndDateTime = (global::System.DateTime?) content.GetValueForProperty("TargetCostCycleEndDateTime",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).TargetCostCycleEndDateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("TargetCostCycleType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).TargetCostCycleType = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.ReportingCycleType?) content.GetValueForProperty("TargetCostCycleType",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).TargetCostCycleType, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.ReportingCycleType.CreateFrom);
            }
            if (content.Contains("SummaryEstimatedLabCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).SummaryEstimatedLabCost = (double?) content.GetValueForProperty("SummaryEstimatedLabCost",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).SummaryEstimatedLabCost, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabCost"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal LabCost(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabCostPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("TargetCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).TargetCost = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ITargetCostProperties) content.GetValueForProperty("TargetCost",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).TargetCost, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.TargetCostPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Summary"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).Summary = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostSummaryProperties) content.GetValueForProperty("Summary",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).Summary, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabCostSummaryPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Detail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).Detail = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostDetailsProperties[]) content.GetValueForProperty("Detail",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).Detail, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostDetailsProperties>(__y, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabCostDetailsPropertiesTypeConverter.ConvertFrom));
            }
            if (content.Contains("ResourceCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).ResourceCost = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabResourceCostProperties[]) content.GetValueForProperty("ResourceCost",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).ResourceCost, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabResourceCostProperties>(__y, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabResourceCostPropertiesTypeConverter.ConvertFrom));
            }
            if (content.Contains("CurrencyCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).CurrencyCode = (string) content.GetValueForProperty("CurrencyCode",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).CurrencyCode, global::System.Convert.ToString);
            }
            if (content.Contains("StartDateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).StartDateTime = (global::System.DateTime?) content.GetValueForProperty("StartDateTime",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).StartDateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("EndDateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).EndDateTime = (global::System.DateTime?) content.GetValueForProperty("EndDateTime",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).EndDateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("CreatedDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).CreatedDate = (global::System.DateTime?) content.GetValueForProperty("CreatedDate",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).CreatedDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("UniqueIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).UniqueIdentifier = (string) content.GetValueForProperty("UniqueIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).UniqueIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("TargetCostStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).TargetCostStatus = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.TargetCostStatus?) content.GetValueForProperty("TargetCostStatus",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).TargetCostStatus, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.TargetCostStatus.CreateFrom);
            }
            if (content.Contains("TargetCostTarget"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).TargetCostTarget = (int?) content.GetValueForProperty("TargetCostTarget",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).TargetCostTarget, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("TargetCostThreshold"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).TargetCostThreshold = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICostThresholdProperties[]) content.GetValueForProperty("TargetCostThreshold",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).TargetCostThreshold, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICostThresholdProperties>(__y, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.CostThresholdPropertiesTypeConverter.ConvertFrom));
            }
            if (content.Contains("TargetCostCycleStartDateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).TargetCostCycleStartDateTime = (global::System.DateTime?) content.GetValueForProperty("TargetCostCycleStartDateTime",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).TargetCostCycleStartDateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("TargetCostCycleEndDateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).TargetCostCycleEndDateTime = (global::System.DateTime?) content.GetValueForProperty("TargetCostCycleEndDateTime",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).TargetCostCycleEndDateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("TargetCostCycleType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).TargetCostCycleType = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.ReportingCycleType?) content.GetValueForProperty("TargetCostCycleType",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).TargetCostCycleType, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.ReportingCycleType.CreateFrom);
            }
            if (content.Contains("SummaryEstimatedLabCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).SummaryEstimatedLabCost = (double?) content.GetValueForProperty("SummaryEstimatedLabCost",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostInternal)this).SummaryEstimatedLabCost, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// A cost item.
    [System.ComponentModel.TypeConverter(typeof(LabCostTypeConverter))]
    public partial interface ILabCost

    {

    }
}