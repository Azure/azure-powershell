// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Extensions;

    /// <summary>Properties of a custom image.</summary>
    public partial class CustomImageProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImageProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal
    {

        /// <summary>Backing field for <see cref="Author" /> property.</summary>
        private string _author;

        /// <summary>The author of the custom image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string Author { get => this._author; set => this._author = value; }

        /// <summary>Backing field for <see cref="CreationDate" /> property.</summary>
        private global::System.DateTime? _creationDate;

        /// <summary>The creation date of the custom image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public global::System.DateTime? CreationDate { get => this._creationDate; }

        /// <summary>Backing field for <see cref="CustomImagePlan" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromPlan _customImagePlan;

        /// <summary>Storage information about the plan related to this custom image</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromPlan CustomImagePlan { get => (this._customImagePlan = this._customImagePlan ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.CustomImagePropertiesFromPlan()); set => this._customImagePlan = value; }

        /// <summary>The id of the plan, equivalent to name of the plan</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string CustomImagePlanId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromPlanInternal)CustomImagePlan).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromPlanInternal)CustomImagePlan).Id = value ?? null; }

        /// <summary>
        /// The offer for the plan from the marketplace image the custom image is derived from
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string CustomImagePlanOffer { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromPlanInternal)CustomImagePlan).Offer; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromPlanInternal)CustomImagePlan).Offer = value ?? null; }

        /// <summary>
        /// The publisher for the plan from the marketplace image the custom image is derived from
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string CustomImagePlanPublisher { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromPlanInternal)CustomImagePlan).Publisher; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromPlanInternal)CustomImagePlan).Publisher = value ?? null; }

        /// <summary>Backing field for <see cref="DataDiskStorageInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskStorageTypeInfo[] _dataDiskStorageInfo;

        /// <summary>Storage information about the data disks present in the custom image</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskStorageTypeInfo[] DataDiskStorageInfo { get => this._dataDiskStorageInfo; set => this._dataDiskStorageInfo = value; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>The description of the custom image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="IsPlanAuthorized" /> property.</summary>
        private bool? _isPlanAuthorized;

        /// <summary>
        /// Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public bool? IsPlanAuthorized { get => this._isPlanAuthorized; set => this._isPlanAuthorized = value; }

        /// <summary>
        /// The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.LinuxOSState? LinuxOSInfoLinuxOsstate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromVMInternal)VM).LinuxOSInfoLinuxOsstate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromVMInternal)VM).LinuxOSInfoLinuxOsstate = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.LinuxOSState)""); }

        /// <summary>Backing field for <see cref="ManagedImageId" /> property.</summary>
        private string _managedImageId;

        /// <summary>The Managed Image Id backing the custom image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string ManagedImageId { get => this._managedImageId; set => this._managedImageId = value; }

        /// <summary>Backing field for <see cref="ManagedSnapshotId" /> property.</summary>
        private string _managedSnapshotId;

        /// <summary>The Managed Snapshot Id backing the custom image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string ManagedSnapshotId { get => this._managedSnapshotId; set => this._managedSnapshotId = value; }

        /// <summary>Internal Acessors for CreationDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal.CreationDate { get => this._creationDate; set { {_creationDate = value;} } }

        /// <summary>Internal Acessors for CustomImagePlan</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromPlan Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal.CustomImagePlan { get => (this._customImagePlan = this._customImagePlan ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.CustomImagePropertiesFromPlan()); set { {_customImagePlan = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for UniqueIdentifier</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal.UniqueIdentifier { get => this._uniqueIdentifier; set { {_uniqueIdentifier = value;} } }

        /// <summary>Internal Acessors for VM</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromVM Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal.VM { get => (this._vM = this._vM ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.CustomImagePropertiesFromVM()); set { {_vM = value;} } }

        /// <summary>Internal Acessors for VMLinuxOsinfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILinuxOSInfo Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal.VMLinuxOsinfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromVMInternal)VM).LinuxOSInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromVMInternal)VM).LinuxOSInfo = value; }

        /// <summary>Internal Acessors for VMWindowsOsinfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IWindowsOSInfo Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal.VMWindowsOsinfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromVMInternal)VM).WindowsOSInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromVMInternal)VM).WindowsOSInfo = value; }

        /// <summary>Internal Acessors for Vhd</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesCustom Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal.Vhd { get => (this._vhd = this._vhd ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.CustomImagePropertiesCustom()); set { {_vhd = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>The provisioning status of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="UniqueIdentifier" /> property.</summary>
        private string _uniqueIdentifier;

        /// <summary>The unique immutable identifier of a resource (Guid).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string UniqueIdentifier { get => this._uniqueIdentifier; }

        /// <summary>Backing field for <see cref="VM" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromVM _vM;

        /// <summary>The virtual machine from which the image is to be created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromVM VM { get => (this._vM = this._vM ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.CustomImagePropertiesFromVM()); set => this._vM = value; }

        /// <summary>The source vm identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string VMSourceVmid { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromVMInternal)VM).SourceVMId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromVMInternal)VM).SourceVMId = value ?? null; }

        /// <summary>Backing field for <see cref="Vhd" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesCustom _vhd;

        /// <summary>The VHD from which the image is to be created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesCustom Vhd { get => (this._vhd = this._vhd ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.CustomImagePropertiesCustom()); set => this._vhd = value; }

        /// <summary>The image name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string VhdImageName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesCustomInternal)Vhd).ImageName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesCustomInternal)Vhd).ImageName = value ?? null; }

        /// <summary>The OS type of the custom image (i.e. Windows, Linux)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.CustomImageOSType? VhdOSType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesCustomInternal)Vhd).OSType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesCustomInternal)Vhd).OSType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.CustomImageOSType)""); }

        /// <summary>Indicates whether sysprep has been run on the VHD.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public bool? VhdSysPrep { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesCustomInternal)Vhd).SysPrep; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesCustomInternal)Vhd).SysPrep = value ?? default(bool); }

        /// <summary>
        /// The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.WindowsOSState? WindowOSInfoWindowsOsstate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromVMInternal)VM).WindowOSInfoWindowsOsstate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromVMInternal)VM).WindowOSInfoWindowsOsstate = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.WindowsOSState)""); }

        /// <summary>Creates an new <see cref="CustomImageProperties" /> instance.</summary>
        public CustomImageProperties()
        {

        }
    }
    /// Properties of a custom image.
    public partial interface ICustomImageProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.IJsonSerializable
    {
        /// <summary>The author of the custom image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The author of the custom image.",
        SerializedName = @"author",
        PossibleTypes = new [] { typeof(string) })]
        string Author { get; set; }
        /// <summary>The creation date of the custom image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The creation date of the custom image.",
        SerializedName = @"creationDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreationDate { get;  }
        /// <summary>The id of the plan, equivalent to name of the plan</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The id of the plan, equivalent to name of the plan",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string CustomImagePlanId { get; set; }
        /// <summary>
        /// The offer for the plan from the marketplace image the custom image is derived from
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The offer for the plan from the marketplace image the custom image is derived from",
        SerializedName = @"offer",
        PossibleTypes = new [] { typeof(string) })]
        string CustomImagePlanOffer { get; set; }
        /// <summary>
        /// The publisher for the plan from the marketplace image the custom image is derived from
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The publisher for the plan from the marketplace image the custom image is derived from",
        SerializedName = @"publisher",
        PossibleTypes = new [] { typeof(string) })]
        string CustomImagePlanPublisher { get; set; }
        /// <summary>Storage information about the data disks present in the custom image</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage information about the data disks present in the custom image",
        SerializedName = @"dataDiskStorageInfo",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskStorageTypeInfo) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskStorageTypeInfo[] DataDiskStorageInfo { get; set; }
        /// <summary>The description of the custom image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The description of the custom image.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>
        /// Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment",
        SerializedName = @"isPlanAuthorized",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsPlanAuthorized { get; set; }
        /// <summary>
        /// The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).",
        SerializedName = @"linuxOsState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.LinuxOSState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.LinuxOSState? LinuxOSInfoLinuxOsstate { get; set; }
        /// <summary>The Managed Image Id backing the custom image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Managed Image Id backing the custom image.",
        SerializedName = @"managedImageId",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedImageId { get; set; }
        /// <summary>The Managed Snapshot Id backing the custom image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Managed Snapshot Id backing the custom image.",
        SerializedName = @"managedSnapshotId",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedSnapshotId { get; set; }
        /// <summary>The provisioning status of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning status of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>The unique immutable identifier of a resource (Guid).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The unique immutable identifier of a resource (Guid).",
        SerializedName = @"uniqueIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string UniqueIdentifier { get;  }
        /// <summary>The source vm identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The source vm identifier.",
        SerializedName = @"sourceVmId",
        PossibleTypes = new [] { typeof(string) })]
        string VMSourceVmid { get; set; }
        /// <summary>The image name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The image name.",
        SerializedName = @"imageName",
        PossibleTypes = new [] { typeof(string) })]
        string VhdImageName { get; set; }
        /// <summary>The OS type of the custom image (i.e. Windows, Linux)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The OS type of the custom image (i.e. Windows, Linux)",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.CustomImageOSType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.CustomImageOSType? VhdOSType { get; set; }
        /// <summary>Indicates whether sysprep has been run on the VHD.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether sysprep has been run on the VHD.",
        SerializedName = @"sysPrep",
        PossibleTypes = new [] { typeof(bool) })]
        bool? VhdSysPrep { get; set; }
        /// <summary>
        /// The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).",
        SerializedName = @"windowsOsState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.WindowsOSState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.WindowsOSState? WindowOSInfoWindowsOsstate { get; set; }

    }
    /// Properties of a custom image.
    internal partial interface ICustomImagePropertiesInternal

    {
        /// <summary>The author of the custom image.</summary>
        string Author { get; set; }
        /// <summary>The creation date of the custom image.</summary>
        global::System.DateTime? CreationDate { get; set; }
        /// <summary>Storage information about the plan related to this custom image</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromPlan CustomImagePlan { get; set; }
        /// <summary>The id of the plan, equivalent to name of the plan</summary>
        string CustomImagePlanId { get; set; }
        /// <summary>
        /// The offer for the plan from the marketplace image the custom image is derived from
        /// </summary>
        string CustomImagePlanOffer { get; set; }
        /// <summary>
        /// The publisher for the plan from the marketplace image the custom image is derived from
        /// </summary>
        string CustomImagePlanPublisher { get; set; }
        /// <summary>Storage information about the data disks present in the custom image</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskStorageTypeInfo[] DataDiskStorageInfo { get; set; }
        /// <summary>The description of the custom image.</summary>
        string Description { get; set; }
        /// <summary>
        /// Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment
        /// </summary>
        bool? IsPlanAuthorized { get; set; }
        /// <summary>
        /// The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.LinuxOSState? LinuxOSInfoLinuxOsstate { get; set; }
        /// <summary>The Managed Image Id backing the custom image.</summary>
        string ManagedImageId { get; set; }
        /// <summary>The Managed Snapshot Id backing the custom image.</summary>
        string ManagedSnapshotId { get; set; }
        /// <summary>The provisioning status of the resource.</summary>
        string ProvisioningState { get; set; }
        /// <summary>The unique immutable identifier of a resource (Guid).</summary>
        string UniqueIdentifier { get; set; }
        /// <summary>The virtual machine from which the image is to be created.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromVM VM { get; set; }
        /// <summary>The Linux OS information of the VM.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILinuxOSInfo VMLinuxOsinfo { get; set; }
        /// <summary>The source vm identifier.</summary>
        string VMSourceVmid { get; set; }
        /// <summary>The Windows OS information of the VM.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IWindowsOSInfo VMWindowsOsinfo { get; set; }
        /// <summary>The VHD from which the image is to be created.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesCustom Vhd { get; set; }
        /// <summary>The image name.</summary>
        string VhdImageName { get; set; }
        /// <summary>The OS type of the custom image (i.e. Windows, Linux)</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.CustomImageOSType? VhdOSType { get; set; }
        /// <summary>Indicates whether sysprep has been run on the VHD.</summary>
        bool? VhdSysPrep { get; set; }
        /// <summary>
        /// The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.WindowsOSState? WindowOSInfoWindowsOsstate { get; set; }

    }
}