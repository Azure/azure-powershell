// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915
{
    using Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.PowerShell;

    /// <summary>Properties of a lab.</summary>
    [System.ComponentModel.TypeConverter(typeof(LabPropertiesTypeConverter))]
    public partial class LabProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new LabProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new LabProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="LabProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal LabProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Announcement"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).Announcement = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabAnnouncementProperties) content.GetValueForProperty("Announcement",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).Announcement, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabAnnouncementPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Support"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).Support = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabSupportProperties) content.GetValueForProperty("Support",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).Support, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabSupportPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("DefaultStorageAccount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).DefaultStorageAccount = (string) content.GetValueForProperty("DefaultStorageAccount",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).DefaultStorageAccount, global::System.Convert.ToString);
            }
            if (content.Contains("DefaultPremiumStorageAccount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).DefaultPremiumStorageAccount = (string) content.GetValueForProperty("DefaultPremiumStorageAccount",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).DefaultPremiumStorageAccount, global::System.Convert.ToString);
            }
            if (content.Contains("ArtifactsStorageAccount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).ArtifactsStorageAccount = (string) content.GetValueForProperty("ArtifactsStorageAccount",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).ArtifactsStorageAccount, global::System.Convert.ToString);
            }
            if (content.Contains("PremiumDataDiskStorageAccount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).PremiumDataDiskStorageAccount = (string) content.GetValueForProperty("PremiumDataDiskStorageAccount",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).PremiumDataDiskStorageAccount, global::System.Convert.ToString);
            }
            if (content.Contains("VaultName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).VaultName = (string) content.GetValueForProperty("VaultName",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).VaultName, global::System.Convert.ToString);
            }
            if (content.Contains("LabStorageType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).LabStorageType = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.StorageType?) content.GetValueForProperty("LabStorageType",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).LabStorageType, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.StorageType.CreateFrom);
            }
            if (content.Contains("MandatoryArtifactsResourceIdsLinux"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).MandatoryArtifactsResourceIdsLinux = (string[]) content.GetValueForProperty("MandatoryArtifactsResourceIdsLinux",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).MandatoryArtifactsResourceIdsLinux, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("MandatoryArtifactsResourceIdsWindow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).MandatoryArtifactsResourceIdsWindow = (string[]) content.GetValueForProperty("MandatoryArtifactsResourceIdsWindow",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).MandatoryArtifactsResourceIdsWindow, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CreatedDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).CreatedDate = (global::System.DateTime?) content.GetValueForProperty("CreatedDate",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).CreatedDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("PremiumDataDisk"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).PremiumDataDisk = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.PremiumDataDisk?) content.GetValueForProperty("PremiumDataDisk",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).PremiumDataDisk, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.PremiumDataDisk.CreateFrom);
            }
            if (content.Contains("EnvironmentPermission"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).EnvironmentPermission = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnvironmentPermission?) content.GetValueForProperty("EnvironmentPermission",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).EnvironmentPermission, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnvironmentPermission.CreateFrom);
            }
            if (content.Contains("VMCreationResourceGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).VMCreationResourceGroup = (string) content.GetValueForProperty("VMCreationResourceGroup",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).VMCreationResourceGroup, global::System.Convert.ToString);
            }
            if (content.Contains("PublicIPId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).PublicIPId = (string) content.GetValueForProperty("PublicIPId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).PublicIPId, global::System.Convert.ToString);
            }
            if (content.Contains("LoadBalancerId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).LoadBalancerId = (string) content.GetValueForProperty("LoadBalancerId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).LoadBalancerId, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkSecurityGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).NetworkSecurityGroupId = (string) content.GetValueForProperty("NetworkSecurityGroupId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).NetworkSecurityGroupId, global::System.Convert.ToString);
            }
            if (content.Contains("ExtendedProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).ExtendedProperty = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesExtendedProperties) content.GetValueForProperty("ExtendedProperty",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).ExtendedProperty, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabPropertiesExtendedPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("UniqueIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).UniqueIdentifier = (string) content.GetValueForProperty("UniqueIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).UniqueIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("AnnouncementTitle"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).AnnouncementTitle = (string) content.GetValueForProperty("AnnouncementTitle",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).AnnouncementTitle, global::System.Convert.ToString);
            }
            if (content.Contains("AnnouncementMarkdown"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).AnnouncementMarkdown = (string) content.GetValueForProperty("AnnouncementMarkdown",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).AnnouncementMarkdown, global::System.Convert.ToString);
            }
            if (content.Contains("AnnouncementEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).AnnouncementEnabled = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus?) content.GetValueForProperty("AnnouncementEnabled",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).AnnouncementEnabled, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus.CreateFrom);
            }
            if (content.Contains("AnnouncementExpirationDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).AnnouncementExpirationDate = (global::System.DateTime?) content.GetValueForProperty("AnnouncementExpirationDate",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).AnnouncementExpirationDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("AnnouncementExpired"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).AnnouncementExpired = (bool?) content.GetValueForProperty("AnnouncementExpired",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).AnnouncementExpired, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AnnouncementProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).AnnouncementProvisioningState = (string) content.GetValueForProperty("AnnouncementProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).AnnouncementProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("AnnouncementUniqueIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).AnnouncementUniqueIdentifier = (string) content.GetValueForProperty("AnnouncementUniqueIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).AnnouncementUniqueIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("SupportEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).SupportEnabled = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus?) content.GetValueForProperty("SupportEnabled",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).SupportEnabled, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus.CreateFrom);
            }
            if (content.Contains("SupportMarkdown"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).SupportMarkdown = (string) content.GetValueForProperty("SupportMarkdown",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).SupportMarkdown, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal LabProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Announcement"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).Announcement = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabAnnouncementProperties) content.GetValueForProperty("Announcement",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).Announcement, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabAnnouncementPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Support"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).Support = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabSupportProperties) content.GetValueForProperty("Support",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).Support, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabSupportPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("DefaultStorageAccount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).DefaultStorageAccount = (string) content.GetValueForProperty("DefaultStorageAccount",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).DefaultStorageAccount, global::System.Convert.ToString);
            }
            if (content.Contains("DefaultPremiumStorageAccount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).DefaultPremiumStorageAccount = (string) content.GetValueForProperty("DefaultPremiumStorageAccount",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).DefaultPremiumStorageAccount, global::System.Convert.ToString);
            }
            if (content.Contains("ArtifactsStorageAccount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).ArtifactsStorageAccount = (string) content.GetValueForProperty("ArtifactsStorageAccount",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).ArtifactsStorageAccount, global::System.Convert.ToString);
            }
            if (content.Contains("PremiumDataDiskStorageAccount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).PremiumDataDiskStorageAccount = (string) content.GetValueForProperty("PremiumDataDiskStorageAccount",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).PremiumDataDiskStorageAccount, global::System.Convert.ToString);
            }
            if (content.Contains("VaultName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).VaultName = (string) content.GetValueForProperty("VaultName",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).VaultName, global::System.Convert.ToString);
            }
            if (content.Contains("LabStorageType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).LabStorageType = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.StorageType?) content.GetValueForProperty("LabStorageType",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).LabStorageType, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.StorageType.CreateFrom);
            }
            if (content.Contains("MandatoryArtifactsResourceIdsLinux"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).MandatoryArtifactsResourceIdsLinux = (string[]) content.GetValueForProperty("MandatoryArtifactsResourceIdsLinux",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).MandatoryArtifactsResourceIdsLinux, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("MandatoryArtifactsResourceIdsWindow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).MandatoryArtifactsResourceIdsWindow = (string[]) content.GetValueForProperty("MandatoryArtifactsResourceIdsWindow",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).MandatoryArtifactsResourceIdsWindow, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CreatedDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).CreatedDate = (global::System.DateTime?) content.GetValueForProperty("CreatedDate",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).CreatedDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("PremiumDataDisk"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).PremiumDataDisk = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.PremiumDataDisk?) content.GetValueForProperty("PremiumDataDisk",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).PremiumDataDisk, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.PremiumDataDisk.CreateFrom);
            }
            if (content.Contains("EnvironmentPermission"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).EnvironmentPermission = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnvironmentPermission?) content.GetValueForProperty("EnvironmentPermission",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).EnvironmentPermission, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnvironmentPermission.CreateFrom);
            }
            if (content.Contains("VMCreationResourceGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).VMCreationResourceGroup = (string) content.GetValueForProperty("VMCreationResourceGroup",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).VMCreationResourceGroup, global::System.Convert.ToString);
            }
            if (content.Contains("PublicIPId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).PublicIPId = (string) content.GetValueForProperty("PublicIPId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).PublicIPId, global::System.Convert.ToString);
            }
            if (content.Contains("LoadBalancerId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).LoadBalancerId = (string) content.GetValueForProperty("LoadBalancerId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).LoadBalancerId, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkSecurityGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).NetworkSecurityGroupId = (string) content.GetValueForProperty("NetworkSecurityGroupId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).NetworkSecurityGroupId, global::System.Convert.ToString);
            }
            if (content.Contains("ExtendedProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).ExtendedProperty = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesExtendedProperties) content.GetValueForProperty("ExtendedProperty",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).ExtendedProperty, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabPropertiesExtendedPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("UniqueIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).UniqueIdentifier = (string) content.GetValueForProperty("UniqueIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).UniqueIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("AnnouncementTitle"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).AnnouncementTitle = (string) content.GetValueForProperty("AnnouncementTitle",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).AnnouncementTitle, global::System.Convert.ToString);
            }
            if (content.Contains("AnnouncementMarkdown"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).AnnouncementMarkdown = (string) content.GetValueForProperty("AnnouncementMarkdown",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).AnnouncementMarkdown, global::System.Convert.ToString);
            }
            if (content.Contains("AnnouncementEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).AnnouncementEnabled = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus?) content.GetValueForProperty("AnnouncementEnabled",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).AnnouncementEnabled, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus.CreateFrom);
            }
            if (content.Contains("AnnouncementExpirationDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).AnnouncementExpirationDate = (global::System.DateTime?) content.GetValueForProperty("AnnouncementExpirationDate",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).AnnouncementExpirationDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("AnnouncementExpired"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).AnnouncementExpired = (bool?) content.GetValueForProperty("AnnouncementExpired",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).AnnouncementExpired, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AnnouncementProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).AnnouncementProvisioningState = (string) content.GetValueForProperty("AnnouncementProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).AnnouncementProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("AnnouncementUniqueIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).AnnouncementUniqueIdentifier = (string) content.GetValueForProperty("AnnouncementUniqueIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).AnnouncementUniqueIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("SupportEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).SupportEnabled = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus?) content.GetValueForProperty("SupportEnabled",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).SupportEnabled, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus.CreateFrom);
            }
            if (content.Contains("SupportMarkdown"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).SupportMarkdown = (string) content.GetValueForProperty("SupportMarkdown",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)this).SupportMarkdown, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Properties of a lab.
    [System.ComponentModel.TypeConverter(typeof(LabPropertiesTypeConverter))]
    public partial interface ILabProperties

    {

    }
}