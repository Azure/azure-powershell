// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Extensions;

    /// <summary>Properties of a lab.</summary>
    public partial class LabProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject json ? new LabProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject into a new instance of <see cref="LabProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal LabProperties(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_announcement = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject>("announcement"), out var __jsonAnnouncement) ? Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabAnnouncementProperties.FromJson(__jsonAnnouncement) : Announcement;}
            {_support = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject>("support"), out var __jsonSupport) ? Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabSupportProperties.FromJson(__jsonSupport) : Support;}
            {_defaultStorageAccount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("defaultStorageAccount"), out var __jsonDefaultStorageAccount) ? (string)__jsonDefaultStorageAccount : (string)DefaultStorageAccount;}
            {_defaultPremiumStorageAccount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("defaultPremiumStorageAccount"), out var __jsonDefaultPremiumStorageAccount) ? (string)__jsonDefaultPremiumStorageAccount : (string)DefaultPremiumStorageAccount;}
            {_artifactsStorageAccount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("artifactsStorageAccount"), out var __jsonArtifactsStorageAccount) ? (string)__jsonArtifactsStorageAccount : (string)ArtifactsStorageAccount;}
            {_premiumDataDiskStorageAccount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("premiumDataDiskStorageAccount"), out var __jsonPremiumDataDiskStorageAccount) ? (string)__jsonPremiumDataDiskStorageAccount : (string)PremiumDataDiskStorageAccount;}
            {_vaultName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("vaultName"), out var __jsonVaultName) ? (string)__jsonVaultName : (string)VaultName;}
            {_labStorageType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("labStorageType"), out var __jsonLabStorageType) ? (string)__jsonLabStorageType : (string)LabStorageType;}
            {_mandatoryArtifactsResourceIdsLinux = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonArray>("mandatoryArtifactsResourceIdsLinux"), out var __jsonMandatoryArtifactsResourceIdsLinux) ? If( __jsonMandatoryArtifactsResourceIdsLinux as Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(string) (__u is Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString __t ? (string)(__t.ToString()) : null)) ))() : null : MandatoryArtifactsResourceIdsLinux;}
            {_mandatoryArtifactsResourceIdsWindow = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonArray>("mandatoryArtifactsResourceIdsWindows"), out var __jsonMandatoryArtifactsResourceIdsWindows) ? If( __jsonMandatoryArtifactsResourceIdsWindows as Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(string) (__p is Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString __o ? (string)(__o.ToString()) : null)) ))() : null : MandatoryArtifactsResourceIdsWindow;}
            {_createdDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("createdDate"), out var __jsonCreatedDate) ? global::System.DateTime.TryParse((string)__jsonCreatedDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonCreatedDateValue) ? __jsonCreatedDateValue : CreatedDate : CreatedDate;}
            {_premiumDataDisk = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("premiumDataDisks"), out var __jsonPremiumDataDisks) ? (string)__jsonPremiumDataDisks : (string)PremiumDataDisk;}
            {_environmentPermission = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("environmentPermission"), out var __jsonEnvironmentPermission) ? (string)__jsonEnvironmentPermission : (string)EnvironmentPermission;}
            {_vMCreationResourceGroup = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("vmCreationResourceGroup"), out var __jsonVMCreationResourceGroup) ? (string)__jsonVMCreationResourceGroup : (string)VMCreationResourceGroup;}
            {_publicIPId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("publicIpId"), out var __jsonPublicIPId) ? (string)__jsonPublicIPId : (string)PublicIPId;}
            {_loadBalancerId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("loadBalancerId"), out var __jsonLoadBalancerId) ? (string)__jsonLoadBalancerId : (string)LoadBalancerId;}
            {_networkSecurityGroupId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("networkSecurityGroupId"), out var __jsonNetworkSecurityGroupId) ? (string)__jsonNetworkSecurityGroupId : (string)NetworkSecurityGroupId;}
            {_extendedProperty = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject>("extendedProperties"), out var __jsonExtendedProperties) ? Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabPropertiesExtendedProperties.FromJson(__jsonExtendedProperties) : ExtendedProperty;}
            {_provisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)ProvisioningState;}
            {_uniqueIdentifier = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("uniqueIdentifier"), out var __jsonUniqueIdentifier) ? (string)__jsonUniqueIdentifier : (string)UniqueIdentifier;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="LabProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="LabProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._announcement ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) this._announcement.ToJson(null,serializationMode) : null, "announcement" ,container.Add );
            AddIf( null != this._support ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) this._support.ToJson(null,serializationMode) : null, "support" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._defaultStorageAccount)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._defaultStorageAccount.ToString()) : null, "defaultStorageAccount" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._defaultPremiumStorageAccount)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._defaultPremiumStorageAccount.ToString()) : null, "defaultPremiumStorageAccount" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._artifactsStorageAccount)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._artifactsStorageAccount.ToString()) : null, "artifactsStorageAccount" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._premiumDataDiskStorageAccount)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._premiumDataDiskStorageAccount.ToString()) : null, "premiumDataDiskStorageAccount" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._vaultName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._vaultName.ToString()) : null, "vaultName" ,container.Add );
            }
            AddIf( null != (((object)this._labStorageType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._labStorageType.ToString()) : null, "labStorageType" ,container.Add );
            if (null != this._mandatoryArtifactsResourceIdsLinux)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.XNodeArray();
                foreach( var __x in this._mandatoryArtifactsResourceIdsLinux )
                {
                    AddIf(null != (((object)__x)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(__x.ToString()) : null ,__w.Add);
                }
                container.Add("mandatoryArtifactsResourceIdsLinux",__w);
            }
            if (null != this._mandatoryArtifactsResourceIdsWindow)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.XNodeArray();
                foreach( var __s in this._mandatoryArtifactsResourceIdsWindow )
                {
                    AddIf(null != (((object)__s)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(__s.ToString()) : null ,__r.Add);
                }
                container.Add("mandatoryArtifactsResourceIdsWindows",__r);
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._createdDate ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._createdDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "createdDate" ,container.Add );
            }
            AddIf( null != (((object)this._premiumDataDisk)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._premiumDataDisk.ToString()) : null, "premiumDataDisks" ,container.Add );
            AddIf( null != (((object)this._environmentPermission)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._environmentPermission.ToString()) : null, "environmentPermission" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._vMCreationResourceGroup)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._vMCreationResourceGroup.ToString()) : null, "vmCreationResourceGroup" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._publicIPId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._publicIPId.ToString()) : null, "publicIpId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._loadBalancerId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._loadBalancerId.ToString()) : null, "loadBalancerId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._networkSecurityGroupId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._networkSecurityGroupId.ToString()) : null, "networkSecurityGroupId" ,container.Add );
            }
            AddIf( null != this._extendedProperty ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) this._extendedProperty.ToJson(null,serializationMode) : null, "extendedProperties" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._uniqueIdentifier)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._uniqueIdentifier.ToString()) : null, "uniqueIdentifier" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}