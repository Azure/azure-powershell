// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Extensions;

    /// <summary>Properties for creating a schedule.</summary>
    public partial class ScheduleCreationParameter :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameter,
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterInternal
    {

        /// <summary>The time of day the schedule will occur.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string DailyRecurrenceTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).DailyRecurrenceTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).DailyRecurrenceTime = value ?? null; }

        /// <summary>Minutes of the hour the schedule will run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public int? HourlyRecurrenceMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).HourlyRecurrenceMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).HourlyRecurrenceMinute = value ?? default(int); }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>The location of the new virtual machine or environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string Location { get => this._location; }

        /// <summary>Internal Acessors for DailyRecurrence</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDayDetails Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterInternal.DailyRecurrence { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).DailyRecurrence; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).DailyRecurrence = value; }

        /// <summary>Internal Acessors for HourlyRecurrence</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IHourDetails Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterInternal.HourlyRecurrence { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).HourlyRecurrence; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).HourlyRecurrence = value; }

        /// <summary>Internal Acessors for Location</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterInternal.Location { get => this._location; set { {_location = value;} } }

        /// <summary>Internal Acessors for NotificationSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INotificationSettings Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterInternal.NotificationSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).NotificationSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).NotificationSetting = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterProperties Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ScheduleCreationParameterProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for WeeklyRecurrence</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IWeekDetails Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterInternal.WeeklyRecurrence { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).WeeklyRecurrence; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).WeeklyRecurrence = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The name of the virtual machine or environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>
        /// The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string NotificationSettingEmailRecipient { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).NotificationSettingEmailRecipient; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).NotificationSettingEmailRecipient = value ?? null; }

        /// <summary>
        /// The locale to use when sending a notification (fallback for unsupported languages is EN).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string NotificationSettingNotificationLocale { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).NotificationSettingNotificationLocale; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).NotificationSettingNotificationLocale = value ?? null; }

        /// <summary>If notifications are enabled for this schedule (i.e. Enabled, Disabled).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus? NotificationSettingStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).NotificationSettingStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).NotificationSettingStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus)""); }

        /// <summary>Time in minutes before event at which notification will be sent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public int? NotificationSettingTimeInMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).NotificationSettingTimeInMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).NotificationSettingTimeInMinute = value ?? default(int); }

        /// <summary>The webhook URL to which the notification will be sent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string NotificationSettingWebhookUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).NotificationSettingWebhookUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).NotificationSettingWebhookUrl = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterProperties _property;

        /// <summary>The properties of the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ScheduleCreationParameterProperties()); set => this._property = value; }

        /// <summary>The status of the schedule (i.e. Enabled, Disabled)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus? Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).Status = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus)""); }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterTags _tag;

        /// <summary>The tags of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ScheduleCreationParameterTags()); set => this._tag = value; }

        /// <summary>The resource ID to which the schedule belongs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string TargetResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).TargetResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).TargetResourceId = value ?? null; }

        /// <summary>The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string TaskType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).TaskType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).TaskType = value ?? null; }

        /// <summary>The time zone ID (e.g. Pacific Standard time).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string TimeZoneId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).TimeZoneId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).TimeZoneId = value ?? null; }

        /// <summary>The time of the day the schedule will occur.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string WeeklyRecurrenceTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).WeeklyRecurrenceTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).WeeklyRecurrenceTime = value ?? null; }

        /// <summary>
        /// The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string[] WeeklyRecurrenceWeekday { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).WeeklyRecurrenceWeekday; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterPropertiesInternal)Property).WeeklyRecurrenceWeekday = value ?? null /* arrayOf */; }

        /// <summary>Creates an new <see cref="ScheduleCreationParameter" /> instance.</summary>
        public ScheduleCreationParameter()
        {

        }
    }
    /// Properties for creating a schedule.
    public partial interface IScheduleCreationParameter :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.IJsonSerializable
    {
        /// <summary>The time of day the schedule will occur.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time of day the schedule will occur.",
        SerializedName = @"time",
        PossibleTypes = new [] { typeof(string) })]
        string DailyRecurrenceTime { get; set; }
        /// <summary>Minutes of the hour the schedule will run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Minutes of the hour the schedule will run.",
        SerializedName = @"minute",
        PossibleTypes = new [] { typeof(int) })]
        int? HourlyRecurrenceMinute { get; set; }
        /// <summary>The location of the new virtual machine or environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The location of the new virtual machine or environment",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get;  }
        /// <summary>The name of the virtual machine or environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the virtual machine or environment",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>
        /// The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The email recipient to send notifications to (can be a list of semi-colon separated email addresses).",
        SerializedName = @"emailRecipient",
        PossibleTypes = new [] { typeof(string) })]
        string NotificationSettingEmailRecipient { get; set; }
        /// <summary>
        /// The locale to use when sending a notification (fallback for unsupported languages is EN).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The locale to use when sending a notification (fallback for unsupported languages is EN).",
        SerializedName = @"notificationLocale",
        PossibleTypes = new [] { typeof(string) })]
        string NotificationSettingNotificationLocale { get; set; }
        /// <summary>If notifications are enabled for this schedule (i.e. Enabled, Disabled).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus? NotificationSettingStatus { get; set; }
        /// <summary>Time in minutes before event at which notification will be sent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Time in minutes before event at which notification will be sent.",
        SerializedName = @"timeInMinutes",
        PossibleTypes = new [] { typeof(int) })]
        int? NotificationSettingTimeInMinute { get; set; }
        /// <summary>The webhook URL to which the notification will be sent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The webhook URL to which the notification will be sent.",
        SerializedName = @"webhookUrl",
        PossibleTypes = new [] { typeof(string) })]
        string NotificationSettingWebhookUrl { get; set; }
        /// <summary>The status of the schedule (i.e. Enabled, Disabled)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The status of the schedule (i.e. Enabled, Disabled)",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus? Status { get; set; }
        /// <summary>The tags of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tags of the resource.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterTags Tag { get; set; }
        /// <summary>The resource ID to which the schedule belongs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID to which the schedule belongs",
        SerializedName = @"targetResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string TargetResourceId { get; set; }
        /// <summary>The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).",
        SerializedName = @"taskType",
        PossibleTypes = new [] { typeof(string) })]
        string TaskType { get; set; }
        /// <summary>The time zone ID (e.g. Pacific Standard time).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time zone ID (e.g. Pacific Standard time).",
        SerializedName = @"timeZoneId",
        PossibleTypes = new [] { typeof(string) })]
        string TimeZoneId { get; set; }
        /// <summary>The time of the day the schedule will occur.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time of the day the schedule will occur.",
        SerializedName = @"time",
        PossibleTypes = new [] { typeof(string) })]
        string WeeklyRecurrenceTime { get; set; }
        /// <summary>
        /// The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
        SerializedName = @"weekdays",
        PossibleTypes = new [] { typeof(string) })]
        string[] WeeklyRecurrenceWeekday { get; set; }

    }
    /// Properties for creating a schedule.
    internal partial interface IScheduleCreationParameterInternal

    {
        /// <summary>
        /// If the schedule will occur once each day of the week, specify the daily recurrence.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDayDetails DailyRecurrence { get; set; }
        /// <summary>The time of day the schedule will occur.</summary>
        string DailyRecurrenceTime { get; set; }
        /// <summary>If the schedule will occur multiple times a day, specify the hourly recurrence.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IHourDetails HourlyRecurrence { get; set; }
        /// <summary>Minutes of the hour the schedule will run.</summary>
        int? HourlyRecurrenceMinute { get; set; }
        /// <summary>The location of the new virtual machine or environment</summary>
        string Location { get; set; }
        /// <summary>The name of the virtual machine or environment</summary>
        string Name { get; set; }
        /// <summary>Notification settings.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INotificationSettings NotificationSetting { get; set; }
        /// <summary>
        /// The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
        /// </summary>
        string NotificationSettingEmailRecipient { get; set; }
        /// <summary>
        /// The locale to use when sending a notification (fallback for unsupported languages is EN).
        /// </summary>
        string NotificationSettingNotificationLocale { get; set; }
        /// <summary>If notifications are enabled for this schedule (i.e. Enabled, Disabled).</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus? NotificationSettingStatus { get; set; }
        /// <summary>Time in minutes before event at which notification will be sent.</summary>
        int? NotificationSettingTimeInMinute { get; set; }
        /// <summary>The webhook URL to which the notification will be sent.</summary>
        string NotificationSettingWebhookUrl { get; set; }
        /// <summary>The properties of the schedule.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterProperties Property { get; set; }
        /// <summary>The status of the schedule (i.e. Enabled, Disabled)</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus? Status { get; set; }
        /// <summary>The tags of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameterTags Tag { get; set; }
        /// <summary>The resource ID to which the schedule belongs</summary>
        string TargetResourceId { get; set; }
        /// <summary>The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).</summary>
        string TaskType { get; set; }
        /// <summary>The time zone ID (e.g. Pacific Standard time).</summary>
        string TimeZoneId { get; set; }
        /// <summary>
        /// If the schedule will occur only some days of the week, specify the weekly recurrence.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IWeekDetails WeeklyRecurrence { get; set; }
        /// <summary>The time of the day the schedule will occur.</summary>
        string WeeklyRecurrenceTime { get; set; }
        /// <summary>
        /// The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
        /// </summary>
        string[] WeeklyRecurrenceWeekday { get; set; }

    }
}