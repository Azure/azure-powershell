// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Extensions;

    /// <summary>Properties of a virtual machine.</summary>
    public partial class LabVirtualMachineProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject json ? new LabVirtualMachineProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject into a new instance of <see cref="LabVirtualMachineProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal LabVirtualMachineProperties(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_artifactDeploymentStatus = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject>("artifactDeploymentStatus"), out var __jsonArtifactDeploymentStatus) ? Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ArtifactDeploymentStatusProperties.FromJson(__jsonArtifactDeploymentStatus) : ArtifactDeploymentStatus;}
            {_galleryImageReference = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject>("galleryImageReference"), out var __jsonGalleryImageReference) ? Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.GalleryImageReference.FromJson(__jsonGalleryImageReference) : GalleryImageReference;}
            {_computeVM = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject>("computeVm"), out var __jsonComputeVM) ? Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ComputeVMProperties.FromJson(__jsonComputeVM) : ComputeVM;}
            {_networkInterface = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject>("networkInterface"), out var __jsonNetworkInterface) ? Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.NetworkInterfaceProperties.FromJson(__jsonNetworkInterface) : NetworkInterface;}
            {_applicableSchedule = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject>("applicableSchedule"), out var __jsonApplicableSchedule) ? Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ApplicableSchedule.FromJson(__jsonApplicableSchedule) : ApplicableSchedule;}
            {_note = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("notes"), out var __jsonNotes) ? (string)__jsonNotes : (string)Note;}
            {_ownerObjectId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("ownerObjectId"), out var __jsonOwnerObjectId) ? (string)__jsonOwnerObjectId : (string)OwnerObjectId;}
            {_ownerUserPrincipalName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("ownerUserPrincipalName"), out var __jsonOwnerUserPrincipalName) ? (string)__jsonOwnerUserPrincipalName : (string)OwnerUserPrincipalName;}
            {_createdByUserId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("createdByUserId"), out var __jsonCreatedByUserId) ? (string)__jsonCreatedByUserId : (string)CreatedByUserId;}
            {_createdByUser = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("createdByUser"), out var __jsonCreatedByUser) ? (string)__jsonCreatedByUser : (string)CreatedByUser;}
            {_createdDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("createdDate"), out var __jsonCreatedDate) ? global::System.DateTime.TryParse((string)__jsonCreatedDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonCreatedDateValue) ? __jsonCreatedDateValue : CreatedDate : CreatedDate;}
            {_computeId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("computeId"), out var __jsonComputeId) ? (string)__jsonComputeId : (string)ComputeId;}
            {_customImageId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("customImageId"), out var __jsonCustomImageId) ? (string)__jsonCustomImageId : (string)CustomImageId;}
            {_oSType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("osType"), out var __jsonOSType) ? (string)__jsonOSType : (string)OSType;}
            {_size = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("size"), out var __jsonSize) ? (string)__jsonSize : (string)Size;}
            {_userName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("userName"), out var __jsonUserName) ? (string)__jsonUserName : (string)UserName;}
            {_password = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("password"), out var __jsonPassword) ? (string)__jsonPassword : (string)Password;}
            {_sshKey = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("sshKey"), out var __jsonSshKey) ? (string)__jsonSshKey : (string)SshKey;}
            {_isAuthenticationWithSshKey = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonBoolean>("isAuthenticationWithSshKey"), out var __jsonIsAuthenticationWithSshKey) ? (bool?)__jsonIsAuthenticationWithSshKey : IsAuthenticationWithSshKey;}
            {_fqdn = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("fqdn"), out var __jsonFqdn) ? (string)__jsonFqdn : (string)Fqdn;}
            {_labSubnetName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("labSubnetName"), out var __jsonLabSubnetName) ? (string)__jsonLabSubnetName : (string)LabSubnetName;}
            {_labVirtualNetworkId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("labVirtualNetworkId"), out var __jsonLabVirtualNetworkId) ? (string)__jsonLabVirtualNetworkId : (string)LabVirtualNetworkId;}
            {_disallowPublicIPAddress = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonBoolean>("disallowPublicIpAddress"), out var __jsonDisallowPublicIPAddress) ? (bool?)__jsonDisallowPublicIPAddress : DisallowPublicIPAddress;}
            {_artifact = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonArray>("artifacts"), out var __jsonArtifacts) ? If( __jsonArtifacts as Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactInstallProperties[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactInstallProperties) (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ArtifactInstallProperties.FromJson(__u) )) ))() : null : Artifact;}
            {_planId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("planId"), out var __jsonPlanId) ? (string)__jsonPlanId : (string)PlanId;}
            {_expirationDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("expirationDate"), out var __jsonExpirationDate) ? global::System.DateTime.TryParse((string)__jsonExpirationDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonExpirationDateValue) ? __jsonExpirationDateValue : ExpirationDate : ExpirationDate;}
            {_allowClaim = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonBoolean>("allowClaim"), out var __jsonAllowClaim) ? (bool?)__jsonAllowClaim : AllowClaim;}
            {_storageType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("storageType"), out var __jsonStorageType) ? (string)__jsonStorageType : (string)StorageType;}
            {_virtualMachineCreationSource = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("virtualMachineCreationSource"), out var __jsonVirtualMachineCreationSource) ? (string)__jsonVirtualMachineCreationSource : (string)VirtualMachineCreationSource;}
            {_environmentId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("environmentId"), out var __jsonEnvironmentId) ? (string)__jsonEnvironmentId : (string)EnvironmentId;}
            {_dataDiskParameter = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonArray>("dataDiskParameters"), out var __jsonDataDiskParameters) ? If( __jsonDataDiskParameters as Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskProperties[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskProperties) (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.DataDiskProperties.FromJson(__p) )) ))() : null : DataDiskParameter;}
            {_scheduleParameter = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonArray>("scheduleParameters"), out var __jsonScheduleParameters) ? If( __jsonScheduleParameters as Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameter[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameter) (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ScheduleCreationParameter.FromJson(__k) )) ))() : null : ScheduleParameter;}
            {_lastKnownPowerState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("lastKnownPowerState"), out var __jsonLastKnownPowerState) ? (string)__jsonLastKnownPowerState : (string)LastKnownPowerState;}
            {_provisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)ProvisioningState;}
            {_uniqueIdentifier = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("uniqueIdentifier"), out var __jsonUniqueIdentifier) ? (string)__jsonUniqueIdentifier : (string)UniqueIdentifier;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="LabVirtualMachineProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="LabVirtualMachineProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._artifactDeploymentStatus ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) this._artifactDeploymentStatus.ToJson(null,serializationMode) : null, "artifactDeploymentStatus" ,container.Add );
            }
            AddIf( null != this._galleryImageReference ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) this._galleryImageReference.ToJson(null,serializationMode) : null, "galleryImageReference" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._computeVM ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) this._computeVM.ToJson(null,serializationMode) : null, "computeVm" ,container.Add );
            }
            AddIf( null != this._networkInterface ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) this._networkInterface.ToJson(null,serializationMode) : null, "networkInterface" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._applicableSchedule ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) this._applicableSchedule.ToJson(null,serializationMode) : null, "applicableSchedule" ,container.Add );
            }
            AddIf( null != (((object)this._note)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._note.ToString()) : null, "notes" ,container.Add );
            AddIf( null != (((object)this._ownerObjectId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._ownerObjectId.ToString()) : null, "ownerObjectId" ,container.Add );
            AddIf( null != (((object)this._ownerUserPrincipalName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._ownerUserPrincipalName.ToString()) : null, "ownerUserPrincipalName" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._createdByUserId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._createdByUserId.ToString()) : null, "createdByUserId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._createdByUser)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._createdByUser.ToString()) : null, "createdByUser" ,container.Add );
            }
            AddIf( null != this._createdDate ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._createdDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "createdDate" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._computeId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._computeId.ToString()) : null, "computeId" ,container.Add );
            }
            AddIf( null != (((object)this._customImageId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._customImageId.ToString()) : null, "customImageId" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._oSType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._oSType.ToString()) : null, "osType" ,container.Add );
            }
            AddIf( null != (((object)this._size)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._size.ToString()) : null, "size" ,container.Add );
            AddIf( null != (((object)this._userName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._userName.ToString()) : null, "userName" ,container.Add );
            AddIf( null != (((object)this._password)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._password.ToString()) : null, "password" ,container.Add );
            AddIf( null != (((object)this._sshKey)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._sshKey.ToString()) : null, "sshKey" ,container.Add );
            AddIf( null != this._isAuthenticationWithSshKey ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonBoolean((bool)this._isAuthenticationWithSshKey) : null, "isAuthenticationWithSshKey" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._fqdn)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._fqdn.ToString()) : null, "fqdn" ,container.Add );
            }
            AddIf( null != (((object)this._labSubnetName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._labSubnetName.ToString()) : null, "labSubnetName" ,container.Add );
            AddIf( null != (((object)this._labVirtualNetworkId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._labVirtualNetworkId.ToString()) : null, "labVirtualNetworkId" ,container.Add );
            AddIf( null != this._disallowPublicIPAddress ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonBoolean((bool)this._disallowPublicIPAddress) : null, "disallowPublicIpAddress" ,container.Add );
            if (null != this._artifact)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.XNodeArray();
                foreach( var __x in this._artifact )
                {
                    AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                }
                container.Add("artifacts",__w);
            }
            AddIf( null != (((object)this._planId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._planId.ToString()) : null, "planId" ,container.Add );
            AddIf( null != this._expirationDate ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._expirationDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "expirationDate" ,container.Add );
            AddIf( null != this._allowClaim ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonBoolean((bool)this._allowClaim) : null, "allowClaim" ,container.Add );
            AddIf( null != (((object)this._storageType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._storageType.ToString()) : null, "storageType" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._virtualMachineCreationSource)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._virtualMachineCreationSource.ToString()) : null, "virtualMachineCreationSource" ,container.Add );
            }
            AddIf( null != (((object)this._environmentId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._environmentId.ToString()) : null, "environmentId" ,container.Add );
            if (null != this._dataDiskParameter)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.XNodeArray();
                foreach( var __s in this._dataDiskParameter )
                {
                    AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                }
                container.Add("dataDiskParameters",__r);
            }
            if (null != this._scheduleParameter)
            {
                var __m = new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.XNodeArray();
                foreach( var __n in this._scheduleParameter )
                {
                    AddIf(__n?.ToJson(null, serializationMode) ,__m.Add);
                }
                container.Add("scheduleParameters",__m);
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._lastKnownPowerState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._lastKnownPowerState.ToString()) : null, "lastKnownPowerState" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._uniqueIdentifier)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._uniqueIdentifier.ToString()) : null, "uniqueIdentifier" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}