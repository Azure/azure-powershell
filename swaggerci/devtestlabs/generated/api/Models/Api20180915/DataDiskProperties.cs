// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Extensions;

    /// <summary>Request body for adding a new or existing data disk to a virtual machine.</summary>
    public partial class DataDiskProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AttachNewDataDiskOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IAttachNewDataDiskOptions _attachNewDataDiskOption;

        /// <summary>Specifies options to attach a new disk to the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IAttachNewDataDiskOptions AttachNewDataDiskOption { get => (this._attachNewDataDiskOption = this._attachNewDataDiskOption ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.AttachNewDataDiskOptions()); set => this._attachNewDataDiskOption = value; }

        /// <summary>The name of the disk to be attached.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string AttachNewDataDiskOptionDiskName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IAttachNewDataDiskOptionsInternal)AttachNewDataDiskOption).DiskName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IAttachNewDataDiskOptionsInternal)AttachNewDataDiskOption).DiskName = value ?? null; }

        /// <summary>Size of the disk to be attached in Gibibytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public int? AttachNewDataDiskOptionDiskSizeGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IAttachNewDataDiskOptionsInternal)AttachNewDataDiskOption).DiskSizeGiB; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IAttachNewDataDiskOptionsInternal)AttachNewDataDiskOption).DiskSizeGiB = value ?? default(int); }

        /// <summary>The storage type for the disk (i.e. Standard, Premium).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.StorageType? AttachNewDataDiskOptionDiskType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IAttachNewDataDiskOptionsInternal)AttachNewDataDiskOption).DiskType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IAttachNewDataDiskOptionsInternal)AttachNewDataDiskOption).DiskType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.StorageType)""); }

        /// <summary>Backing field for <see cref="ExistingLabDiskId" /> property.</summary>
        private string _existingLabDiskId;

        /// <summary>Specifies the existing lab disk id to attach to virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string ExistingLabDiskId { get => this._existingLabDiskId; set => this._existingLabDiskId = value; }

        /// <summary>Backing field for <see cref="HostCaching" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.HostCachingOptions? _hostCaching;

        /// <summary>Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.HostCachingOptions? HostCaching { get => this._hostCaching; set => this._hostCaching = value; }

        /// <summary>Internal Acessors for AttachNewDataDiskOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IAttachNewDataDiskOptions Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskPropertiesInternal.AttachNewDataDiskOption { get => (this._attachNewDataDiskOption = this._attachNewDataDiskOption ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.AttachNewDataDiskOptions()); set { {_attachNewDataDiskOption = value;} } }

        /// <summary>Creates an new <see cref="DataDiskProperties" /> instance.</summary>
        public DataDiskProperties()
        {

        }
    }
    /// Request body for adding a new or existing data disk to a virtual machine.
    public partial interface IDataDiskProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.IJsonSerializable
    {
        /// <summary>The name of the disk to be attached.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the disk to be attached.",
        SerializedName = @"diskName",
        PossibleTypes = new [] { typeof(string) })]
        string AttachNewDataDiskOptionDiskName { get; set; }
        /// <summary>Size of the disk to be attached in Gibibytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Size of the disk to be attached in Gibibytes.",
        SerializedName = @"diskSizeGiB",
        PossibleTypes = new [] { typeof(int) })]
        int? AttachNewDataDiskOptionDiskSizeGiB { get; set; }
        /// <summary>The storage type for the disk (i.e. Standard, Premium).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The storage type for the disk (i.e. Standard, Premium).",
        SerializedName = @"diskType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.StorageType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.StorageType? AttachNewDataDiskOptionDiskType { get; set; }
        /// <summary>Specifies the existing lab disk id to attach to virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the existing lab disk id to attach to virtual machine.",
        SerializedName = @"existingLabDiskId",
        PossibleTypes = new [] { typeof(string) })]
        string ExistingLabDiskId { get; set; }
        /// <summary>Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
        SerializedName = @"hostCaching",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.HostCachingOptions) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.HostCachingOptions? HostCaching { get; set; }

    }
    /// Request body for adding a new or existing data disk to a virtual machine.
    internal partial interface IDataDiskPropertiesInternal

    {
        /// <summary>Specifies options to attach a new disk to the virtual machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IAttachNewDataDiskOptions AttachNewDataDiskOption { get; set; }
        /// <summary>The name of the disk to be attached.</summary>
        string AttachNewDataDiskOptionDiskName { get; set; }
        /// <summary>Size of the disk to be attached in Gibibytes.</summary>
        int? AttachNewDataDiskOptionDiskSizeGiB { get; set; }
        /// <summary>The storage type for the disk (i.e. Standard, Premium).</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.StorageType? AttachNewDataDiskOptionDiskType { get; set; }
        /// <summary>Specifies the existing lab disk id to attach to virtual machine.</summary>
        string ExistingLabDiskId { get; set; }
        /// <summary>Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.HostCachingOptions? HostCaching { get; set; }

    }
}