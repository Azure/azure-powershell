// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Extensions;

    /// <summary>Properties of a custom image.</summary>
    public partial class CustomImageProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject into a new instance of <see cref="CustomImageProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal CustomImageProperties(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_vM = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject>("vm"), out var __jsonVM) ? Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.CustomImagePropertiesFromVM.FromJson(__jsonVM) : VM;}
            {_vhd = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject>("vhd"), out var __jsonVhd) ? Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.CustomImagePropertiesCustom.FromJson(__jsonVhd) : Vhd;}
            {_customImagePlan = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject>("customImagePlan"), out var __jsonCustomImagePlan) ? Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.CustomImagePropertiesFromPlan.FromJson(__jsonCustomImagePlan) : CustomImagePlan;}
            {_description = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("description"), out var __jsonDescription) ? (string)__jsonDescription : (string)Description;}
            {_author = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("author"), out var __jsonAuthor) ? (string)__jsonAuthor : (string)Author;}
            {_creationDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("creationDate"), out var __jsonCreationDate) ? global::System.DateTime.TryParse((string)__jsonCreationDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonCreationDateValue) ? __jsonCreationDateValue : CreationDate : CreationDate;}
            {_managedImageId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("managedImageId"), out var __jsonManagedImageId) ? (string)__jsonManagedImageId : (string)ManagedImageId;}
            {_managedSnapshotId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("managedSnapshotId"), out var __jsonManagedSnapshotId) ? (string)__jsonManagedSnapshotId : (string)ManagedSnapshotId;}
            {_dataDiskStorageInfo = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonArray>("dataDiskStorageInfo"), out var __jsonDataDiskStorageInfo) ? If( __jsonDataDiskStorageInfo as Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskStorageTypeInfo[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskStorageTypeInfo) (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.DataDiskStorageTypeInfo.FromJson(__u) )) ))() : null : DataDiskStorageInfo;}
            {_isPlanAuthorized = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonBoolean>("isPlanAuthorized"), out var __jsonIsPlanAuthorized) ? (bool?)__jsonIsPlanAuthorized : IsPlanAuthorized;}
            {_provisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)ProvisioningState;}
            {_uniqueIdentifier = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("uniqueIdentifier"), out var __jsonUniqueIdentifier) ? (string)__jsonUniqueIdentifier : (string)UniqueIdentifier;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImageProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImageProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImageProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject json ? new CustomImageProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="CustomImageProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="CustomImageProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._vM ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) this._vM.ToJson(null,serializationMode) : null, "vm" ,container.Add );
            AddIf( null != this._vhd ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) this._vhd.ToJson(null,serializationMode) : null, "vhd" ,container.Add );
            AddIf( null != this._customImagePlan ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) this._customImagePlan.ToJson(null,serializationMode) : null, "customImagePlan" ,container.Add );
            AddIf( null != (((object)this._description)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._description.ToString()) : null, "description" ,container.Add );
            AddIf( null != (((object)this._author)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._author.ToString()) : null, "author" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._creationDate ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._creationDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "creationDate" ,container.Add );
            }
            AddIf( null != (((object)this._managedImageId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._managedImageId.ToString()) : null, "managedImageId" ,container.Add );
            AddIf( null != (((object)this._managedSnapshotId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._managedSnapshotId.ToString()) : null, "managedSnapshotId" ,container.Add );
            if (null != this._dataDiskStorageInfo)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.XNodeArray();
                foreach( var __x in this._dataDiskStorageInfo )
                {
                    AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                }
                container.Add("dataDiskStorageInfo",__w);
            }
            AddIf( null != this._isPlanAuthorized ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonBoolean((bool)this._isPlanAuthorized) : null, "isPlanAuthorized" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._uniqueIdentifier)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._uniqueIdentifier.ToString()) : null, "uniqueIdentifier" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}