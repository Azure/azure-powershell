// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Extensions;

    /// <summary>The properties of a resource cost item.</summary>
    public partial class LabResourceCostProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabResourceCostProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabResourceCostPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ExternalResourceId" /> property.</summary>
        private string _externalResourceId;

        /// <summary>The ID of the external resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string ExternalResourceId { get => this._externalResourceId; set => this._externalResourceId = value; }

        /// <summary>Backing field for <see cref="ResourceCost" /> property.</summary>
        private double? _resourceCost;

        /// <summary>The cost component of the resource cost item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public double? ResourceCost { get => this._resourceCost; set => this._resourceCost = value; }

        /// <summary>Backing field for <see cref="ResourceId" /> property.</summary>
        private string _resourceId;

        /// <summary>The ID of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string ResourceId { get => this._resourceId; set => this._resourceId = value; }

        /// <summary>Backing field for <see cref="ResourceOwner" /> property.</summary>
        private string _resourceOwner;

        /// <summary>The owner of the resource (ex. janedoe@microsoft.com)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string ResourceOwner { get => this._resourceOwner; set => this._resourceOwner = value; }

        /// <summary>Backing field for <see cref="ResourcePricingTier" /> property.</summary>
        private string _resourcePricingTier;

        /// <summary>The category of the resource (ex. Premium_LRS, Standard_DS1)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string ResourcePricingTier { get => this._resourcePricingTier; set => this._resourcePricingTier = value; }

        /// <summary>Backing field for <see cref="ResourceStatus" /> property.</summary>
        private string _resourceStatus;

        /// <summary>The status of the resource (ex. Active)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string ResourceStatus { get => this._resourceStatus; set => this._resourceStatus = value; }

        /// <summary>Backing field for <see cref="ResourceType" /> property.</summary>
        private string _resourceType;

        /// <summary>The logical resource type (ex. virtualmachine, storageaccount)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string ResourceType { get => this._resourceType; set => this._resourceType = value; }

        /// <summary>Backing field for <see cref="ResourceUId" /> property.</summary>
        private string _resourceUId;

        /// <summary>The unique identifier of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string ResourceUId { get => this._resourceUId; set => this._resourceUId = value; }

        /// <summary>Backing field for <see cref="Resourcename" /> property.</summary>
        private string _resourcename;

        /// <summary>The name of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string Resourcename { get => this._resourcename; set => this._resourcename = value; }

        /// <summary>Creates an new <see cref="LabResourceCostProperties" /> instance.</summary>
        public LabResourceCostProperties()
        {

        }
    }
    /// The properties of a resource cost item.
    public partial interface ILabResourceCostProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.IJsonSerializable
    {
        /// <summary>The ID of the external resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the external resource",
        SerializedName = @"externalResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ExternalResourceId { get; set; }
        /// <summary>The cost component of the resource cost item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cost component of the resource cost item.",
        SerializedName = @"resourceCost",
        PossibleTypes = new [] { typeof(double) })]
        double? ResourceCost { get; set; }
        /// <summary>The ID of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the resource",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceId { get; set; }
        /// <summary>The owner of the resource (ex. janedoe@microsoft.com)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The owner of the resource (ex. janedoe@microsoft.com)",
        SerializedName = @"resourceOwner",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceOwner { get; set; }
        /// <summary>The category of the resource (ex. Premium_LRS, Standard_DS1)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The category of the resource (ex. Premium_LRS, Standard_DS1)",
        SerializedName = @"resourcePricingTier",
        PossibleTypes = new [] { typeof(string) })]
        string ResourcePricingTier { get; set; }
        /// <summary>The status of the resource (ex. Active)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The status of the resource (ex. Active)",
        SerializedName = @"resourceStatus",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceStatus { get; set; }
        /// <summary>The logical resource type (ex. virtualmachine, storageaccount)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The logical resource type (ex. virtualmachine, storageaccount)",
        SerializedName = @"resourceType",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceType { get; set; }
        /// <summary>The unique identifier of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unique identifier of the resource.",
        SerializedName = @"resourceUId",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceUId { get; set; }
        /// <summary>The name of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the resource.",
        SerializedName = @"resourcename",
        PossibleTypes = new [] { typeof(string) })]
        string Resourcename { get; set; }

    }
    /// The properties of a resource cost item.
    internal partial interface ILabResourceCostPropertiesInternal

    {
        /// <summary>The ID of the external resource</summary>
        string ExternalResourceId { get; set; }
        /// <summary>The cost component of the resource cost item.</summary>
        double? ResourceCost { get; set; }
        /// <summary>The ID of the resource</summary>
        string ResourceId { get; set; }
        /// <summary>The owner of the resource (ex. janedoe@microsoft.com)</summary>
        string ResourceOwner { get; set; }
        /// <summary>The category of the resource (ex. Premium_LRS, Standard_DS1)</summary>
        string ResourcePricingTier { get; set; }
        /// <summary>The status of the resource (ex. Active)</summary>
        string ResourceStatus { get; set; }
        /// <summary>The logical resource type (ex. virtualmachine, storageaccount)</summary>
        string ResourceType { get; set; }
        /// <summary>The unique identifier of the resource.</summary>
        string ResourceUId { get; set; }
        /// <summary>The name of the resource.</summary>
        string Resourcename { get; set; }

    }
}