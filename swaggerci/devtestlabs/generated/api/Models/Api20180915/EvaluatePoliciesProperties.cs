// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Extensions;

    /// <summary>Properties for evaluating a policy set.</summary>
    public partial class EvaluatePoliciesProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IEvaluatePoliciesProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IEvaluatePoliciesPropertiesInternal
    {

        /// <summary>Backing field for <see cref="FactData" /> property.</summary>
        private string _factData;

        /// <summary>The fact data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string FactData { get => this._factData; set => this._factData = value; }

        /// <summary>Backing field for <see cref="FactName" /> property.</summary>
        private string _factName;

        /// <summary>The fact name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string FactName { get => this._factName; set => this._factName = value; }

        /// <summary>Backing field for <see cref="UserObjectId" /> property.</summary>
        private string _userObjectId;

        /// <summary>The user for which policies will be evaluated</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string UserObjectId { get => this._userObjectId; set => this._userObjectId = value; }

        /// <summary>Backing field for <see cref="ValueOffset" /> property.</summary>
        private string _valueOffset;

        /// <summary>The value offset.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string ValueOffset { get => this._valueOffset; set => this._valueOffset = value; }

        /// <summary>Creates an new <see cref="EvaluatePoliciesProperties" /> instance.</summary>
        public EvaluatePoliciesProperties()
        {

        }
    }
    /// Properties for evaluating a policy set.
    public partial interface IEvaluatePoliciesProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.IJsonSerializable
    {
        /// <summary>The fact data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The fact data.",
        SerializedName = @"factData",
        PossibleTypes = new [] { typeof(string) })]
        string FactData { get; set; }
        /// <summary>The fact name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The fact name.",
        SerializedName = @"factName",
        PossibleTypes = new [] { typeof(string) })]
        string FactName { get; set; }
        /// <summary>The user for which policies will be evaluated</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user for which policies will be evaluated",
        SerializedName = @"userObjectId",
        PossibleTypes = new [] { typeof(string) })]
        string UserObjectId { get; set; }
        /// <summary>The value offset.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value offset.",
        SerializedName = @"valueOffset",
        PossibleTypes = new [] { typeof(string) })]
        string ValueOffset { get; set; }

    }
    /// Properties for evaluating a policy set.
    internal partial interface IEvaluatePoliciesPropertiesInternal

    {
        /// <summary>The fact data.</summary>
        string FactData { get; set; }
        /// <summary>The fact name.</summary>
        string FactName { get; set; }
        /// <summary>The user for which policies will be evaluated</summary>
        string UserObjectId { get; set; }
        /// <summary>The value offset.</summary>
        string ValueOffset { get; set; }

    }
}