// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Extensions;

    /// <summary>A lab.</summary>
    public partial class Lab :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILab,
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabInternal,
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.Resource();

        /// <summary>Is the lab announcement active/enabled at this time?</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus? AnnouncementEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).AnnouncementEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).AnnouncementEnabled = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus)""); }

        /// <summary>The time at which the announcement expires (null for never)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public global::System.DateTime? AnnouncementExpirationDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).AnnouncementExpirationDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).AnnouncementExpirationDate = value ?? default(global::System.DateTime); }

        /// <summary>Has this announcement expired?</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public bool? AnnouncementExpired { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).AnnouncementExpired; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).AnnouncementExpired = value ?? default(bool); }

        /// <summary>
        /// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string AnnouncementMarkdown { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).AnnouncementMarkdown; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).AnnouncementMarkdown = value ?? null; }

        /// <summary>The provisioning status of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string AnnouncementProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).AnnouncementProvisioningState; }

        /// <summary>The plain text title for the lab announcement</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string AnnouncementTitle { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).AnnouncementTitle; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).AnnouncementTitle = value ?? null; }

        /// <summary>The unique immutable identifier of a resource (Guid).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string AnnouncementUniqueIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).AnnouncementUniqueIdentifier; }

        /// <summary>The lab's artifact storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string ArtifactsStorageAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).ArtifactsStorageAccount; }

        /// <summary>The creation date of the lab.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public global::System.DateTime? CreatedDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).CreatedDate; }

        /// <summary>The lab's default premium storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string DefaultPremiumStorageAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).DefaultPremiumStorageAccount; }

        /// <summary>The lab's default storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string DefaultStorageAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).DefaultStorageAccount; }

        /// <summary>The access rights to be granted to the user when provisioning an environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnvironmentPermission? EnvironmentPermission { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).EnvironmentPermission; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).EnvironmentPermission = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnvironmentPermission)""); }

        /// <summary>Extended properties of the lab used for experimental features</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesExtendedProperties ExtendedProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).ExtendedProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).ExtendedProperty = value ?? null /* model class */; }

        /// <summary>The identifier of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Id; }

        /// <summary>The load balancer used to for lab VMs that use shared IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string LoadBalancerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).LoadBalancerId; }

        /// <summary>The location of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Location = value ?? null; }

        /// <summary>
        /// The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts
        /// specified by the user.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string[] MandatoryArtifactsResourceIdsLinux { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).MandatoryArtifactsResourceIdsLinux; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).MandatoryArtifactsResourceIdsLinux = value ?? null /* arrayOf */; }

        /// <summary>
        /// The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the
        /// artifacts specified by the user.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string[] MandatoryArtifactsResourceIdsWindow { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).MandatoryArtifactsResourceIdsWindow; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).MandatoryArtifactsResourceIdsWindow = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for Announcement</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabAnnouncementProperties Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabInternal.Announcement { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).Announcement; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).Announcement = value; }

        /// <summary>Internal Acessors for AnnouncementProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabInternal.AnnouncementProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).AnnouncementProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).AnnouncementProvisioningState = value; }

        /// <summary>Internal Acessors for AnnouncementUniqueIdentifier</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabInternal.AnnouncementUniqueIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).AnnouncementUniqueIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).AnnouncementUniqueIdentifier = value; }

        /// <summary>Internal Acessors for ArtifactsStorageAccount</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabInternal.ArtifactsStorageAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).ArtifactsStorageAccount; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).ArtifactsStorageAccount = value; }

        /// <summary>Internal Acessors for CreatedDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabInternal.CreatedDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).CreatedDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).CreatedDate = value; }

        /// <summary>Internal Acessors for DefaultPremiumStorageAccount</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabInternal.DefaultPremiumStorageAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).DefaultPremiumStorageAccount; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).DefaultPremiumStorageAccount = value; }

        /// <summary>Internal Acessors for DefaultStorageAccount</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabInternal.DefaultStorageAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).DefaultStorageAccount; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).DefaultStorageAccount = value; }

        /// <summary>Internal Acessors for LoadBalancerId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabInternal.LoadBalancerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).LoadBalancerId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).LoadBalancerId = value; }

        /// <summary>Internal Acessors for NetworkSecurityGroupId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabInternal.NetworkSecurityGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).NetworkSecurityGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).NetworkSecurityGroupId = value; }

        /// <summary>Internal Acessors for PremiumDataDiskStorageAccount</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabInternal.PremiumDataDiskStorageAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).PremiumDataDiskStorageAccount; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).PremiumDataDiskStorageAccount = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabProperties Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for PublicIPId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabInternal.PublicIPId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).PublicIPId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).PublicIPId = value; }

        /// <summary>Internal Acessors for Support</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabSupportProperties Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabInternal.Support { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).Support; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).Support = value; }

        /// <summary>Internal Acessors for UniqueIdentifier</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabInternal.UniqueIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).UniqueIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).UniqueIdentifier = value; }

        /// <summary>Internal Acessors for VMCreationResourceGroup</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabInternal.VMCreationResourceGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).VMCreationResourceGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).VMCreationResourceGroup = value; }

        /// <summary>Internal Acessors for VaultName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabInternal.VaultName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).VaultName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).VaultName = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Name; }

        /// <summary>
        /// The Network Security Group attached to the lab VMs Network interfaces to restrict open ports.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string NetworkSecurityGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).NetworkSecurityGroupId; }

        /// <summary>
        /// The setting to enable usage of premium data disks.
        /// When its value is 'Enabled', creation of standard or premium data disks is allowed.
        /// When its value is 'Disabled', only creation of standard data disks is allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.PremiumDataDisk? PremiumDataDisk { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).PremiumDataDisk; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).PremiumDataDisk = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.PremiumDataDisk)""); }

        /// <summary>The lab's premium data disk storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string PremiumDataDiskStorageAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).PremiumDataDiskStorageAccount; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabProperties _property;

        /// <summary>The properties of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabProperties()); set => this._property = value; }

        /// <summary>The provisioning status of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).ProvisioningState; }

        /// <summary>The public IP address for the lab's load balancer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string PublicIPId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).PublicIPId; }

        /// <summary>
        /// Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.StorageType? StorageType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).LabStorageType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).LabStorageType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.StorageType)""); }

        /// <summary>Is the lab support banner active/enabled at this time?</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus? SupportEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).SupportEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).SupportEnabled = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus)""); }

        /// <summary>
        /// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string SupportMarkdown { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).SupportMarkdown; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).SupportMarkdown = value ?? null; }

        /// <summary>The tags of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Tag = value ?? null /* model class */; }

        /// <summary>The type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Type; }

        /// <summary>The unique immutable identifier of a resource (Guid).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string UniqueIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).UniqueIdentifier; }

        /// <summary>
        /// The resource group in which all new lab virtual machines will be created. To let DevTest Labs manage resource group creation,
        /// set this value to null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string VMCreationResourceGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).VMCreationResourceGroup; }

        /// <summary>The lab's Key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string VaultName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesInternal)Property).VaultName; }

        /// <summary>Creates an new <see cref="Lab" /> instance.</summary>
        public Lab()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// A lab.
    public partial interface ILab :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResource
    {
        /// <summary>Is the lab announcement active/enabled at this time?</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Is the lab announcement active/enabled at this time?",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus? AnnouncementEnabled { get; set; }
        /// <summary>The time at which the announcement expires (null for never)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time at which the announcement expires (null for never)",
        SerializedName = @"expirationDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? AnnouncementExpirationDate { get; set; }
        /// <summary>Has this announcement expired?</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Has this announcement expired?",
        SerializedName = @"expired",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AnnouncementExpired { get; set; }
        /// <summary>
        /// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.",
        SerializedName = @"markdown",
        PossibleTypes = new [] { typeof(string) })]
        string AnnouncementMarkdown { get; set; }
        /// <summary>The provisioning status of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning status of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string AnnouncementProvisioningState { get;  }
        /// <summary>The plain text title for the lab announcement</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The plain text title for the lab announcement",
        SerializedName = @"title",
        PossibleTypes = new [] { typeof(string) })]
        string AnnouncementTitle { get; set; }
        /// <summary>The unique immutable identifier of a resource (Guid).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The unique immutable identifier of a resource (Guid).",
        SerializedName = @"uniqueIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string AnnouncementUniqueIdentifier { get;  }
        /// <summary>The lab's artifact storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The lab's artifact storage account.",
        SerializedName = @"artifactsStorageAccount",
        PossibleTypes = new [] { typeof(string) })]
        string ArtifactsStorageAccount { get;  }
        /// <summary>The creation date of the lab.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The creation date of the lab.",
        SerializedName = @"createdDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedDate { get;  }
        /// <summary>The lab's default premium storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The lab's default premium storage account.",
        SerializedName = @"defaultPremiumStorageAccount",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultPremiumStorageAccount { get;  }
        /// <summary>The lab's default storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The lab's default storage account.",
        SerializedName = @"defaultStorageAccount",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultStorageAccount { get;  }
        /// <summary>The access rights to be granted to the user when provisioning an environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The access rights to be granted to the user when provisioning an environment",
        SerializedName = @"environmentPermission",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnvironmentPermission) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnvironmentPermission? EnvironmentPermission { get; set; }
        /// <summary>Extended properties of the lab used for experimental features</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Extended properties of the lab used for experimental features",
        SerializedName = @"extendedProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesExtendedProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesExtendedProperties ExtendedProperty { get; set; }
        /// <summary>The load balancer used to for lab VMs that use shared IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The load balancer used to for lab VMs that use shared IP address.",
        SerializedName = @"loadBalancerId",
        PossibleTypes = new [] { typeof(string) })]
        string LoadBalancerId { get;  }
        /// <summary>
        /// The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts
        /// specified by the user.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts specified by the user.",
        SerializedName = @"mandatoryArtifactsResourceIdsLinux",
        PossibleTypes = new [] { typeof(string) })]
        string[] MandatoryArtifactsResourceIdsLinux { get; set; }
        /// <summary>
        /// The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the
        /// artifacts specified by the user.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts specified by the user.",
        SerializedName = @"mandatoryArtifactsResourceIdsWindows",
        PossibleTypes = new [] { typeof(string) })]
        string[] MandatoryArtifactsResourceIdsWindow { get; set; }
        /// <summary>
        /// The Network Security Group attached to the lab VMs Network interfaces to restrict open ports.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Network Security Group attached to the lab VMs Network interfaces to restrict open ports.",
        SerializedName = @"networkSecurityGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkSecurityGroupId { get;  }
        /// <summary>
        /// The setting to enable usage of premium data disks.
        /// When its value is 'Enabled', creation of standard or premium data disks is allowed.
        /// When its value is 'Disabled', only creation of standard data disks is allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The setting to enable usage of premium data disks.
        When its value is 'Enabled', creation of standard or premium data disks is allowed.
        When its value is 'Disabled', only creation of standard data disks is allowed.",
        SerializedName = @"premiumDataDisks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.PremiumDataDisk) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.PremiumDataDisk? PremiumDataDisk { get; set; }
        /// <summary>The lab's premium data disk storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The lab's premium data disk storage account.",
        SerializedName = @"premiumDataDiskStorageAccount",
        PossibleTypes = new [] { typeof(string) })]
        string PremiumDataDiskStorageAccount { get;  }
        /// <summary>The provisioning status of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning status of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>The public IP address for the lab's load balancer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The public IP address for the lab's load balancer.",
        SerializedName = @"publicIpId",
        PossibleTypes = new [] { typeof(string) })]
        string PublicIPId { get;  }
        /// <summary>
        /// Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.",
        SerializedName = @"labStorageType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.StorageType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.StorageType? StorageType { get; set; }
        /// <summary>Is the lab support banner active/enabled at this time?</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Is the lab support banner active/enabled at this time?",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus? SupportEnabled { get; set; }
        /// <summary>
        /// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.",
        SerializedName = @"markdown",
        PossibleTypes = new [] { typeof(string) })]
        string SupportMarkdown { get; set; }
        /// <summary>The unique immutable identifier of a resource (Guid).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The unique immutable identifier of a resource (Guid).",
        SerializedName = @"uniqueIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string UniqueIdentifier { get;  }
        /// <summary>
        /// The resource group in which all new lab virtual machines will be created. To let DevTest Labs manage resource group creation,
        /// set this value to null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource group in which all new lab virtual machines will be created. To let DevTest Labs manage resource group creation, set this value to null.",
        SerializedName = @"vmCreationResourceGroup",
        PossibleTypes = new [] { typeof(string) })]
        string VMCreationResourceGroup { get;  }
        /// <summary>The lab's Key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The lab's Key vault.",
        SerializedName = @"vaultName",
        PossibleTypes = new [] { typeof(string) })]
        string VaultName { get;  }

    }
    /// A lab.
    internal partial interface ILabInternal :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal
    {
        /// <summary>The properties of any lab announcement associated with this lab</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabAnnouncementProperties Announcement { get; set; }
        /// <summary>Is the lab announcement active/enabled at this time?</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus? AnnouncementEnabled { get; set; }
        /// <summary>The time at which the announcement expires (null for never)</summary>
        global::System.DateTime? AnnouncementExpirationDate { get; set; }
        /// <summary>Has this announcement expired?</summary>
        bool? AnnouncementExpired { get; set; }
        /// <summary>
        /// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
        /// </summary>
        string AnnouncementMarkdown { get; set; }
        /// <summary>The provisioning status of the resource.</summary>
        string AnnouncementProvisioningState { get; set; }
        /// <summary>The plain text title for the lab announcement</summary>
        string AnnouncementTitle { get; set; }
        /// <summary>The unique immutable identifier of a resource (Guid).</summary>
        string AnnouncementUniqueIdentifier { get; set; }
        /// <summary>The lab's artifact storage account.</summary>
        string ArtifactsStorageAccount { get; set; }
        /// <summary>The creation date of the lab.</summary>
        global::System.DateTime? CreatedDate { get; set; }
        /// <summary>The lab's default premium storage account.</summary>
        string DefaultPremiumStorageAccount { get; set; }
        /// <summary>The lab's default storage account.</summary>
        string DefaultStorageAccount { get; set; }
        /// <summary>The access rights to be granted to the user when provisioning an environment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnvironmentPermission? EnvironmentPermission { get; set; }
        /// <summary>Extended properties of the lab used for experimental features</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabPropertiesExtendedProperties ExtendedProperty { get; set; }
        /// <summary>The load balancer used to for lab VMs that use shared IP address.</summary>
        string LoadBalancerId { get; set; }
        /// <summary>
        /// The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts
        /// specified by the user.
        /// </summary>
        string[] MandatoryArtifactsResourceIdsLinux { get; set; }
        /// <summary>
        /// The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the
        /// artifacts specified by the user.
        /// </summary>
        string[] MandatoryArtifactsResourceIdsWindow { get; set; }
        /// <summary>
        /// The Network Security Group attached to the lab VMs Network interfaces to restrict open ports.
        /// </summary>
        string NetworkSecurityGroupId { get; set; }
        /// <summary>
        /// The setting to enable usage of premium data disks.
        /// When its value is 'Enabled', creation of standard or premium data disks is allowed.
        /// When its value is 'Disabled', only creation of standard data disks is allowed.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.PremiumDataDisk? PremiumDataDisk { get; set; }
        /// <summary>The lab's premium data disk storage account.</summary>
        string PremiumDataDiskStorageAccount { get; set; }
        /// <summary>The properties of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabProperties Property { get; set; }
        /// <summary>The provisioning status of the resource.</summary>
        string ProvisioningState { get; set; }
        /// <summary>The public IP address for the lab's load balancer.</summary>
        string PublicIPId { get; set; }
        /// <summary>
        /// Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.StorageType? StorageType { get; set; }
        /// <summary>The properties of any lab support message associated with this lab</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabSupportProperties Support { get; set; }
        /// <summary>Is the lab support banner active/enabled at this time?</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus? SupportEnabled { get; set; }
        /// <summary>
        /// The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
        /// </summary>
        string SupportMarkdown { get; set; }
        /// <summary>The unique immutable identifier of a resource (Guid).</summary>
        string UniqueIdentifier { get; set; }
        /// <summary>
        /// The resource group in which all new lab virtual machines will be created. To let DevTest Labs manage resource group creation,
        /// set this value to null.
        /// </summary>
        string VMCreationResourceGroup { get; set; }
        /// <summary>The lab's Key vault.</summary>
        string VaultName { get; set; }

    }
}