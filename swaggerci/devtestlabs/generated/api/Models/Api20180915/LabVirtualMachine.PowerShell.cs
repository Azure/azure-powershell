// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915
{
    using Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.PowerShell;

    /// <summary>A virtual machine.</summary>
    [System.ComponentModel.TypeConverter(typeof(LabVirtualMachineTypeConverter))]
    public partial class LabVirtualMachine
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabVirtualMachine"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachine" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachine DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new LabVirtualMachine(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabVirtualMachine"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachine" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachine DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new LabVirtualMachine(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="LabVirtualMachine" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachine FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabVirtualMachine"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal LabVirtualMachine(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabVirtualMachinePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ApplicableSchedule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ApplicableSchedule = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IApplicableSchedule) content.GetValueForProperty("ApplicableSchedule",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ApplicableSchedule, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ApplicableScheduleTypeConverter.ConvertFrom);
            }
            if (content.Contains("PropertiesArtifactDeploymentStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).PropertiesArtifactDeploymentStatus = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactDeploymentStatusProperties) content.GetValueForProperty("PropertiesArtifactDeploymentStatus",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).PropertiesArtifactDeploymentStatus, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ArtifactDeploymentStatusPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("GalleryImageReference"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).GalleryImageReference = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IGalleryImageReference) content.GetValueForProperty("GalleryImageReference",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).GalleryImageReference, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.GalleryImageReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("ComputeVM"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVM = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeVMProperties) content.GetValueForProperty("ComputeVM",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVM, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ComputeVMPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkInterface"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterface = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INetworkInterfaceProperties) content.GetValueForProperty("NetworkInterface",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterface, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.NetworkInterfacePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Note"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).Note = (string) content.GetValueForProperty("Note",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).Note, global::System.Convert.ToString);
            }
            if (content.Contains("OwnerObjectId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).OwnerObjectId = (string) content.GetValueForProperty("OwnerObjectId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).OwnerObjectId, global::System.Convert.ToString);
            }
            if (content.Contains("OwnerUserPrincipalName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).OwnerUserPrincipalName = (string) content.GetValueForProperty("OwnerUserPrincipalName",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).OwnerUserPrincipalName, global::System.Convert.ToString);
            }
            if (content.Contains("CreatedByUserId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).CreatedByUserId = (string) content.GetValueForProperty("CreatedByUserId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).CreatedByUserId, global::System.Convert.ToString);
            }
            if (content.Contains("CreatedByUser"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).CreatedByUser = (string) content.GetValueForProperty("CreatedByUser",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).CreatedByUser, global::System.Convert.ToString);
            }
            if (content.Contains("CreatedDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).CreatedDate = (global::System.DateTime?) content.GetValueForProperty("CreatedDate",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).CreatedDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ComputeId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeId = (string) content.GetValueForProperty("ComputeId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeId, global::System.Convert.ToString);
            }
            if (content.Contains("CustomImageId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).CustomImageId = (string) content.GetValueForProperty("CustomImageId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).CustomImageId, global::System.Convert.ToString);
            }
            if (content.Contains("OSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).OSType = (string) content.GetValueForProperty("OSType",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).OSType, global::System.Convert.ToString);
            }
            if (content.Contains("Size"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).Size = (string) content.GetValueForProperty("Size",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).Size, global::System.Convert.ToString);
            }
            if (content.Contains("UserName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).UserName = (string) content.GetValueForProperty("UserName",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).UserName, global::System.Convert.ToString);
            }
            if (content.Contains("Password"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).Password = (string) content.GetValueForProperty("Password",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).Password, global::System.Convert.ToString);
            }
            if (content.Contains("SshKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).SshKey = (string) content.GetValueForProperty("SshKey",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).SshKey, global::System.Convert.ToString);
            }
            if (content.Contains("IsAuthenticationWithSshKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).IsAuthenticationWithSshKey = (bool?) content.GetValueForProperty("IsAuthenticationWithSshKey",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).IsAuthenticationWithSshKey, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Fqdn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).Fqdn = (string) content.GetValueForProperty("Fqdn",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).Fqdn, global::System.Convert.ToString);
            }
            if (content.Contains("LabSubnetName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).LabSubnetName = (string) content.GetValueForProperty("LabSubnetName",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).LabSubnetName, global::System.Convert.ToString);
            }
            if (content.Contains("LabVirtualNetworkId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).LabVirtualNetworkId = (string) content.GetValueForProperty("LabVirtualNetworkId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).LabVirtualNetworkId, global::System.Convert.ToString);
            }
            if (content.Contains("DisallowPublicIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).DisallowPublicIPAddress = (bool?) content.GetValueForProperty("DisallowPublicIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).DisallowPublicIPAddress, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Artifact"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).Artifact = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactInstallProperties[]) content.GetValueForProperty("Artifact",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).Artifact, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactInstallProperties>(__y, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ArtifactInstallPropertiesTypeConverter.ConvertFrom));
            }
            if (content.Contains("PlanId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).PlanId = (string) content.GetValueForProperty("PlanId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).PlanId, global::System.Convert.ToString);
            }
            if (content.Contains("ExpirationDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ExpirationDate = (global::System.DateTime?) content.GetValueForProperty("ExpirationDate",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ExpirationDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("AllowClaim"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).AllowClaim = (bool?) content.GetValueForProperty("AllowClaim",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).AllowClaim, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("StorageType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).StorageType = (string) content.GetValueForProperty("StorageType",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).StorageType, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualMachineCreationSource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).VirtualMachineCreationSource = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.VirtualMachineCreationSource?) content.GetValueForProperty("VirtualMachineCreationSource",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).VirtualMachineCreationSource, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.VirtualMachineCreationSource.CreateFrom);
            }
            if (content.Contains("EnvironmentId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).EnvironmentId = (string) content.GetValueForProperty("EnvironmentId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).EnvironmentId, global::System.Convert.ToString);
            }
            if (content.Contains("DataDiskParameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).DataDiskParameter = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskProperties[]) content.GetValueForProperty("DataDiskParameter",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).DataDiskParameter, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskProperties>(__y, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.DataDiskPropertiesTypeConverter.ConvertFrom));
            }
            if (content.Contains("ScheduleParameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ScheduleParameter = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameter[]) content.GetValueForProperty("ScheduleParameter",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ScheduleParameter, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameter>(__y, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ScheduleCreationParameterTypeConverter.ConvertFrom));
            }
            if (content.Contains("LastKnownPowerState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).LastKnownPowerState = (string) content.GetValueForProperty("LastKnownPowerState",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).LastKnownPowerState, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("UniqueIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).UniqueIdentifier = (string) content.GetValueForProperty("UniqueIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).UniqueIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("GalleryImageReferenceOffer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).GalleryImageReferenceOffer = (string) content.GetValueForProperty("GalleryImageReferenceOffer",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).GalleryImageReferenceOffer, global::System.Convert.ToString);
            }
            if (content.Contains("GalleryImageReferencePublisher"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).GalleryImageReferencePublisher = (string) content.GetValueForProperty("GalleryImageReferencePublisher",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).GalleryImageReferencePublisher, global::System.Convert.ToString);
            }
            if (content.Contains("GalleryImageReferenceSku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).GalleryImageReferenceSku = (string) content.GetValueForProperty("GalleryImageReferenceSku",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).GalleryImageReferenceSku, global::System.Convert.ToString);
            }
            if (content.Contains("GalleryImageReferenceOSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).GalleryImageReferenceOSType = (string) content.GetValueForProperty("GalleryImageReferenceOSType",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).GalleryImageReferenceOSType, global::System.Convert.ToString);
            }
            if (content.Contains("GalleryImageReferenceVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).GalleryImageReferenceVersion = (string) content.GetValueForProperty("GalleryImageReferenceVersion",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).GalleryImageReferenceVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ApplicableScheduleProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ApplicableScheduleProperty = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IApplicableScheduleProperties) content.GetValueForProperty("ApplicableScheduleProperty",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ApplicableScheduleProperty, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ApplicableSchedulePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("PropertiesArtifactDeploymentStatusDeploymentStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).PropertiesArtifactDeploymentStatusDeploymentStatus = (string) content.GetValueForProperty("PropertiesArtifactDeploymentStatusDeploymentStatus",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).PropertiesArtifactDeploymentStatusDeploymentStatus, global::System.Convert.ToString);
            }
            if (content.Contains("ArtifactDeploymentStatusArtifactsApplied"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ArtifactDeploymentStatusArtifactsApplied = (int?) content.GetValueForProperty("ArtifactDeploymentStatusArtifactsApplied",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ArtifactDeploymentStatusArtifactsApplied, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ArtifactDeploymentStatusTotalArtifact"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ArtifactDeploymentStatusTotalArtifact = (int?) content.GetValueForProperty("ArtifactDeploymentStatusTotalArtifact",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ArtifactDeploymentStatusTotalArtifact, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ComputeVMStatuses"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVMStatuses = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeVMInstanceViewStatus[]) content.GetValueForProperty("ComputeVMStatuses",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVMStatuses, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeVMInstanceViewStatus>(__y, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ComputeVMInstanceViewStatusTypeConverter.ConvertFrom));
            }
            if (content.Contains("ComputeVmosType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVmosType = (string) content.GetValueForProperty("ComputeVmosType",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVmosType, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeVMSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVMSize = (string) content.GetValueForProperty("ComputeVMSize",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVMSize, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeVMNetworkInterfaceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVMNetworkInterfaceId = (string) content.GetValueForProperty("ComputeVMNetworkInterfaceId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVMNetworkInterfaceId, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeVmosDiskId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVmosDiskId = (string) content.GetValueForProperty("ComputeVmosDiskId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVmosDiskId, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeVMDataDiskId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVMDataDiskId = (string[]) content.GetValueForProperty("ComputeVMDataDiskId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVMDataDiskId, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ComputeVMDataDisk"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVMDataDisk = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeDataDisk[]) content.GetValueForProperty("ComputeVMDataDisk",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVMDataDisk, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeDataDisk>(__y, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ComputeDataDiskTypeConverter.ConvertFrom));
            }
            if (content.Contains("NetworkInterfaceSharedPublicIPAddressConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfaceSharedPublicIPAddressConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ISharedPublicIPAddressConfiguration) content.GetValueForProperty("NetworkInterfaceSharedPublicIPAddressConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfaceSharedPublicIPAddressConfiguration, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.SharedPublicIPAddressConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkInterfaceVirtualNetworkId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfaceVirtualNetworkId = (string) content.GetValueForProperty("NetworkInterfaceVirtualNetworkId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfaceVirtualNetworkId, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkInterfaceSubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfaceSubnetId = (string) content.GetValueForProperty("NetworkInterfaceSubnetId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfaceSubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkInterfacePublicIPAddressId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfacePublicIPAddressId = (string) content.GetValueForProperty("NetworkInterfacePublicIPAddressId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfacePublicIPAddressId, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkInterfacePublicIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfacePublicIPAddress = (string) content.GetValueForProperty("NetworkInterfacePublicIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfacePublicIPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkInterfacePrivateIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfacePrivateIPAddress = (string) content.GetValueForProperty("NetworkInterfacePrivateIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfacePrivateIPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkInterfaceDnsName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfaceDnsName = (string) content.GetValueForProperty("NetworkInterfaceDnsName",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfaceDnsName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkInterfaceRdpAuthority"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfaceRdpAuthority = (string) content.GetValueForProperty("NetworkInterfaceRdpAuthority",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfaceRdpAuthority, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkInterfaceSshAuthority"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfaceSshAuthority = (string) content.GetValueForProperty("NetworkInterfaceSshAuthority",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfaceSshAuthority, global::System.Convert.ToString);
            }
            if (content.Contains("ApplicableScheduleId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ApplicableScheduleId = (string) content.GetValueForProperty("ApplicableScheduleId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ApplicableScheduleId, global::System.Convert.ToString);
            }
            if (content.Contains("ApplicableScheduleName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ApplicableScheduleName = (string) content.GetValueForProperty("ApplicableScheduleName",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ApplicableScheduleName, global::System.Convert.ToString);
            }
            if (content.Contains("ApplicableScheduleType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ApplicableScheduleType = (string) content.GetValueForProperty("ApplicableScheduleType",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ApplicableScheduleType, global::System.Convert.ToString);
            }
            if (content.Contains("ApplicableScheduleLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ApplicableScheduleLocation = (string) content.GetValueForProperty("ApplicableScheduleLocation",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ApplicableScheduleLocation, global::System.Convert.ToString);
            }
            if (content.Contains("ApplicableScheduleTag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ApplicableScheduleTag = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceTags) content.GetValueForProperty("ApplicableScheduleTag",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ApplicableScheduleTag, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SharedPublicIPAddressConfigurationInboundNatRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).SharedPublicIPAddressConfigurationInboundNatRule = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IInboundNatRule[]) content.GetValueForProperty("SharedPublicIPAddressConfigurationInboundNatRule",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).SharedPublicIPAddressConfigurationInboundNatRule, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IInboundNatRule>(__y, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.InboundNatRuleTypeConverter.ConvertFrom));
            }
            if (content.Contains("LabVmsShutdown"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).LabVmsShutdown = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ISchedule) content.GetValueForProperty("LabVmsShutdown",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).LabVmsShutdown, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ScheduleTypeConverter.ConvertFrom);
            }
            if (content.Contains("LabVmsStartup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).LabVmsStartup = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ISchedule) content.GetValueForProperty("LabVmsStartup",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).LabVmsStartup, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ScheduleTypeConverter.ConvertFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabVirtualMachine"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal LabVirtualMachine(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabVirtualMachinePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ApplicableSchedule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ApplicableSchedule = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IApplicableSchedule) content.GetValueForProperty("ApplicableSchedule",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ApplicableSchedule, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ApplicableScheduleTypeConverter.ConvertFrom);
            }
            if (content.Contains("PropertiesArtifactDeploymentStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).PropertiesArtifactDeploymentStatus = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactDeploymentStatusProperties) content.GetValueForProperty("PropertiesArtifactDeploymentStatus",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).PropertiesArtifactDeploymentStatus, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ArtifactDeploymentStatusPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("GalleryImageReference"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).GalleryImageReference = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IGalleryImageReference) content.GetValueForProperty("GalleryImageReference",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).GalleryImageReference, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.GalleryImageReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("ComputeVM"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVM = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeVMProperties) content.GetValueForProperty("ComputeVM",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVM, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ComputeVMPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkInterface"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterface = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INetworkInterfaceProperties) content.GetValueForProperty("NetworkInterface",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterface, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.NetworkInterfacePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Note"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).Note = (string) content.GetValueForProperty("Note",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).Note, global::System.Convert.ToString);
            }
            if (content.Contains("OwnerObjectId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).OwnerObjectId = (string) content.GetValueForProperty("OwnerObjectId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).OwnerObjectId, global::System.Convert.ToString);
            }
            if (content.Contains("OwnerUserPrincipalName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).OwnerUserPrincipalName = (string) content.GetValueForProperty("OwnerUserPrincipalName",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).OwnerUserPrincipalName, global::System.Convert.ToString);
            }
            if (content.Contains("CreatedByUserId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).CreatedByUserId = (string) content.GetValueForProperty("CreatedByUserId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).CreatedByUserId, global::System.Convert.ToString);
            }
            if (content.Contains("CreatedByUser"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).CreatedByUser = (string) content.GetValueForProperty("CreatedByUser",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).CreatedByUser, global::System.Convert.ToString);
            }
            if (content.Contains("CreatedDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).CreatedDate = (global::System.DateTime?) content.GetValueForProperty("CreatedDate",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).CreatedDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ComputeId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeId = (string) content.GetValueForProperty("ComputeId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeId, global::System.Convert.ToString);
            }
            if (content.Contains("CustomImageId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).CustomImageId = (string) content.GetValueForProperty("CustomImageId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).CustomImageId, global::System.Convert.ToString);
            }
            if (content.Contains("OSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).OSType = (string) content.GetValueForProperty("OSType",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).OSType, global::System.Convert.ToString);
            }
            if (content.Contains("Size"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).Size = (string) content.GetValueForProperty("Size",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).Size, global::System.Convert.ToString);
            }
            if (content.Contains("UserName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).UserName = (string) content.GetValueForProperty("UserName",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).UserName, global::System.Convert.ToString);
            }
            if (content.Contains("Password"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).Password = (string) content.GetValueForProperty("Password",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).Password, global::System.Convert.ToString);
            }
            if (content.Contains("SshKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).SshKey = (string) content.GetValueForProperty("SshKey",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).SshKey, global::System.Convert.ToString);
            }
            if (content.Contains("IsAuthenticationWithSshKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).IsAuthenticationWithSshKey = (bool?) content.GetValueForProperty("IsAuthenticationWithSshKey",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).IsAuthenticationWithSshKey, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Fqdn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).Fqdn = (string) content.GetValueForProperty("Fqdn",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).Fqdn, global::System.Convert.ToString);
            }
            if (content.Contains("LabSubnetName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).LabSubnetName = (string) content.GetValueForProperty("LabSubnetName",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).LabSubnetName, global::System.Convert.ToString);
            }
            if (content.Contains("LabVirtualNetworkId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).LabVirtualNetworkId = (string) content.GetValueForProperty("LabVirtualNetworkId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).LabVirtualNetworkId, global::System.Convert.ToString);
            }
            if (content.Contains("DisallowPublicIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).DisallowPublicIPAddress = (bool?) content.GetValueForProperty("DisallowPublicIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).DisallowPublicIPAddress, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Artifact"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).Artifact = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactInstallProperties[]) content.GetValueForProperty("Artifact",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).Artifact, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactInstallProperties>(__y, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ArtifactInstallPropertiesTypeConverter.ConvertFrom));
            }
            if (content.Contains("PlanId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).PlanId = (string) content.GetValueForProperty("PlanId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).PlanId, global::System.Convert.ToString);
            }
            if (content.Contains("ExpirationDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ExpirationDate = (global::System.DateTime?) content.GetValueForProperty("ExpirationDate",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ExpirationDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("AllowClaim"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).AllowClaim = (bool?) content.GetValueForProperty("AllowClaim",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).AllowClaim, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("StorageType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).StorageType = (string) content.GetValueForProperty("StorageType",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).StorageType, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualMachineCreationSource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).VirtualMachineCreationSource = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.VirtualMachineCreationSource?) content.GetValueForProperty("VirtualMachineCreationSource",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).VirtualMachineCreationSource, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.VirtualMachineCreationSource.CreateFrom);
            }
            if (content.Contains("EnvironmentId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).EnvironmentId = (string) content.GetValueForProperty("EnvironmentId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).EnvironmentId, global::System.Convert.ToString);
            }
            if (content.Contains("DataDiskParameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).DataDiskParameter = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskProperties[]) content.GetValueForProperty("DataDiskParameter",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).DataDiskParameter, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskProperties>(__y, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.DataDiskPropertiesTypeConverter.ConvertFrom));
            }
            if (content.Contains("ScheduleParameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ScheduleParameter = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameter[]) content.GetValueForProperty("ScheduleParameter",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ScheduleParameter, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameter>(__y, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ScheduleCreationParameterTypeConverter.ConvertFrom));
            }
            if (content.Contains("LastKnownPowerState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).LastKnownPowerState = (string) content.GetValueForProperty("LastKnownPowerState",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).LastKnownPowerState, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("UniqueIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).UniqueIdentifier = (string) content.GetValueForProperty("UniqueIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).UniqueIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("GalleryImageReferenceOffer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).GalleryImageReferenceOffer = (string) content.GetValueForProperty("GalleryImageReferenceOffer",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).GalleryImageReferenceOffer, global::System.Convert.ToString);
            }
            if (content.Contains("GalleryImageReferencePublisher"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).GalleryImageReferencePublisher = (string) content.GetValueForProperty("GalleryImageReferencePublisher",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).GalleryImageReferencePublisher, global::System.Convert.ToString);
            }
            if (content.Contains("GalleryImageReferenceSku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).GalleryImageReferenceSku = (string) content.GetValueForProperty("GalleryImageReferenceSku",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).GalleryImageReferenceSku, global::System.Convert.ToString);
            }
            if (content.Contains("GalleryImageReferenceOSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).GalleryImageReferenceOSType = (string) content.GetValueForProperty("GalleryImageReferenceOSType",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).GalleryImageReferenceOSType, global::System.Convert.ToString);
            }
            if (content.Contains("GalleryImageReferenceVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).GalleryImageReferenceVersion = (string) content.GetValueForProperty("GalleryImageReferenceVersion",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).GalleryImageReferenceVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ApplicableScheduleProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ApplicableScheduleProperty = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IApplicableScheduleProperties) content.GetValueForProperty("ApplicableScheduleProperty",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ApplicableScheduleProperty, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ApplicableSchedulePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("PropertiesArtifactDeploymentStatusDeploymentStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).PropertiesArtifactDeploymentStatusDeploymentStatus = (string) content.GetValueForProperty("PropertiesArtifactDeploymentStatusDeploymentStatus",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).PropertiesArtifactDeploymentStatusDeploymentStatus, global::System.Convert.ToString);
            }
            if (content.Contains("ArtifactDeploymentStatusArtifactsApplied"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ArtifactDeploymentStatusArtifactsApplied = (int?) content.GetValueForProperty("ArtifactDeploymentStatusArtifactsApplied",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ArtifactDeploymentStatusArtifactsApplied, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ArtifactDeploymentStatusTotalArtifact"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ArtifactDeploymentStatusTotalArtifact = (int?) content.GetValueForProperty("ArtifactDeploymentStatusTotalArtifact",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ArtifactDeploymentStatusTotalArtifact, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ComputeVMStatuses"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVMStatuses = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeVMInstanceViewStatus[]) content.GetValueForProperty("ComputeVMStatuses",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVMStatuses, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeVMInstanceViewStatus>(__y, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ComputeVMInstanceViewStatusTypeConverter.ConvertFrom));
            }
            if (content.Contains("ComputeVmosType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVmosType = (string) content.GetValueForProperty("ComputeVmosType",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVmosType, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeVMSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVMSize = (string) content.GetValueForProperty("ComputeVMSize",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVMSize, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeVMNetworkInterfaceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVMNetworkInterfaceId = (string) content.GetValueForProperty("ComputeVMNetworkInterfaceId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVMNetworkInterfaceId, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeVmosDiskId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVmosDiskId = (string) content.GetValueForProperty("ComputeVmosDiskId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVmosDiskId, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeVMDataDiskId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVMDataDiskId = (string[]) content.GetValueForProperty("ComputeVMDataDiskId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVMDataDiskId, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ComputeVMDataDisk"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVMDataDisk = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeDataDisk[]) content.GetValueForProperty("ComputeVMDataDisk",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ComputeVMDataDisk, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeDataDisk>(__y, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ComputeDataDiskTypeConverter.ConvertFrom));
            }
            if (content.Contains("NetworkInterfaceSharedPublicIPAddressConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfaceSharedPublicIPAddressConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ISharedPublicIPAddressConfiguration) content.GetValueForProperty("NetworkInterfaceSharedPublicIPAddressConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfaceSharedPublicIPAddressConfiguration, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.SharedPublicIPAddressConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkInterfaceVirtualNetworkId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfaceVirtualNetworkId = (string) content.GetValueForProperty("NetworkInterfaceVirtualNetworkId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfaceVirtualNetworkId, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkInterfaceSubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfaceSubnetId = (string) content.GetValueForProperty("NetworkInterfaceSubnetId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfaceSubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkInterfacePublicIPAddressId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfacePublicIPAddressId = (string) content.GetValueForProperty("NetworkInterfacePublicIPAddressId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfacePublicIPAddressId, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkInterfacePublicIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfacePublicIPAddress = (string) content.GetValueForProperty("NetworkInterfacePublicIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfacePublicIPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkInterfacePrivateIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfacePrivateIPAddress = (string) content.GetValueForProperty("NetworkInterfacePrivateIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfacePrivateIPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkInterfaceDnsName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfaceDnsName = (string) content.GetValueForProperty("NetworkInterfaceDnsName",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfaceDnsName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkInterfaceRdpAuthority"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfaceRdpAuthority = (string) content.GetValueForProperty("NetworkInterfaceRdpAuthority",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfaceRdpAuthority, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkInterfaceSshAuthority"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfaceSshAuthority = (string) content.GetValueForProperty("NetworkInterfaceSshAuthority",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).NetworkInterfaceSshAuthority, global::System.Convert.ToString);
            }
            if (content.Contains("ApplicableScheduleId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ApplicableScheduleId = (string) content.GetValueForProperty("ApplicableScheduleId",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ApplicableScheduleId, global::System.Convert.ToString);
            }
            if (content.Contains("ApplicableScheduleName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ApplicableScheduleName = (string) content.GetValueForProperty("ApplicableScheduleName",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ApplicableScheduleName, global::System.Convert.ToString);
            }
            if (content.Contains("ApplicableScheduleType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ApplicableScheduleType = (string) content.GetValueForProperty("ApplicableScheduleType",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ApplicableScheduleType, global::System.Convert.ToString);
            }
            if (content.Contains("ApplicableScheduleLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ApplicableScheduleLocation = (string) content.GetValueForProperty("ApplicableScheduleLocation",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ApplicableScheduleLocation, global::System.Convert.ToString);
            }
            if (content.Contains("ApplicableScheduleTag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ApplicableScheduleTag = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceTags) content.GetValueForProperty("ApplicableScheduleTag",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).ApplicableScheduleTag, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SharedPublicIPAddressConfigurationInboundNatRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).SharedPublicIPAddressConfigurationInboundNatRule = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IInboundNatRule[]) content.GetValueForProperty("SharedPublicIPAddressConfigurationInboundNatRule",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).SharedPublicIPAddressConfigurationInboundNatRule, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IInboundNatRule>(__y, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.InboundNatRuleTypeConverter.ConvertFrom));
            }
            if (content.Contains("LabVmsShutdown"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).LabVmsShutdown = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ISchedule) content.GetValueForProperty("LabVmsShutdown",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).LabVmsShutdown, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ScheduleTypeConverter.ConvertFrom);
            }
            if (content.Contains("LabVmsStartup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).LabVmsStartup = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ISchedule) content.GetValueForProperty("LabVmsStartup",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineInternal)this).LabVmsStartup, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ScheduleTypeConverter.ConvertFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// A virtual machine.
    [System.ComponentModel.TypeConverter(typeof(LabVirtualMachineTypeConverter))]
    public partial interface ILabVirtualMachine

    {

    }
}