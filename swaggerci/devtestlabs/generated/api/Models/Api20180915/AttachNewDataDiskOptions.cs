// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Extensions;

    /// <summary>Properties to attach new disk to the Virtual Machine.</summary>
    public partial class AttachNewDataDiskOptions :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IAttachNewDataDiskOptions,
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IAttachNewDataDiskOptionsInternal
    {

        /// <summary>Backing field for <see cref="DiskName" /> property.</summary>
        private string _diskName;

        /// <summary>The name of the disk to be attached.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string DiskName { get => this._diskName; set => this._diskName = value; }

        /// <summary>Backing field for <see cref="DiskSizeGiB" /> property.</summary>
        private int? _diskSizeGiB;

        /// <summary>Size of the disk to be attached in Gibibytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public int? DiskSizeGiB { get => this._diskSizeGiB; set => this._diskSizeGiB = value; }

        /// <summary>Backing field for <see cref="DiskType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.StorageType? _diskType;

        /// <summary>The storage type for the disk (i.e. Standard, Premium).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.StorageType? DiskType { get => this._diskType; set => this._diskType = value; }

        /// <summary>Creates an new <see cref="AttachNewDataDiskOptions" /> instance.</summary>
        public AttachNewDataDiskOptions()
        {

        }
    }
    /// Properties to attach new disk to the Virtual Machine.
    public partial interface IAttachNewDataDiskOptions :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.IJsonSerializable
    {
        /// <summary>The name of the disk to be attached.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the disk to be attached.",
        SerializedName = @"diskName",
        PossibleTypes = new [] { typeof(string) })]
        string DiskName { get; set; }
        /// <summary>Size of the disk to be attached in Gibibytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Size of the disk to be attached in Gibibytes.",
        SerializedName = @"diskSizeGiB",
        PossibleTypes = new [] { typeof(int) })]
        int? DiskSizeGiB { get; set; }
        /// <summary>The storage type for the disk (i.e. Standard, Premium).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The storage type for the disk (i.e. Standard, Premium).",
        SerializedName = @"diskType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.StorageType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.StorageType? DiskType { get; set; }

    }
    /// Properties to attach new disk to the Virtual Machine.
    internal partial interface IAttachNewDataDiskOptionsInternal

    {
        /// <summary>The name of the disk to be attached.</summary>
        string DiskName { get; set; }
        /// <summary>Size of the disk to be attached in Gibibytes.</summary>
        int? DiskSizeGiB { get; set; }
        /// <summary>The storage type for the disk (i.e. Standard, Premium).</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.StorageType? DiskType { get; set; }

    }
}