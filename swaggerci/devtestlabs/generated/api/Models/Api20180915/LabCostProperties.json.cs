// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Extensions;

    /// <summary>Properties of a cost item.</summary>
    public partial class LabCostProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject json ? new LabCostProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject into a new instance of <see cref="LabCostProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal LabCostProperties(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_targetCost = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject>("targetCost"), out var __jsonTargetCost) ? Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.TargetCostProperties.FromJson(__jsonTargetCost) : TargetCost;}
            {_labCostSummary = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject>("labCostSummary"), out var __jsonLabCostSummary) ? Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabCostSummaryProperties.FromJson(__jsonLabCostSummary) : LabCostSummary;}
            {_labCostDetail = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonArray>("labCostDetails"), out var __jsonLabCostDetails) ? If( __jsonLabCostDetails as Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostDetailsProperties[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabCostDetailsProperties) (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabCostDetailsProperties.FromJson(__u) )) ))() : null : LabCostDetail;}
            {_resourceCost = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonArray>("resourceCosts"), out var __jsonResourceCosts) ? If( __jsonResourceCosts as Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabResourceCostProperties[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabResourceCostProperties) (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabResourceCostProperties.FromJson(__p) )) ))() : null : ResourceCost;}
            {_currencyCode = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("currencyCode"), out var __jsonCurrencyCode) ? (string)__jsonCurrencyCode : (string)CurrencyCode;}
            {_startDateTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("startDateTime"), out var __jsonStartDateTime) ? global::System.DateTime.TryParse((string)__jsonStartDateTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonStartDateTimeValue) ? __jsonStartDateTimeValue : StartDateTime : StartDateTime;}
            {_endDateTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("endDateTime"), out var __jsonEndDateTime) ? global::System.DateTime.TryParse((string)__jsonEndDateTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonEndDateTimeValue) ? __jsonEndDateTimeValue : EndDateTime : EndDateTime;}
            {_createdDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("createdDate"), out var __jsonCreatedDate) ? global::System.DateTime.TryParse((string)__jsonCreatedDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonCreatedDateValue) ? __jsonCreatedDateValue : CreatedDate : CreatedDate;}
            {_provisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)ProvisioningState;}
            {_uniqueIdentifier = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("uniqueIdentifier"), out var __jsonUniqueIdentifier) ? (string)__jsonUniqueIdentifier : (string)UniqueIdentifier;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="LabCostProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="LabCostProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._targetCost ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) this._targetCost.ToJson(null,serializationMode) : null, "targetCost" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._labCostSummary ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) this._labCostSummary.ToJson(null,serializationMode) : null, "labCostSummary" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._labCostDetail)
                {
                    var __w = new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.XNodeArray();
                    foreach( var __x in this._labCostDetail )
                    {
                        AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                    }
                    container.Add("labCostDetails",__w);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._resourceCost)
                {
                    var __r = new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.XNodeArray();
                    foreach( var __s in this._resourceCost )
                    {
                        AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                    }
                    container.Add("resourceCosts",__r);
                }
            }
            AddIf( null != (((object)this._currencyCode)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._currencyCode.ToString()) : null, "currencyCode" ,container.Add );
            AddIf( null != this._startDateTime ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._startDateTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "startDateTime" ,container.Add );
            AddIf( null != this._endDateTime ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._endDateTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "endDateTime" ,container.Add );
            AddIf( null != this._createdDate ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._createdDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "createdDate" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._uniqueIdentifier)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._uniqueIdentifier.ToString()) : null, "uniqueIdentifier" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}