// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Extensions;

    /// <summary>Notification settings for a schedule.</summary>
    public partial class NotificationSettings :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INotificationSettings,
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INotificationSettingsInternal
    {

        /// <summary>Backing field for <see cref="EmailRecipient" /> property.</summary>
        private string _emailRecipient;

        /// <summary>
        /// The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string EmailRecipient { get => this._emailRecipient; set => this._emailRecipient = value; }

        /// <summary>Backing field for <see cref="NotificationLocale" /> property.</summary>
        private string _notificationLocale;

        /// <summary>
        /// The locale to use when sending a notification (fallback for unsupported languages is EN).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string NotificationLocale { get => this._notificationLocale; set => this._notificationLocale = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus? _status;

        /// <summary>If notifications are enabled for this schedule (i.e. Enabled, Disabled).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus? Status { get => this._status; set => this._status = value; }

        /// <summary>Backing field for <see cref="TimeInMinute" /> property.</summary>
        private int? _timeInMinute;

        /// <summary>Time in minutes before event at which notification will be sent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public int? TimeInMinute { get => this._timeInMinute; set => this._timeInMinute = value; }

        /// <summary>Backing field for <see cref="WebhookUrl" /> property.</summary>
        private string _webhookUrl;

        /// <summary>The webhook URL to which the notification will be sent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string WebhookUrl { get => this._webhookUrl; set => this._webhookUrl = value; }

        /// <summary>Creates an new <see cref="NotificationSettings" /> instance.</summary>
        public NotificationSettings()
        {

        }
    }
    /// Notification settings for a schedule.
    public partial interface INotificationSettings :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The email recipient to send notifications to (can be a list of semi-colon separated email addresses).",
        SerializedName = @"emailRecipient",
        PossibleTypes = new [] { typeof(string) })]
        string EmailRecipient { get; set; }
        /// <summary>
        /// The locale to use when sending a notification (fallback for unsupported languages is EN).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The locale to use when sending a notification (fallback for unsupported languages is EN).",
        SerializedName = @"notificationLocale",
        PossibleTypes = new [] { typeof(string) })]
        string NotificationLocale { get; set; }
        /// <summary>If notifications are enabled for this schedule (i.e. Enabled, Disabled).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus? Status { get; set; }
        /// <summary>Time in minutes before event at which notification will be sent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Time in minutes before event at which notification will be sent.",
        SerializedName = @"timeInMinutes",
        PossibleTypes = new [] { typeof(int) })]
        int? TimeInMinute { get; set; }
        /// <summary>The webhook URL to which the notification will be sent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The webhook URL to which the notification will be sent.",
        SerializedName = @"webhookUrl",
        PossibleTypes = new [] { typeof(string) })]
        string WebhookUrl { get; set; }

    }
    /// Notification settings for a schedule.
    internal partial interface INotificationSettingsInternal

    {
        /// <summary>
        /// The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
        /// </summary>
        string EmailRecipient { get; set; }
        /// <summary>
        /// The locale to use when sending a notification (fallback for unsupported languages is EN).
        /// </summary>
        string NotificationLocale { get; set; }
        /// <summary>If notifications are enabled for this schedule (i.e. Enabled, Disabled).</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.EnableStatus? Status { get; set; }
        /// <summary>Time in minutes before event at which notification will be sent.</summary>
        int? TimeInMinute { get; set; }
        /// <summary>The webhook URL to which the notification will be sent.</summary>
        string WebhookUrl { get; set; }

    }
}