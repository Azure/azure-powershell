// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Extensions;

    /// <summary>Properties for creating a custom image from a virtual machine.</summary>
    public partial class CustomImagePropertiesFromVM :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromVM,
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromVMInternal
    {

        /// <summary>Backing field for <see cref="LinuxOSInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILinuxOSInfo _linuxOSInfo;

        /// <summary>The Linux OS information of the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILinuxOSInfo LinuxOSInfo { get => (this._linuxOSInfo = this._linuxOSInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LinuxOSInfo()); set => this._linuxOSInfo = value; }

        /// <summary>
        /// The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.LinuxOSState? LinuxOSInfoLinuxOsstate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILinuxOSInfoInternal)LinuxOSInfo).LinuxOSState; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILinuxOSInfoInternal)LinuxOSInfo).LinuxOSState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.LinuxOSState)""); }

        /// <summary>Internal Acessors for LinuxOSInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILinuxOSInfo Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromVMInternal.LinuxOSInfo { get => (this._linuxOSInfo = this._linuxOSInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LinuxOSInfo()); set { {_linuxOSInfo = value;} } }

        /// <summary>Internal Acessors for WindowsOSInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IWindowsOSInfo Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromVMInternal.WindowsOSInfo { get => (this._windowsOSInfo = this._windowsOSInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.WindowsOSInfo()); set { {_windowsOSInfo = value;} } }

        /// <summary>Backing field for <see cref="SourceVMId" /> property.</summary>
        private string _sourceVMId;

        /// <summary>The source vm identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string SourceVMId { get => this._sourceVMId; set => this._sourceVMId = value; }

        /// <summary>
        /// The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.WindowsOSState? WindowOSInfoWindowsOsstate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IWindowsOSInfoInternal)WindowsOSInfo).WindowsOSState; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IWindowsOSInfoInternal)WindowsOSInfo).WindowsOSState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.WindowsOSState)""); }

        /// <summary>Backing field for <see cref="WindowsOSInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IWindowsOSInfo _windowsOSInfo;

        /// <summary>The Windows OS information of the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IWindowsOSInfo WindowsOSInfo { get => (this._windowsOSInfo = this._windowsOSInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.WindowsOSInfo()); set => this._windowsOSInfo = value; }

        /// <summary>Creates an new <see cref="CustomImagePropertiesFromVM" /> instance.</summary>
        public CustomImagePropertiesFromVM()
        {

        }
    }
    /// Properties for creating a custom image from a virtual machine.
    public partial interface ICustomImagePropertiesFromVM :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).",
        SerializedName = @"linuxOsState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.LinuxOSState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.LinuxOSState? LinuxOSInfoLinuxOsstate { get; set; }
        /// <summary>The source vm identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The source vm identifier.",
        SerializedName = @"sourceVmId",
        PossibleTypes = new [] { typeof(string) })]
        string SourceVMId { get; set; }
        /// <summary>
        /// The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).",
        SerializedName = @"windowsOsState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.WindowsOSState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.WindowsOSState? WindowOSInfoWindowsOsstate { get; set; }

    }
    /// Properties for creating a custom image from a virtual machine.
    internal partial interface ICustomImagePropertiesFromVMInternal

    {
        /// <summary>The Linux OS information of the VM.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILinuxOSInfo LinuxOSInfo { get; set; }
        /// <summary>
        /// The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.LinuxOSState? LinuxOSInfoLinuxOsstate { get; set; }
        /// <summary>The source vm identifier.</summary>
        string SourceVMId { get; set; }
        /// <summary>
        /// The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.WindowsOSState? WindowOSInfoWindowsOsstate { get; set; }
        /// <summary>The Windows OS information of the VM.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IWindowsOSInfo WindowsOSInfo { get; set; }

    }
}