// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Extensions;

    /// <summary>Properties of an artifact.</summary>
    public partial class ArtifactProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactPropertiesInternal
    {

        /// <summary>Backing field for <see cref="CreatedDate" /> property.</summary>
        private global::System.DateTime? _createdDate;

        /// <summary>The artifact's creation date.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public global::System.DateTime? CreatedDate { get => this._createdDate; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>The artifact's description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string Description { get => this._description; }

        /// <summary>Backing field for <see cref="FilePath" /> property.</summary>
        private string _filePath;

        /// <summary>The file path to the artifact.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string FilePath { get => this._filePath; }

        /// <summary>Backing field for <see cref="Icon" /> property.</summary>
        private string _icon;

        /// <summary>The URI to the artifact icon.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string Icon { get => this._icon; }

        /// <summary>Internal Acessors for CreatedDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactPropertiesInternal.CreatedDate { get => this._createdDate; set { {_createdDate = value;} } }

        /// <summary>Internal Acessors for Description</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactPropertiesInternal.Description { get => this._description; set { {_description = value;} } }

        /// <summary>Internal Acessors for FilePath</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactPropertiesInternal.FilePath { get => this._filePath; set { {_filePath = value;} } }

        /// <summary>Internal Acessors for Icon</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactPropertiesInternal.Icon { get => this._icon; set { {_icon = value;} } }

        /// <summary>Internal Acessors for Parameter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.IAny Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactPropertiesInternal.Parameter { get => (this._parameter = this._parameter ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Any()); set { {_parameter = value;} } }

        /// <summary>Internal Acessors for Publisher</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactPropertiesInternal.Publisher { get => this._publisher; set { {_publisher = value;} } }

        /// <summary>Internal Acessors for TargetOSType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactPropertiesInternal.TargetOSType { get => this._targetOSType; set { {_targetOSType = value;} } }

        /// <summary>Internal Acessors for Title</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactPropertiesInternal.Title { get => this._title; set { {_title = value;} } }

        /// <summary>Backing field for <see cref="Parameter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.IAny _parameter;

        /// <summary>The artifact's parameters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.IAny Parameter { get => (this._parameter = this._parameter ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Any()); }

        /// <summary>Backing field for <see cref="Publisher" /> property.</summary>
        private string _publisher;

        /// <summary>The artifact's publisher.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string Publisher { get => this._publisher; }

        /// <summary>Backing field for <see cref="TargetOSType" /> property.</summary>
        private string _targetOSType;

        /// <summary>The artifact's target OS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string TargetOSType { get => this._targetOSType; }

        /// <summary>Backing field for <see cref="Title" /> property.</summary>
        private string _title;

        /// <summary>The artifact's title.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string Title { get => this._title; }

        /// <summary>Creates an new <see cref="ArtifactProperties" /> instance.</summary>
        public ArtifactProperties()
        {

        }
    }
    /// Properties of an artifact.
    public partial interface IArtifactProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.IJsonSerializable
    {
        /// <summary>The artifact's creation date.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The artifact's creation date.",
        SerializedName = @"createdDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedDate { get;  }
        /// <summary>The artifact's description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The artifact's description.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get;  }
        /// <summary>The file path to the artifact.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The file path to the artifact.",
        SerializedName = @"filePath",
        PossibleTypes = new [] { typeof(string) })]
        string FilePath { get;  }
        /// <summary>The URI to the artifact icon.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The URI to the artifact icon.",
        SerializedName = @"icon",
        PossibleTypes = new [] { typeof(string) })]
        string Icon { get;  }
        /// <summary>The artifact's parameters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The artifact's parameters.",
        SerializedName = @"parameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.IAny Parameter { get;  }
        /// <summary>The artifact's publisher.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The artifact's publisher.",
        SerializedName = @"publisher",
        PossibleTypes = new [] { typeof(string) })]
        string Publisher { get;  }
        /// <summary>The artifact's target OS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The artifact's target OS.",
        SerializedName = @"targetOsType",
        PossibleTypes = new [] { typeof(string) })]
        string TargetOSType { get;  }
        /// <summary>The artifact's title.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The artifact's title.",
        SerializedName = @"title",
        PossibleTypes = new [] { typeof(string) })]
        string Title { get;  }

    }
    /// Properties of an artifact.
    internal partial interface IArtifactPropertiesInternal

    {
        /// <summary>The artifact's creation date.</summary>
        global::System.DateTime? CreatedDate { get; set; }
        /// <summary>The artifact's description.</summary>
        string Description { get; set; }
        /// <summary>The file path to the artifact.</summary>
        string FilePath { get; set; }
        /// <summary>The URI to the artifact icon.</summary>
        string Icon { get; set; }
        /// <summary>The artifact's parameters.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.IAny Parameter { get; set; }
        /// <summary>The artifact's publisher.</summary>
        string Publisher { get; set; }
        /// <summary>The artifact's target OS.</summary>
        string TargetOSType { get; set; }
        /// <summary>The artifact's title.</summary>
        string Title { get; set; }

    }
}