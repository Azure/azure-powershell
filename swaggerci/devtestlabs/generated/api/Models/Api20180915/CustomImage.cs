// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Extensions;

    /// <summary>A custom image.</summary>
    public partial class CustomImage :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImage,
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImageInternal,
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.Resource();

        /// <summary>The author of the custom image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string Author { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).Author; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).Author = value ?? null; }

        /// <summary>The creation date of the custom image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public global::System.DateTime? CreationDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).CreationDate; }

        /// <summary>Storage information about the data disks present in the custom image</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskStorageTypeInfo[] DataDiskStorageInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).DataDiskStorageInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).DataDiskStorageInfo = value ?? null /* arrayOf */; }

        /// <summary>The description of the custom image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).Description = value ?? null; }

        /// <summary>The identifier of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Id; }

        /// <summary>
        /// Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public bool? IsPlanAuthorized { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).IsPlanAuthorized; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).IsPlanAuthorized = value ?? default(bool); }

        /// <summary>
        /// The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.LinuxOSState? LinuxOSInfoLinuxOsstate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).LinuxOSInfoLinuxOsstate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).LinuxOSInfoLinuxOsstate = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.LinuxOSState)""); }

        /// <summary>The location of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Location = value ?? null; }

        /// <summary>The Managed Image Id backing the custom image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string ManagedImageId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).ManagedImageId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).ManagedImageId = value ?? null; }

        /// <summary>The Managed Snapshot Id backing the custom image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string ManagedSnapshotId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).ManagedSnapshotId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).ManagedSnapshotId = value ?? null; }

        /// <summary>Internal Acessors for CreationDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImageInternal.CreationDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).CreationDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).CreationDate = value; }

        /// <summary>Internal Acessors for Plan</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromPlan Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImageInternal.Plan { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).CustomImagePlan; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).CustomImagePlan = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImageProperties Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImageInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.CustomImageProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImageInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for UniqueIdentifier</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImageInternal.UniqueIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).UniqueIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).UniqueIdentifier = value; }

        /// <summary>Internal Acessors for VM</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromVM Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImageInternal.VM { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).VM; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).VM = value; }

        /// <summary>Internal Acessors for VMLinuxOsinfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILinuxOSInfo Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImageInternal.VMLinuxOsinfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).VMLinuxOsinfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).VMLinuxOsinfo = value; }

        /// <summary>Internal Acessors for VMWindowsOsinfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IWindowsOSInfo Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImageInternal.VMWindowsOsinfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).VMWindowsOsinfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).VMWindowsOsinfo = value; }

        /// <summary>Internal Acessors for Vhd</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesCustom Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImageInternal.Vhd { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).Vhd; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).Vhd = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Name; }

        /// <summary>The id of the plan, equivalent to name of the plan</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string PlanId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).CustomImagePlanId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).CustomImagePlanId = value ?? null; }

        /// <summary>
        /// The offer for the plan from the marketplace image the custom image is derived from
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string PlanOffer { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).CustomImagePlanOffer; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).CustomImagePlanOffer = value ?? null; }

        /// <summary>
        /// The publisher for the plan from the marketplace image the custom image is derived from
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string PlanPublisher { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).CustomImagePlanPublisher; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).CustomImagePlanPublisher = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImageProperties _property;

        /// <summary>The properties of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImageProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.CustomImageProperties()); set => this._property = value; }

        /// <summary>The provisioning status of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).ProvisioningState; }

        /// <summary>The tags of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Tag = value ?? null /* model class */; }

        /// <summary>The type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)__resource).Type; }

        /// <summary>The unique immutable identifier of a resource (Guid).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string UniqueIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).UniqueIdentifier; }

        /// <summary>The source vm identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string VMSourceVmid { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).VMSourceVmid; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).VMSourceVmid = value ?? null; }

        /// <summary>The image name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string VhdImageName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).VhdImageName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).VhdImageName = value ?? null; }

        /// <summary>The OS type of the custom image (i.e. Windows, Linux)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.CustomImageOSType? VhdOSType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).VhdOSType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).VhdOSType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.CustomImageOSType)""); }

        /// <summary>Indicates whether sysprep has been run on the VHD.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public bool? VhdSysPrep { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).VhdSysPrep; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).VhdSysPrep = value ?? default(bool); }

        /// <summary>
        /// The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.WindowsOSState? WindowOSInfoWindowsOsstate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).WindowOSInfoWindowsOsstate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesInternal)Property).WindowOSInfoWindowsOsstate = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.WindowsOSState)""); }

        /// <summary>Creates an new <see cref="CustomImage" /> instance.</summary>
        public CustomImage()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// A custom image.
    public partial interface ICustomImage :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResource
    {
        /// <summary>The author of the custom image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The author of the custom image.",
        SerializedName = @"author",
        PossibleTypes = new [] { typeof(string) })]
        string Author { get; set; }
        /// <summary>The creation date of the custom image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The creation date of the custom image.",
        SerializedName = @"creationDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreationDate { get;  }
        /// <summary>Storage information about the data disks present in the custom image</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage information about the data disks present in the custom image",
        SerializedName = @"dataDiskStorageInfo",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskStorageTypeInfo) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskStorageTypeInfo[] DataDiskStorageInfo { get; set; }
        /// <summary>The description of the custom image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The description of the custom image.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>
        /// Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment",
        SerializedName = @"isPlanAuthorized",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsPlanAuthorized { get; set; }
        /// <summary>
        /// The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).",
        SerializedName = @"linuxOsState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.LinuxOSState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.LinuxOSState? LinuxOSInfoLinuxOsstate { get; set; }
        /// <summary>The Managed Image Id backing the custom image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Managed Image Id backing the custom image.",
        SerializedName = @"managedImageId",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedImageId { get; set; }
        /// <summary>The Managed Snapshot Id backing the custom image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Managed Snapshot Id backing the custom image.",
        SerializedName = @"managedSnapshotId",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedSnapshotId { get; set; }
        /// <summary>The id of the plan, equivalent to name of the plan</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The id of the plan, equivalent to name of the plan",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string PlanId { get; set; }
        /// <summary>
        /// The offer for the plan from the marketplace image the custom image is derived from
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The offer for the plan from the marketplace image the custom image is derived from",
        SerializedName = @"offer",
        PossibleTypes = new [] { typeof(string) })]
        string PlanOffer { get; set; }
        /// <summary>
        /// The publisher for the plan from the marketplace image the custom image is derived from
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The publisher for the plan from the marketplace image the custom image is derived from",
        SerializedName = @"publisher",
        PossibleTypes = new [] { typeof(string) })]
        string PlanPublisher { get; set; }
        /// <summary>The provisioning status of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning status of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>The unique immutable identifier of a resource (Guid).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The unique immutable identifier of a resource (Guid).",
        SerializedName = @"uniqueIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string UniqueIdentifier { get;  }
        /// <summary>The source vm identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The source vm identifier.",
        SerializedName = @"sourceVmId",
        PossibleTypes = new [] { typeof(string) })]
        string VMSourceVmid { get; set; }
        /// <summary>The image name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The image name.",
        SerializedName = @"imageName",
        PossibleTypes = new [] { typeof(string) })]
        string VhdImageName { get; set; }
        /// <summary>The OS type of the custom image (i.e. Windows, Linux)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The OS type of the custom image (i.e. Windows, Linux)",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.CustomImageOSType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.CustomImageOSType? VhdOSType { get; set; }
        /// <summary>Indicates whether sysprep has been run on the VHD.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether sysprep has been run on the VHD.",
        SerializedName = @"sysPrep",
        PossibleTypes = new [] { typeof(bool) })]
        bool? VhdSysPrep { get; set; }
        /// <summary>
        /// The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).",
        SerializedName = @"windowsOsState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.WindowsOSState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.WindowsOSState? WindowOSInfoWindowsOsstate { get; set; }

    }
    /// A custom image.
    internal partial interface ICustomImageInternal :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal
    {
        /// <summary>The author of the custom image.</summary>
        string Author { get; set; }
        /// <summary>The creation date of the custom image.</summary>
        global::System.DateTime? CreationDate { get; set; }
        /// <summary>Storage information about the data disks present in the custom image</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskStorageTypeInfo[] DataDiskStorageInfo { get; set; }
        /// <summary>The description of the custom image.</summary>
        string Description { get; set; }
        /// <summary>
        /// Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment
        /// </summary>
        bool? IsPlanAuthorized { get; set; }
        /// <summary>
        /// The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.LinuxOSState? LinuxOSInfoLinuxOsstate { get; set; }
        /// <summary>The Managed Image Id backing the custom image.</summary>
        string ManagedImageId { get; set; }
        /// <summary>The Managed Snapshot Id backing the custom image.</summary>
        string ManagedSnapshotId { get; set; }
        /// <summary>Storage information about the plan related to this custom image</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromPlan Plan { get; set; }
        /// <summary>The id of the plan, equivalent to name of the plan</summary>
        string PlanId { get; set; }
        /// <summary>
        /// The offer for the plan from the marketplace image the custom image is derived from
        /// </summary>
        string PlanOffer { get; set; }
        /// <summary>
        /// The publisher for the plan from the marketplace image the custom image is derived from
        /// </summary>
        string PlanPublisher { get; set; }
        /// <summary>The properties of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImageProperties Property { get; set; }
        /// <summary>The provisioning status of the resource.</summary>
        string ProvisioningState { get; set; }
        /// <summary>The unique immutable identifier of a resource (Guid).</summary>
        string UniqueIdentifier { get; set; }
        /// <summary>The virtual machine from which the image is to be created.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesFromVM VM { get; set; }
        /// <summary>The Linux OS information of the VM.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILinuxOSInfo VMLinuxOsinfo { get; set; }
        /// <summary>The source vm identifier.</summary>
        string VMSourceVmid { get; set; }
        /// <summary>The Windows OS information of the VM.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IWindowsOSInfo VMWindowsOsinfo { get; set; }
        /// <summary>The VHD from which the image is to be created.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ICustomImagePropertiesCustom Vhd { get; set; }
        /// <summary>The image name.</summary>
        string VhdImageName { get; set; }
        /// <summary>The OS type of the custom image (i.e. Windows, Linux)</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.CustomImageOSType? VhdOSType { get; set; }
        /// <summary>Indicates whether sysprep has been run on the VHD.</summary>
        bool? VhdSysPrep { get; set; }
        /// <summary>
        /// The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.WindowsOSState? WindowOSInfoWindowsOsstate { get; set; }

    }
}