// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Extensions;

    /// <summary>The properties of a resource cost item.</summary>
    public partial class LabResourceCostProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabResourceCostProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabResourceCostProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabResourceCostProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject json ? new LabResourceCostProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject into a new instance of <see cref="LabResourceCostProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal LabResourceCostProperties(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_resourcename = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("resourcename"), out var __jsonResourcename) ? (string)__jsonResourcename : (string)Resourcename;}
            {_resourceUId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("resourceUId"), out var __jsonResourceUId) ? (string)__jsonResourceUId : (string)ResourceUId;}
            {_resourceCost = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNumber>("resourceCost"), out var __jsonResourceCost) ? (double?)__jsonResourceCost : ResourceCost;}
            {_resourceType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("resourceType"), out var __jsonResourceType) ? (string)__jsonResourceType : (string)ResourceType;}
            {_resourceOwner = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("resourceOwner"), out var __jsonResourceOwner) ? (string)__jsonResourceOwner : (string)ResourceOwner;}
            {_resourcePricingTier = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("resourcePricingTier"), out var __jsonResourcePricingTier) ? (string)__jsonResourcePricingTier : (string)ResourcePricingTier;}
            {_resourceStatus = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("resourceStatus"), out var __jsonResourceStatus) ? (string)__jsonResourceStatus : (string)ResourceStatus;}
            {_resourceId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("resourceId"), out var __jsonResourceId) ? (string)__jsonResourceId : (string)ResourceId;}
            {_externalResourceId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString>("externalResourceId"), out var __jsonExternalResourceId) ? (string)__jsonExternalResourceId : (string)ExternalResourceId;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="LabResourceCostProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="LabResourceCostProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != (((object)this._resourcename)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._resourcename.ToString()) : null, "resourcename" ,container.Add );
            AddIf( null != (((object)this._resourceUId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._resourceUId.ToString()) : null, "resourceUId" ,container.Add );
            AddIf( null != this._resourceCost ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNumber((double)this._resourceCost) : null, "resourceCost" ,container.Add );
            AddIf( null != (((object)this._resourceType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._resourceType.ToString()) : null, "resourceType" ,container.Add );
            AddIf( null != (((object)this._resourceOwner)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._resourceOwner.ToString()) : null, "resourceOwner" ,container.Add );
            AddIf( null != (((object)this._resourcePricingTier)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._resourcePricingTier.ToString()) : null, "resourcePricingTier" ,container.Add );
            AddIf( null != (((object)this._resourceStatus)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._resourceStatus.ToString()) : null, "resourceStatus" ,container.Add );
            AddIf( null != (((object)this._resourceId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._resourceId.ToString()) : null, "resourceId" ,container.Add );
            AddIf( null != (((object)this._externalResourceId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonString(this._externalResourceId.ToString()) : null, "externalResourceId" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}