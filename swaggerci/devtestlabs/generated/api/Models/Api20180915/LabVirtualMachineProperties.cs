// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Extensions;

    /// <summary>Properties of a virtual machine.</summary>
    public partial class LabVirtualMachineProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachinePropertiesInternal
    {

        /// <summary>Backing field for <see cref="AllowClaim" /> property.</summary>
        private bool? _allowClaim;

        /// <summary>Indicates whether another user can take ownership of the virtual machine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public bool? AllowClaim { get => this._allowClaim; set => this._allowClaim = value; }

        /// <summary>Backing field for <see cref="ApplicableSchedule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IApplicableSchedule _applicableSchedule;

        /// <summary>The applicable schedule for the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IApplicableSchedule ApplicableSchedule { get => (this._applicableSchedule = this._applicableSchedule ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ApplicableSchedule()); }

        /// <summary>The identifier of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string ApplicableScheduleId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)ApplicableSchedule).Id; }

        /// <summary>The location of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string ApplicableScheduleLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)ApplicableSchedule).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)ApplicableSchedule).Location = value ?? null; }

        /// <summary>The name of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string ApplicableScheduleName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)ApplicableSchedule).Name; }

        /// <summary>The tags of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceTags ApplicableScheduleTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)ApplicableSchedule).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)ApplicableSchedule).Tag = value ?? null /* model class */; }

        /// <summary>The type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string ApplicableScheduleType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)ApplicableSchedule).Type; }

        /// <summary>Backing field for <see cref="Artifact" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactInstallProperties[] _artifact;

        /// <summary>The artifacts to be installed on the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactInstallProperties[] Artifact { get => this._artifact; set => this._artifact = value; }

        /// <summary>Backing field for <see cref="ArtifactDeploymentStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactDeploymentStatusProperties _artifactDeploymentStatus;

        /// <summary>The artifact deployment status for the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactDeploymentStatusProperties ArtifactDeploymentStatus { get => (this._artifactDeploymentStatus = this._artifactDeploymentStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ArtifactDeploymentStatusProperties()); }

        /// <summary>The total count of the artifacts that were successfully applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public int? ArtifactDeploymentStatusArtifactsApplied { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactDeploymentStatusPropertiesInternal)ArtifactDeploymentStatus).ArtifactsApplied; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactDeploymentStatusPropertiesInternal)ArtifactDeploymentStatus).ArtifactsApplied = value ?? default(int); }

        /// <summary>The deployment status of the artifact.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string ArtifactDeploymentStatusDeploymentStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactDeploymentStatusPropertiesInternal)ArtifactDeploymentStatus).DeploymentStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactDeploymentStatusPropertiesInternal)ArtifactDeploymentStatus).DeploymentStatus = value ?? null; }

        /// <summary>The total count of the artifacts that were tentatively applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public int? ArtifactDeploymentStatusTotalArtifact { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactDeploymentStatusPropertiesInternal)ArtifactDeploymentStatus).TotalArtifact; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactDeploymentStatusPropertiesInternal)ArtifactDeploymentStatus).TotalArtifact = value ?? default(int); }

        /// <summary>Backing field for <see cref="ComputeId" /> property.</summary>
        private string _computeId;

        /// <summary>The resource identifier (Microsoft.Compute) of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string ComputeId { get => this._computeId; }

        /// <summary>Backing field for <see cref="ComputeVM" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeVMProperties _computeVM;

        /// <summary>The compute virtual machine properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeVMProperties ComputeVM { get => (this._computeVM = this._computeVM ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ComputeVMProperties()); }

        /// <summary>Gets all data disks attached to the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeDataDisk[] ComputeVMDataDisk { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeVMPropertiesInternal)ComputeVM).DataDisk; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeVMPropertiesInternal)ComputeVM).DataDisk = value ?? null /* arrayOf */; }

        /// <summary>Gets data disks blob uri for the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string[] ComputeVMDataDiskId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeVMPropertiesInternal)ComputeVM).DataDiskId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeVMPropertiesInternal)ComputeVM).DataDiskId = value ?? null /* arrayOf */; }

        /// <summary>Gets the network interface ID of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string ComputeVMNetworkInterfaceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeVMPropertiesInternal)ComputeVM).NetworkInterfaceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeVMPropertiesInternal)ComputeVM).NetworkInterfaceId = value ?? null; }

        /// <summary>Gets the size of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string ComputeVMSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeVMPropertiesInternal)ComputeVM).VMSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeVMPropertiesInternal)ComputeVM).VMSize = value ?? null; }

        /// <summary>Gets the statuses of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeVMInstanceViewStatus[] ComputeVMStatuses { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeVMPropertiesInternal)ComputeVM).Statuses; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeVMPropertiesInternal)ComputeVM).Statuses = value ?? null /* arrayOf */; }

        /// <summary>Gets OS disk blob uri for the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string ComputeVmosDiskId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeVMPropertiesInternal)ComputeVM).OSDiskId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeVMPropertiesInternal)ComputeVM).OSDiskId = value ?? null; }

        /// <summary>Gets the OS type of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string ComputeVmosType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeVMPropertiesInternal)ComputeVM).OSType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeVMPropertiesInternal)ComputeVM).OSType = value ?? null; }

        /// <summary>Backing field for <see cref="CreatedByUser" /> property.</summary>
        private string _createdByUser;

        /// <summary>The email address of creator of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string CreatedByUser { get => this._createdByUser; }

        /// <summary>Backing field for <see cref="CreatedByUserId" /> property.</summary>
        private string _createdByUserId;

        /// <summary>The object identifier of the creator of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string CreatedByUserId { get => this._createdByUserId; }

        /// <summary>Backing field for <see cref="CreatedDate" /> property.</summary>
        private global::System.DateTime? _createdDate;

        /// <summary>The creation date of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public global::System.DateTime? CreatedDate { get => this._createdDate; set => this._createdDate = value; }

        /// <summary>Backing field for <see cref="CustomImageId" /> property.</summary>
        private string _customImageId;

        /// <summary>The custom image identifier of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string CustomImageId { get => this._customImageId; set => this._customImageId = value; }

        /// <summary>Backing field for <see cref="DataDiskParameter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskProperties[] _dataDiskParameter;

        /// <summary>New or existing data disks to attach to the virtual machine after creation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskProperties[] DataDiskParameter { get => this._dataDiskParameter; set => this._dataDiskParameter = value; }

        /// <summary>Backing field for <see cref="DisallowPublicIPAddress" /> property.</summary>
        private bool? _disallowPublicIPAddress;

        /// <summary>
        /// Indicates whether the virtual machine is to be created without a public IP address.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public bool? DisallowPublicIPAddress { get => this._disallowPublicIPAddress; set => this._disallowPublicIPAddress = value; }

        /// <summary>Backing field for <see cref="EnvironmentId" /> property.</summary>
        private string _environmentId;

        /// <summary>The resource ID of the environment that contains this virtual machine, if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string EnvironmentId { get => this._environmentId; set => this._environmentId = value; }

        /// <summary>Backing field for <see cref="ExpirationDate" /> property.</summary>
        private global::System.DateTime? _expirationDate;

        /// <summary>The expiration date for VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public global::System.DateTime? ExpirationDate { get => this._expirationDate; set => this._expirationDate = value; }

        /// <summary>Backing field for <see cref="Fqdn" /> property.</summary>
        private string _fqdn;

        /// <summary>The fully-qualified domain name of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string Fqdn { get => this._fqdn; }

        /// <summary>Backing field for <see cref="GalleryImageReference" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IGalleryImageReference _galleryImageReference;

        /// <summary>The Microsoft Azure Marketplace image reference of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IGalleryImageReference GalleryImageReference { get => (this._galleryImageReference = this._galleryImageReference ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.GalleryImageReference()); set => this._galleryImageReference = value; }

        /// <summary>The OS type of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string GalleryImageReferenceOSType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IGalleryImageReferenceInternal)GalleryImageReference).OSType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IGalleryImageReferenceInternal)GalleryImageReference).OSType = value ?? null; }

        /// <summary>The offer of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string GalleryImageReferenceOffer { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IGalleryImageReferenceInternal)GalleryImageReference).Offer; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IGalleryImageReferenceInternal)GalleryImageReference).Offer = value ?? null; }

        /// <summary>The publisher of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string GalleryImageReferencePublisher { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IGalleryImageReferenceInternal)GalleryImageReference).Publisher; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IGalleryImageReferenceInternal)GalleryImageReference).Publisher = value ?? null; }

        /// <summary>The SKU of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string GalleryImageReferenceSku { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IGalleryImageReferenceInternal)GalleryImageReference).Sku; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IGalleryImageReferenceInternal)GalleryImageReference).Sku = value ?? null; }

        /// <summary>The version of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string GalleryImageReferenceVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IGalleryImageReferenceInternal)GalleryImageReference).Version; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IGalleryImageReferenceInternal)GalleryImageReference).Version = value ?? null; }

        /// <summary>Backing field for <see cref="IsAuthenticationWithSshKey" /> property.</summary>
        private bool? _isAuthenticationWithSshKey;

        /// <summary>Indicates whether this virtual machine uses an SSH key for authentication.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public bool? IsAuthenticationWithSshKey { get => this._isAuthenticationWithSshKey; set => this._isAuthenticationWithSshKey = value; }

        /// <summary>Backing field for <see cref="LabSubnetName" /> property.</summary>
        private string _labSubnetName;

        /// <summary>The lab subnet name of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string LabSubnetName { get => this._labSubnetName; set => this._labSubnetName = value; }

        /// <summary>Backing field for <see cref="LabVirtualNetworkId" /> property.</summary>
        private string _labVirtualNetworkId;

        /// <summary>The lab virtual network identifier of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string LabVirtualNetworkId { get => this._labVirtualNetworkId; set => this._labVirtualNetworkId = value; }

        /// <summary>
        /// The auto-shutdown schedule, if one has been set at the lab or lab resource level.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ISchedule LabVmsShutdown { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IApplicableScheduleInternal)ApplicableSchedule).LabVmsShutdown; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IApplicableScheduleInternal)ApplicableSchedule).LabVmsShutdown = value ?? null /* model class */; }

        /// <summary>
        /// The auto-startup schedule, if one has been set at the lab or lab resource level.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ISchedule LabVmsStartup { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IApplicableScheduleInternal)ApplicableSchedule).LabVmsStartup; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IApplicableScheduleInternal)ApplicableSchedule).LabVmsStartup = value ?? null /* model class */; }

        /// <summary>Backing field for <see cref="LastKnownPowerState" /> property.</summary>
        private string _lastKnownPowerState;

        /// <summary>Last known compute power state captured in DTL</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string LastKnownPowerState { get => this._lastKnownPowerState; }

        /// <summary>Internal Acessors for ApplicableSchedule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IApplicableSchedule Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachinePropertiesInternal.ApplicableSchedule { get => (this._applicableSchedule = this._applicableSchedule ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ApplicableSchedule()); set { {_applicableSchedule = value;} } }

        /// <summary>Internal Acessors for ApplicableScheduleId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachinePropertiesInternal.ApplicableScheduleId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)ApplicableSchedule).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)ApplicableSchedule).Id = value; }

        /// <summary>Internal Acessors for ApplicableScheduleName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachinePropertiesInternal.ApplicableScheduleName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)ApplicableSchedule).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)ApplicableSchedule).Name = value; }

        /// <summary>Internal Acessors for ApplicableScheduleProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IApplicableScheduleProperties Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachinePropertiesInternal.ApplicableScheduleProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IApplicableScheduleInternal)ApplicableSchedule).Property; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IApplicableScheduleInternal)ApplicableSchedule).Property = value; }

        /// <summary>Internal Acessors for ApplicableScheduleType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachinePropertiesInternal.ApplicableScheduleType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)ApplicableSchedule).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)ApplicableSchedule).Type = value; }

        /// <summary>Internal Acessors for ArtifactDeploymentStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactDeploymentStatusProperties Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachinePropertiesInternal.ArtifactDeploymentStatus { get => (this._artifactDeploymentStatus = this._artifactDeploymentStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ArtifactDeploymentStatusProperties()); set { {_artifactDeploymentStatus = value;} } }

        /// <summary>Internal Acessors for ComputeId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachinePropertiesInternal.ComputeId { get => this._computeId; set { {_computeId = value;} } }

        /// <summary>Internal Acessors for ComputeVM</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeVMProperties Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachinePropertiesInternal.ComputeVM { get => (this._computeVM = this._computeVM ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ComputeVMProperties()); set { {_computeVM = value;} } }

        /// <summary>Internal Acessors for CreatedByUser</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachinePropertiesInternal.CreatedByUser { get => this._createdByUser; set { {_createdByUser = value;} } }

        /// <summary>Internal Acessors for CreatedByUserId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachinePropertiesInternal.CreatedByUserId { get => this._createdByUserId; set { {_createdByUserId = value;} } }

        /// <summary>Internal Acessors for Fqdn</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachinePropertiesInternal.Fqdn { get => this._fqdn; set { {_fqdn = value;} } }

        /// <summary>Internal Acessors for GalleryImageReference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IGalleryImageReference Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachinePropertiesInternal.GalleryImageReference { get => (this._galleryImageReference = this._galleryImageReference ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.GalleryImageReference()); set { {_galleryImageReference = value;} } }

        /// <summary>Internal Acessors for LastKnownPowerState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachinePropertiesInternal.LastKnownPowerState { get => this._lastKnownPowerState; set { {_lastKnownPowerState = value;} } }

        /// <summary>Internal Acessors for NetworkInterface</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INetworkInterfaceProperties Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachinePropertiesInternal.NetworkInterface { get => (this._networkInterface = this._networkInterface ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.NetworkInterfaceProperties()); set { {_networkInterface = value;} } }

        /// <summary>Internal Acessors for NetworkInterfaceSharedPublicIPAddressConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ISharedPublicIPAddressConfiguration Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachinePropertiesInternal.NetworkInterfaceSharedPublicIPAddressConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INetworkInterfacePropertiesInternal)NetworkInterface).SharedPublicIPAddressConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INetworkInterfacePropertiesInternal)NetworkInterface).SharedPublicIPAddressConfiguration = value; }

        /// <summary>Internal Acessors for OSType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachinePropertiesInternal.OSType { get => this._oSType; set { {_oSType = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachinePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for UniqueIdentifier</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachinePropertiesInternal.UniqueIdentifier { get => this._uniqueIdentifier; set { {_uniqueIdentifier = value;} } }

        /// <summary>Internal Acessors for VirtualMachineCreationSource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.VirtualMachineCreationSource? Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachinePropertiesInternal.VirtualMachineCreationSource { get => this._virtualMachineCreationSource; set { {_virtualMachineCreationSource = value;} } }

        /// <summary>Backing field for <see cref="NetworkInterface" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INetworkInterfaceProperties _networkInterface;

        /// <summary>The network interface properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INetworkInterfaceProperties NetworkInterface { get => (this._networkInterface = this._networkInterface ?? new Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.NetworkInterfaceProperties()); set => this._networkInterface = value; }

        /// <summary>The DNS name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string NetworkInterfaceDnsName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INetworkInterfacePropertiesInternal)NetworkInterface).DnsName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INetworkInterfacePropertiesInternal)NetworkInterface).DnsName = value ?? null; }

        /// <summary>The private IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string NetworkInterfacePrivateIPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INetworkInterfacePropertiesInternal)NetworkInterface).PrivateIPAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INetworkInterfacePropertiesInternal)NetworkInterface).PrivateIPAddress = value ?? null; }

        /// <summary>The public IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string NetworkInterfacePublicIPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INetworkInterfacePropertiesInternal)NetworkInterface).PublicIPAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INetworkInterfacePropertiesInternal)NetworkInterface).PublicIPAddress = value ?? null; }

        /// <summary>The resource ID of the public IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string NetworkInterfacePublicIPAddressId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INetworkInterfacePropertiesInternal)NetworkInterface).PublicIPAddressId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INetworkInterfacePropertiesInternal)NetworkInterface).PublicIPAddressId = value ?? null; }

        /// <summary>
        /// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote
        /// Desktop Protocol).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string NetworkInterfaceRdpAuthority { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INetworkInterfacePropertiesInternal)NetworkInterface).RdpAuthority; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INetworkInterfacePropertiesInternal)NetworkInterface).RdpAuthority = value ?? null; }

        /// <summary>
        /// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string NetworkInterfaceSshAuthority { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INetworkInterfacePropertiesInternal)NetworkInterface).SshAuthority; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INetworkInterfacePropertiesInternal)NetworkInterface).SshAuthority = value ?? null; }

        /// <summary>The resource ID of the sub net.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string NetworkInterfaceSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INetworkInterfacePropertiesInternal)NetworkInterface).SubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INetworkInterfacePropertiesInternal)NetworkInterface).SubnetId = value ?? null; }

        /// <summary>The resource ID of the virtual network.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public string NetworkInterfaceVirtualNetworkId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INetworkInterfacePropertiesInternal)NetworkInterface).VirtualNetworkId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INetworkInterfacePropertiesInternal)NetworkInterface).VirtualNetworkId = value ?? null; }

        /// <summary>Backing field for <see cref="Note" /> property.</summary>
        private string _note;

        /// <summary>The notes of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string Note { get => this._note; set => this._note = value; }

        /// <summary>Backing field for <see cref="OSType" /> property.</summary>
        private string _oSType;

        /// <summary>The OS type of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string OSType { get => this._oSType; }

        /// <summary>Backing field for <see cref="OwnerObjectId" /> property.</summary>
        private string _ownerObjectId;

        /// <summary>The object identifier of the owner of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string OwnerObjectId { get => this._ownerObjectId; set => this._ownerObjectId = value; }

        /// <summary>Backing field for <see cref="OwnerUserPrincipalName" /> property.</summary>
        private string _ownerUserPrincipalName;

        /// <summary>The user principal name of the virtual machine owner.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string OwnerUserPrincipalName { get => this._ownerUserPrincipalName; set => this._ownerUserPrincipalName = value; }

        /// <summary>Backing field for <see cref="Password" /> property.</summary>
        private string _password;

        /// <summary>The password of the virtual machine administrator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string Password { get => this._password; set => this._password = value; }

        /// <summary>Backing field for <see cref="PlanId" /> property.</summary>
        private string _planId;

        /// <summary>The id of the plan associated with the virtual machine image</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string PlanId { get => this._planId; set => this._planId = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>The provisioning status of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="ScheduleParameter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameter[] _scheduleParameter;

        /// <summary>Virtual Machine schedules to be created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameter[] ScheduleParameter { get => this._scheduleParameter; set => this._scheduleParameter = value; }

        /// <summary>The incoming NAT rules</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IInboundNatRule[] SharedPublicIPAddressConfigurationInboundNatRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INetworkInterfacePropertiesInternal)NetworkInterface).SharedPublicIPAddressConfigurationInboundNatRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INetworkInterfacePropertiesInternal)NetworkInterface).SharedPublicIPAddressConfigurationInboundNatRule = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Size" /> property.</summary>
        private string _size;

        /// <summary>The size of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string Size { get => this._size; set => this._size = value; }

        /// <summary>Backing field for <see cref="SshKey" /> property.</summary>
        private string _sshKey;

        /// <summary>The SSH key of the virtual machine administrator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string SshKey { get => this._sshKey; set => this._sshKey = value; }

        /// <summary>Backing field for <see cref="StorageType" /> property.</summary>
        private string _storageType;

        /// <summary>Storage type to use for virtual machine (i.e. Standard, Premium).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string StorageType { get => this._storageType; set => this._storageType = value; }

        /// <summary>Backing field for <see cref="UniqueIdentifier" /> property.</summary>
        private string _uniqueIdentifier;

        /// <summary>The unique immutable identifier of a resource (Guid).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string UniqueIdentifier { get => this._uniqueIdentifier; }

        /// <summary>Backing field for <see cref="UserName" /> property.</summary>
        private string _userName;

        /// <summary>The user name of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public string UserName { get => this._userName; set => this._userName = value; }

        /// <summary>Backing field for <see cref="VirtualMachineCreationSource" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.VirtualMachineCreationSource? _virtualMachineCreationSource;

        /// <summary>Tells source of creation of lab virtual machine. Output property only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.VirtualMachineCreationSource? VirtualMachineCreationSource { get => this._virtualMachineCreationSource; }

        /// <summary>Creates an new <see cref="LabVirtualMachineProperties" /> instance.</summary>
        public LabVirtualMachineProperties()
        {

        }
    }
    /// Properties of a virtual machine.
    public partial interface ILabVirtualMachineProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.IJsonSerializable
    {
        /// <summary>Indicates whether another user can take ownership of the virtual machine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether another user can take ownership of the virtual machine",
        SerializedName = @"allowClaim",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AllowClaim { get; set; }
        /// <summary>The identifier of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The identifier of the resource.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string ApplicableScheduleId { get;  }
        /// <summary>The location of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The location of the resource.",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string ApplicableScheduleLocation { get; set; }
        /// <summary>The name of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the resource.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ApplicableScheduleName { get;  }
        /// <summary>The tags of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tags of the resource.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceTags ApplicableScheduleTag { get; set; }
        /// <summary>The type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of the resource.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string ApplicableScheduleType { get;  }
        /// <summary>The artifacts to be installed on the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The artifacts to be installed on the virtual machine.",
        SerializedName = @"artifacts",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactInstallProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactInstallProperties[] Artifact { get; set; }
        /// <summary>The total count of the artifacts that were successfully applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The total count of the artifacts that were successfully applied.",
        SerializedName = @"artifactsApplied",
        PossibleTypes = new [] { typeof(int) })]
        int? ArtifactDeploymentStatusArtifactsApplied { get; set; }
        /// <summary>The deployment status of the artifact.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The deployment status of the artifact.",
        SerializedName = @"deploymentStatus",
        PossibleTypes = new [] { typeof(string) })]
        string ArtifactDeploymentStatusDeploymentStatus { get; set; }
        /// <summary>The total count of the artifacts that were tentatively applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The total count of the artifacts that were tentatively applied.",
        SerializedName = @"totalArtifacts",
        PossibleTypes = new [] { typeof(int) })]
        int? ArtifactDeploymentStatusTotalArtifact { get; set; }
        /// <summary>The resource identifier (Microsoft.Compute) of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource identifier (Microsoft.Compute) of the virtual machine.",
        SerializedName = @"computeId",
        PossibleTypes = new [] { typeof(string) })]
        string ComputeId { get;  }
        /// <summary>Gets all data disks attached to the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets all data disks attached to the virtual machine.",
        SerializedName = @"dataDisks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeDataDisk) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeDataDisk[] ComputeVMDataDisk { get; set; }
        /// <summary>Gets data disks blob uri for the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets data disks blob uri for the virtual machine.",
        SerializedName = @"dataDiskIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] ComputeVMDataDiskId { get; set; }
        /// <summary>Gets the network interface ID of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets the network interface ID of the virtual machine.",
        SerializedName = @"networkInterfaceId",
        PossibleTypes = new [] { typeof(string) })]
        string ComputeVMNetworkInterfaceId { get; set; }
        /// <summary>Gets the size of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets the size of the virtual machine.",
        SerializedName = @"vmSize",
        PossibleTypes = new [] { typeof(string) })]
        string ComputeVMSize { get; set; }
        /// <summary>Gets the statuses of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets the statuses of the virtual machine.",
        SerializedName = @"statuses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeVMInstanceViewStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeVMInstanceViewStatus[] ComputeVMStatuses { get; set; }
        /// <summary>Gets OS disk blob uri for the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets OS disk blob uri for the virtual machine.",
        SerializedName = @"osDiskId",
        PossibleTypes = new [] { typeof(string) })]
        string ComputeVmosDiskId { get; set; }
        /// <summary>Gets the OS type of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets the OS type of the virtual machine.",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(string) })]
        string ComputeVmosType { get; set; }
        /// <summary>The email address of creator of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The email address of creator of the virtual machine.",
        SerializedName = @"createdByUser",
        PossibleTypes = new [] { typeof(string) })]
        string CreatedByUser { get;  }
        /// <summary>The object identifier of the creator of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The object identifier of the creator of the virtual machine.",
        SerializedName = @"createdByUserId",
        PossibleTypes = new [] { typeof(string) })]
        string CreatedByUserId { get;  }
        /// <summary>The creation date of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The creation date of the virtual machine.",
        SerializedName = @"createdDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedDate { get; set; }
        /// <summary>The custom image identifier of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The custom image identifier of the virtual machine.",
        SerializedName = @"customImageId",
        PossibleTypes = new [] { typeof(string) })]
        string CustomImageId { get; set; }
        /// <summary>New or existing data disks to attach to the virtual machine after creation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"New or existing data disks to attach to the virtual machine after creation",
        SerializedName = @"dataDiskParameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskProperties[] DataDiskParameter { get; set; }
        /// <summary>
        /// Indicates whether the virtual machine is to be created without a public IP address.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether the virtual machine is to be created without a public IP address.",
        SerializedName = @"disallowPublicIpAddress",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DisallowPublicIPAddress { get; set; }
        /// <summary>The resource ID of the environment that contains this virtual machine, if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the environment that contains this virtual machine, if any.",
        SerializedName = @"environmentId",
        PossibleTypes = new [] { typeof(string) })]
        string EnvironmentId { get; set; }
        /// <summary>The expiration date for VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The expiration date for VM.",
        SerializedName = @"expirationDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExpirationDate { get; set; }
        /// <summary>The fully-qualified domain name of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The fully-qualified domain name of the virtual machine.",
        SerializedName = @"fqdn",
        PossibleTypes = new [] { typeof(string) })]
        string Fqdn { get;  }
        /// <summary>The OS type of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The OS type of the gallery image.",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(string) })]
        string GalleryImageReferenceOSType { get; set; }
        /// <summary>The offer of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The offer of the gallery image.",
        SerializedName = @"offer",
        PossibleTypes = new [] { typeof(string) })]
        string GalleryImageReferenceOffer { get; set; }
        /// <summary>The publisher of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The publisher of the gallery image.",
        SerializedName = @"publisher",
        PossibleTypes = new [] { typeof(string) })]
        string GalleryImageReferencePublisher { get; set; }
        /// <summary>The SKU of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SKU of the gallery image.",
        SerializedName = @"sku",
        PossibleTypes = new [] { typeof(string) })]
        string GalleryImageReferenceSku { get; set; }
        /// <summary>The version of the gallery image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the gallery image.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string GalleryImageReferenceVersion { get; set; }
        /// <summary>Indicates whether this virtual machine uses an SSH key for authentication.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether this virtual machine uses an SSH key for authentication.",
        SerializedName = @"isAuthenticationWithSshKey",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsAuthenticationWithSshKey { get; set; }
        /// <summary>The lab subnet name of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The lab subnet name of the virtual machine.",
        SerializedName = @"labSubnetName",
        PossibleTypes = new [] { typeof(string) })]
        string LabSubnetName { get; set; }
        /// <summary>The lab virtual network identifier of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The lab virtual network identifier of the virtual machine.",
        SerializedName = @"labVirtualNetworkId",
        PossibleTypes = new [] { typeof(string) })]
        string LabVirtualNetworkId { get; set; }
        /// <summary>
        /// The auto-shutdown schedule, if one has been set at the lab or lab resource level.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The auto-shutdown schedule, if one has been set at the lab or lab resource level.",
        SerializedName = @"labVmsShutdown",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ISchedule) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ISchedule LabVmsShutdown { get; set; }
        /// <summary>
        /// The auto-startup schedule, if one has been set at the lab or lab resource level.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The auto-startup schedule, if one has been set at the lab or lab resource level.",
        SerializedName = @"labVmsStartup",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ISchedule) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ISchedule LabVmsStartup { get; set; }
        /// <summary>Last known compute power state captured in DTL</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last known compute power state captured in DTL",
        SerializedName = @"lastKnownPowerState",
        PossibleTypes = new [] { typeof(string) })]
        string LastKnownPowerState { get;  }
        /// <summary>The DNS name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The DNS name.",
        SerializedName = @"dnsName",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfaceDnsName { get; set; }
        /// <summary>The private IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The private IP address.",
        SerializedName = @"privateIpAddress",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfacePrivateIPAddress { get; set; }
        /// <summary>The public IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The public IP address.",
        SerializedName = @"publicIpAddress",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfacePublicIPAddress { get; set; }
        /// <summary>The resource ID of the public IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the public IP address.",
        SerializedName = @"publicIpAddressId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfacePublicIPAddressId { get; set; }
        /// <summary>
        /// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote
        /// Desktop Protocol).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).",
        SerializedName = @"rdpAuthority",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfaceRdpAuthority { get; set; }
        /// <summary>
        /// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.",
        SerializedName = @"sshAuthority",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfaceSshAuthority { get; set; }
        /// <summary>The resource ID of the sub net.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the sub net.",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfaceSubnetId { get; set; }
        /// <summary>The resource ID of the virtual network.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the virtual network.",
        SerializedName = @"virtualNetworkId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkInterfaceVirtualNetworkId { get; set; }
        /// <summary>The notes of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The notes of the virtual machine.",
        SerializedName = @"notes",
        PossibleTypes = new [] { typeof(string) })]
        string Note { get; set; }
        /// <summary>The OS type of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The OS type of the virtual machine.",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(string) })]
        string OSType { get;  }
        /// <summary>The object identifier of the owner of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The object identifier of the owner of the virtual machine.",
        SerializedName = @"ownerObjectId",
        PossibleTypes = new [] { typeof(string) })]
        string OwnerObjectId { get; set; }
        /// <summary>The user principal name of the virtual machine owner.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user principal name of the virtual machine owner.",
        SerializedName = @"ownerUserPrincipalName",
        PossibleTypes = new [] { typeof(string) })]
        string OwnerUserPrincipalName { get; set; }
        /// <summary>The password of the virtual machine administrator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The password of the virtual machine administrator.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string Password { get; set; }
        /// <summary>The id of the plan associated with the virtual machine image</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The id of the plan associated with the virtual machine image",
        SerializedName = @"planId",
        PossibleTypes = new [] { typeof(string) })]
        string PlanId { get; set; }
        /// <summary>The provisioning status of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning status of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>Virtual Machine schedules to be created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Virtual Machine schedules to be created",
        SerializedName = @"scheduleParameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameter) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameter[] ScheduleParameter { get; set; }
        /// <summary>The incoming NAT rules</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The incoming NAT rules",
        SerializedName = @"inboundNatRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IInboundNatRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IInboundNatRule[] SharedPublicIPAddressConfigurationInboundNatRule { get; set; }
        /// <summary>The size of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The size of the virtual machine.",
        SerializedName = @"size",
        PossibleTypes = new [] { typeof(string) })]
        string Size { get; set; }
        /// <summary>The SSH key of the virtual machine administrator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SSH key of the virtual machine administrator.",
        SerializedName = @"sshKey",
        PossibleTypes = new [] { typeof(string) })]
        string SshKey { get; set; }
        /// <summary>Storage type to use for virtual machine (i.e. Standard, Premium).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage type to use for virtual machine (i.e. Standard, Premium).",
        SerializedName = @"storageType",
        PossibleTypes = new [] { typeof(string) })]
        string StorageType { get; set; }
        /// <summary>The unique immutable identifier of a resource (Guid).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The unique immutable identifier of a resource (Guid).",
        SerializedName = @"uniqueIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string UniqueIdentifier { get;  }
        /// <summary>The user name of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user name of the virtual machine.",
        SerializedName = @"userName",
        PossibleTypes = new [] { typeof(string) })]
        string UserName { get; set; }
        /// <summary>Tells source of creation of lab virtual machine. Output property only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Tells source of creation of lab virtual machine. Output property only.",
        SerializedName = @"virtualMachineCreationSource",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.VirtualMachineCreationSource) })]
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.VirtualMachineCreationSource? VirtualMachineCreationSource { get;  }

    }
    /// Properties of a virtual machine.
    internal partial interface ILabVirtualMachinePropertiesInternal

    {
        /// <summary>Indicates whether another user can take ownership of the virtual machine</summary>
        bool? AllowClaim { get; set; }
        /// <summary>The applicable schedule for the virtual machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IApplicableSchedule ApplicableSchedule { get; set; }
        /// <summary>The identifier of the resource.</summary>
        string ApplicableScheduleId { get; set; }
        /// <summary>The location of the resource.</summary>
        string ApplicableScheduleLocation { get; set; }
        /// <summary>The name of the resource.</summary>
        string ApplicableScheduleName { get; set; }
        /// <summary>The properties of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IApplicableScheduleProperties ApplicableScheduleProperty { get; set; }
        /// <summary>The tags of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceTags ApplicableScheduleTag { get; set; }
        /// <summary>The type of the resource.</summary>
        string ApplicableScheduleType { get; set; }
        /// <summary>The artifacts to be installed on the virtual machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactInstallProperties[] Artifact { get; set; }
        /// <summary>The artifact deployment status for the virtual machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IArtifactDeploymentStatusProperties ArtifactDeploymentStatus { get; set; }
        /// <summary>The total count of the artifacts that were successfully applied.</summary>
        int? ArtifactDeploymentStatusArtifactsApplied { get; set; }
        /// <summary>The deployment status of the artifact.</summary>
        string ArtifactDeploymentStatusDeploymentStatus { get; set; }
        /// <summary>The total count of the artifacts that were tentatively applied.</summary>
        int? ArtifactDeploymentStatusTotalArtifact { get; set; }
        /// <summary>The resource identifier (Microsoft.Compute) of the virtual machine.</summary>
        string ComputeId { get; set; }
        /// <summary>The compute virtual machine properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeVMProperties ComputeVM { get; set; }
        /// <summary>Gets all data disks attached to the virtual machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeDataDisk[] ComputeVMDataDisk { get; set; }
        /// <summary>Gets data disks blob uri for the virtual machine.</summary>
        string[] ComputeVMDataDiskId { get; set; }
        /// <summary>Gets the network interface ID of the virtual machine.</summary>
        string ComputeVMNetworkInterfaceId { get; set; }
        /// <summary>Gets the size of the virtual machine.</summary>
        string ComputeVMSize { get; set; }
        /// <summary>Gets the statuses of the virtual machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IComputeVMInstanceViewStatus[] ComputeVMStatuses { get; set; }
        /// <summary>Gets OS disk blob uri for the virtual machine.</summary>
        string ComputeVmosDiskId { get; set; }
        /// <summary>Gets the OS type of the virtual machine.</summary>
        string ComputeVmosType { get; set; }
        /// <summary>The email address of creator of the virtual machine.</summary>
        string CreatedByUser { get; set; }
        /// <summary>The object identifier of the creator of the virtual machine.</summary>
        string CreatedByUserId { get; set; }
        /// <summary>The creation date of the virtual machine.</summary>
        global::System.DateTime? CreatedDate { get; set; }
        /// <summary>The custom image identifier of the virtual machine.</summary>
        string CustomImageId { get; set; }
        /// <summary>New or existing data disks to attach to the virtual machine after creation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IDataDiskProperties[] DataDiskParameter { get; set; }
        /// <summary>
        /// Indicates whether the virtual machine is to be created without a public IP address.
        /// </summary>
        bool? DisallowPublicIPAddress { get; set; }
        /// <summary>The resource ID of the environment that contains this virtual machine, if any.</summary>
        string EnvironmentId { get; set; }
        /// <summary>The expiration date for VM.</summary>
        global::System.DateTime? ExpirationDate { get; set; }
        /// <summary>The fully-qualified domain name of the virtual machine.</summary>
        string Fqdn { get; set; }
        /// <summary>The Microsoft Azure Marketplace image reference of the virtual machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IGalleryImageReference GalleryImageReference { get; set; }
        /// <summary>The OS type of the gallery image.</summary>
        string GalleryImageReferenceOSType { get; set; }
        /// <summary>The offer of the gallery image.</summary>
        string GalleryImageReferenceOffer { get; set; }
        /// <summary>The publisher of the gallery image.</summary>
        string GalleryImageReferencePublisher { get; set; }
        /// <summary>The SKU of the gallery image.</summary>
        string GalleryImageReferenceSku { get; set; }
        /// <summary>The version of the gallery image.</summary>
        string GalleryImageReferenceVersion { get; set; }
        /// <summary>Indicates whether this virtual machine uses an SSH key for authentication.</summary>
        bool? IsAuthenticationWithSshKey { get; set; }
        /// <summary>The lab subnet name of the virtual machine.</summary>
        string LabSubnetName { get; set; }
        /// <summary>The lab virtual network identifier of the virtual machine.</summary>
        string LabVirtualNetworkId { get; set; }
        /// <summary>
        /// The auto-shutdown schedule, if one has been set at the lab or lab resource level.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ISchedule LabVmsShutdown { get; set; }
        /// <summary>
        /// The auto-startup schedule, if one has been set at the lab or lab resource level.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ISchedule LabVmsStartup { get; set; }
        /// <summary>Last known compute power state captured in DTL</summary>
        string LastKnownPowerState { get; set; }
        /// <summary>The network interface properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.INetworkInterfaceProperties NetworkInterface { get; set; }
        /// <summary>The DNS name.</summary>
        string NetworkInterfaceDnsName { get; set; }
        /// <summary>The private IP address.</summary>
        string NetworkInterfacePrivateIPAddress { get; set; }
        /// <summary>The public IP address.</summary>
        string NetworkInterfacePublicIPAddress { get; set; }
        /// <summary>The resource ID of the public IP address.</summary>
        string NetworkInterfacePublicIPAddressId { get; set; }
        /// <summary>
        /// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote
        /// Desktop Protocol).
        /// </summary>
        string NetworkInterfaceRdpAuthority { get; set; }
        /// <summary>
        /// The configuration for sharing a public IP address across multiple virtual machines.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ISharedPublicIPAddressConfiguration NetworkInterfaceSharedPublicIPAddressConfiguration { get; set; }
        /// <summary>
        /// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
        /// </summary>
        string NetworkInterfaceSshAuthority { get; set; }
        /// <summary>The resource ID of the sub net.</summary>
        string NetworkInterfaceSubnetId { get; set; }
        /// <summary>The resource ID of the virtual network.</summary>
        string NetworkInterfaceVirtualNetworkId { get; set; }
        /// <summary>The notes of the virtual machine.</summary>
        string Note { get; set; }
        /// <summary>The OS type of the virtual machine.</summary>
        string OSType { get; set; }
        /// <summary>The object identifier of the owner of the virtual machine.</summary>
        string OwnerObjectId { get; set; }
        /// <summary>The user principal name of the virtual machine owner.</summary>
        string OwnerUserPrincipalName { get; set; }
        /// <summary>The password of the virtual machine administrator.</summary>
        string Password { get; set; }
        /// <summary>The id of the plan associated with the virtual machine image</summary>
        string PlanId { get; set; }
        /// <summary>The provisioning status of the resource.</summary>
        string ProvisioningState { get; set; }
        /// <summary>Virtual Machine schedules to be created</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IScheduleCreationParameter[] ScheduleParameter { get; set; }
        /// <summary>The incoming NAT rules</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IInboundNatRule[] SharedPublicIPAddressConfigurationInboundNatRule { get; set; }
        /// <summary>The size of the virtual machine.</summary>
        string Size { get; set; }
        /// <summary>The SSH key of the virtual machine administrator.</summary>
        string SshKey { get; set; }
        /// <summary>Storage type to use for virtual machine (i.e. Standard, Premium).</summary>
        string StorageType { get; set; }
        /// <summary>The unique immutable identifier of a resource (Guid).</summary>
        string UniqueIdentifier { get; set; }
        /// <summary>The user name of the virtual machine.</summary>
        string UserName { get; set; }
        /// <summary>Tells source of creation of lab virtual machine. Output property only.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Support.VirtualMachineCreationSource? VirtualMachineCreationSource { get; set; }

    }
}