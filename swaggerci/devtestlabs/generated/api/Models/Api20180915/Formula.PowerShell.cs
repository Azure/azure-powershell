// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915
{
    using Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.PowerShell;

    /// <summary>A formula for creating a VM, specifying an image base and other parameters</summary>
    [System.ComponentModel.TypeConverter(typeof(FormulaTypeConverter))]
    public partial class Formula
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.Formula"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormula" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormula DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new Formula(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.Formula"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormula" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormula DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new Formula(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.Formula"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal Formula(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.FormulaPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("VM"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).VM = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaPropertiesFromVM) content.GetValueForProperty("VM",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).VM, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.FormulaPropertiesFromVMTypeConverter.ConvertFrom);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("Author"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).Author = (string) content.GetValueForProperty("Author",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).Author, global::System.Convert.ToString);
            }
            if (content.Contains("OSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).OSType = (string) content.GetValueForProperty("OSType",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).OSType, global::System.Convert.ToString);
            }
            if (content.Contains("CreationDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).CreationDate = (global::System.DateTime?) content.GetValueForProperty("CreationDate",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).CreationDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("UniqueIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).UniqueIdentifier = (string) content.GetValueForProperty("UniqueIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).UniqueIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("Content"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).Content = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameter) content.GetValueForProperty("Content",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).Content, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabVirtualMachineCreationParameterTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMLabVmid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).VMLabVmid = (string) content.GetValueForProperty("VMLabVmid",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).VMLabVmid, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.Formula"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal Formula(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.FormulaPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("VM"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).VM = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaPropertiesFromVM) content.GetValueForProperty("VM",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).VM, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.FormulaPropertiesFromVMTypeConverter.ConvertFrom);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("Author"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).Author = (string) content.GetValueForProperty("Author",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).Author, global::System.Convert.ToString);
            }
            if (content.Contains("OSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).OSType = (string) content.GetValueForProperty("OSType",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).OSType, global::System.Convert.ToString);
            }
            if (content.Contains("CreationDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).CreationDate = (global::System.DateTime?) content.GetValueForProperty("CreationDate",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).CreationDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("UniqueIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).UniqueIdentifier = (string) content.GetValueForProperty("UniqueIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).UniqueIdentifier, global::System.Convert.ToString);
            }
            if (content.Contains("Content"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).Content = (Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.ILabVirtualMachineCreationParameter) content.GetValueForProperty("Content",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).Content, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.LabVirtualMachineCreationParameterTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMLabVmid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).VMLabVmid = (string) content.GetValueForProperty("VMLabVmid",((Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormulaInternal)this).VMLabVmid, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="Formula" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Models.Api20180915.IFormula FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.DevTestLabs.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// A formula for creating a VM, specifying an image base and other parameters
    [System.ComponentModel.TypeConverter(typeof(FormulaTypeConverter))]
    public partial interface IFormula

    {

    }
}