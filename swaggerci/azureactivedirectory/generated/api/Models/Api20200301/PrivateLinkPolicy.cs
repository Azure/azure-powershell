// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Models.Api20200301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Runtime.Extensions;

    /// <summary>PrivateLink Policy configuration object.</summary>
    public partial class PrivateLinkPolicy :
        Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Models.Api20200301.IPrivateLinkPolicy,
        Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Models.Api20200301.IPrivateLinkPolicyInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Models.Api20200301.IAzureResourceBase"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Models.Api20200301.IAzureResourceBase __azureResourceBase = new Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Models.Api20200301.AzureResourceBase();

        /// <summary>Backing field for <see cref="AllTenant" /> property.</summary>
        private bool? _allTenant;

        /// <summary>Flag indicating whether all tenants are allowed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Origin(Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.PropertyOrigin.Owned)]
        public bool? AllTenant { get => this._allTenant; set => this._allTenant = value; }

        /// <summary>String Id used to locate any resource on Azure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Origin(Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Models.Api20200301.IAzureResourceBaseInternal)__azureResourceBase).Id; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Models.Api20200301.IAzureResourceBaseInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Models.Api20200301.IAzureResourceBaseInternal)__azureResourceBase).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Models.Api20200301.IAzureResourceBaseInternal)__azureResourceBase).Id = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Models.Api20200301.IAzureResourceBaseInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Models.Api20200301.IAzureResourceBaseInternal)__azureResourceBase).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Models.Api20200301.IAzureResourceBaseInternal)__azureResourceBase).Type = value; }

        /// <summary>Name of this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Origin(Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Models.Api20200301.IAzureResourceBaseInternal)__azureResourceBase).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Models.Api20200301.IAzureResourceBaseInternal)__azureResourceBase).Name = value ?? null; }

        /// <summary>Backing field for <see cref="OwnerTenantId" /> property.</summary>
        private string _ownerTenantId;

        /// <summary>Guid of the owner tenant</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Origin(Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.PropertyOrigin.Owned)]
        public string OwnerTenantId { get => this._ownerTenantId; set => this._ownerTenantId = value; }

        /// <summary>Backing field for <see cref="ResourceGroup" /> property.</summary>
        private string _resourceGroup;

        /// <summary>Name of the resource group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Origin(Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.PropertyOrigin.Owned)]
        public string ResourceGroup { get => this._resourceGroup; set => this._resourceGroup = value; }

        /// <summary>Backing field for <see cref="ResourceName" /> property.</summary>
        private string _resourceName;

        /// <summary>Name of the private link policy resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Origin(Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.PropertyOrigin.Owned)]
        public string ResourceName { get => this._resourceName; set => this._resourceName = value; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>Subscription Identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Origin(Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; set => this._subscriptionId = value; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Models.Api20200301.IPrivateLinkPolicyTags _tag;

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Origin(Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Models.Api20200301.IPrivateLinkPolicyTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Models.Api20200301.PrivateLinkPolicyTags()); set => this._tag = value; }

        /// <summary>Backing field for <see cref="Tenant" /> property.</summary>
        private string[] _tenant;

        /// <summary>The list of tenantIds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Origin(Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.PropertyOrigin.Owned)]
        public string[] Tenant { get => this._tenant; set => this._tenant = value; }

        /// <summary>Type of this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Origin(Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Models.Api20200301.IAzureResourceBaseInternal)__azureResourceBase).Type; }

        /// <summary>Creates an new <see cref="PrivateLinkPolicy" /> instance.</summary>
        public PrivateLinkPolicy()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__azureResourceBase), __azureResourceBase);
            await eventListener.AssertObjectIsValid(nameof(__azureResourceBase), __azureResourceBase);
        }
    }
    /// PrivateLink Policy configuration object.
    public partial interface IPrivateLinkPolicy :
        Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Models.Api20200301.IAzureResourceBase
    {
        /// <summary>Flag indicating whether all tenants are allowed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag indicating whether all tenants are allowed",
        SerializedName = @"allTenants",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AllTenant { get; set; }
        /// <summary>Guid of the owner tenant</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Guid of the owner tenant",
        SerializedName = @"ownerTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string OwnerTenantId { get; set; }
        /// <summary>Name of the resource group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the resource group",
        SerializedName = @"resourceGroup",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceGroup { get; set; }
        /// <summary>Name of the private link policy resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the private link policy resource",
        SerializedName = @"resourceName",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceName { get; set; }
        /// <summary>Subscription Identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subscription Identifier",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get; set; }
        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource tags.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Models.Api20200301.IPrivateLinkPolicyTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Models.Api20200301.IPrivateLinkPolicyTags Tag { get; set; }
        /// <summary>The list of tenantIds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of tenantIds.",
        SerializedName = @"tenants",
        PossibleTypes = new [] { typeof(string) })]
        string[] Tenant { get; set; }

    }
    /// PrivateLink Policy configuration object.
    internal partial interface IPrivateLinkPolicyInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Models.Api20200301.IAzureResourceBaseInternal
    {
        /// <summary>Flag indicating whether all tenants are allowed</summary>
        bool? AllTenant { get; set; }
        /// <summary>Guid of the owner tenant</summary>
        string OwnerTenantId { get; set; }
        /// <summary>Name of the resource group</summary>
        string ResourceGroup { get; set; }
        /// <summary>Name of the private link policy resource</summary>
        string ResourceName { get; set; }
        /// <summary>Subscription Identifier</summary>
        string SubscriptionId { get; set; }
        /// <summary>Resource tags.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Activedirectory.Models.Api20200301.IPrivateLinkPolicyTags Tag { get; set; }
        /// <summary>The list of tenantIds.</summary>
        string[] Tenant { get; set; }

    }
}