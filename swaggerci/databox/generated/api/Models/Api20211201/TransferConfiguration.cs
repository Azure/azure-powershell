// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Extensions;

    /// <summary>Configuration for defining the transfer of data.</summary>
    public partial class TransferConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationInternal
    {

        /// <summary>List of full path of the files to be transferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public string[] AzureFileFilterDetailFilePathList { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferFilterDetailsInternal)TransferFilterDetail).AzureFileFilterDetailFilePathList; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferFilterDetailsInternal)TransferFilterDetail).AzureFileFilterDetailFilePathList = value ?? null /* arrayOf */; }

        /// <summary>Prefix list of the Azure files to be transferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public string[] AzureFileFilterDetailFilePrefixList { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferFilterDetailsInternal)TransferFilterDetail).AzureFileFilterDetailFilePrefixList; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferFilterDetailsInternal)TransferFilterDetail).AzureFileFilterDetailFilePrefixList = value ?? null /* arrayOf */; }

        /// <summary>List of file shares to be transferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public string[] AzureFileFilterDetailFileShareList { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferFilterDetailsInternal)TransferFilterDetail).AzureFileFilterDetailFileShareList; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferFilterDetailsInternal)TransferFilterDetail).AzureFileFilterDetailFileShareList = value ?? null /* arrayOf */; }

        /// <summary>List of full path of the blobs to be transferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public string[] BlobFilterDetailBlobPathList { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferFilterDetailsInternal)TransferFilterDetail).BlobFilterDetailBlobPathList; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferFilterDetailsInternal)TransferFilterDetail).BlobFilterDetailBlobPathList = value ?? null /* arrayOf */; }

        /// <summary>Prefix list of the Azure blobs to be transferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public string[] BlobFilterDetailBlobPrefixList { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferFilterDetailsInternal)TransferFilterDetail).BlobFilterDetailBlobPrefixList; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferFilterDetailsInternal)TransferFilterDetail).BlobFilterDetailBlobPrefixList = value ?? null /* arrayOf */; }

        /// <summary>List of blob containers to be transferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public string[] BlobFilterDetailContainerList { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferFilterDetailsInternal)TransferFilterDetail).BlobFilterDetailContainerList; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferFilterDetailsInternal)TransferFilterDetail).BlobFilterDetailContainerList = value ?? null /* arrayOf */; }

        /// <summary>Details of the filter files to be used for data transfer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.IFilterFileDetails[] IncludeFilterFileDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferFilterDetailsInternal)TransferFilterDetail).IncludeFilterFileDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferFilterDetailsInternal)TransferFilterDetail).IncludeFilterFileDetail = value ?? null /* arrayOf */; }

        /// <summary>To indicate if all Azure blobs have to be transferred</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public bool? IncludeTransferAllBlob { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferAllDetailsInternal)TransferAllDetail).IncludeTransferAllBlob; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferAllDetailsInternal)TransferAllDetail).IncludeTransferAllBlob = value ?? default(bool); }

        /// <summary>To indicate if all Azure Files have to be transferred</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public bool? IncludeTransferAllFile { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferAllDetailsInternal)TransferAllDetail).IncludeTransferAllFile; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferAllDetailsInternal)TransferAllDetail).IncludeTransferAllFile = value ?? default(bool); }

        /// <summary>Internal Acessors for IncludeAzureFileFilterDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.IAzureFileFilterDetails Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationInternal.IncludeAzureFileFilterDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferFilterDetailsInternal)TransferFilterDetail).IncludeAzureFileFilterDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferFilterDetailsInternal)TransferFilterDetail).IncludeAzureFileFilterDetail = value; }

        /// <summary>Internal Acessors for IncludeBlobFilterDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.IBlobFilterDetails Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationInternal.IncludeBlobFilterDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferFilterDetailsInternal)TransferFilterDetail).IncludeBlobFilterDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferFilterDetailsInternal)TransferFilterDetail).IncludeBlobFilterDetail = value; }

        /// <summary>Internal Acessors for TransferAllDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferAllDetails Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationInternal.TransferAllDetail { get => (this._transferAllDetail = this._transferAllDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.TransferConfigurationTransferAllDetails()); set { {_transferAllDetail = value;} } }

        /// <summary>Internal Acessors for TransferAllDetailInclude</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferAllDetails Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationInternal.TransferAllDetailInclude { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferAllDetailsInternal)TransferAllDetail).Include; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferAllDetailsInternal)TransferAllDetail).Include = value; }

        /// <summary>Internal Acessors for TransferFilterDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferFilterDetails Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationInternal.TransferFilterDetail { get => (this._transferFilterDetail = this._transferFilterDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.TransferConfigurationTransferFilterDetails()); set { {_transferFilterDetail = value;} } }

        /// <summary>Internal Acessors for TransferFilterDetailInclude</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferFilterDetails Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationInternal.TransferFilterDetailInclude { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferFilterDetailsInternal)TransferFilterDetail).Include; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferFilterDetailsInternal)TransferFilterDetail).Include = value; }

        /// <summary>Backing field for <see cref="TransferAllDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferAllDetails _transferAllDetail;

        /// <summary>
        /// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType
        /// is given as TransferAll
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferAllDetails TransferAllDetail { get => (this._transferAllDetail = this._transferAllDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.TransferConfigurationTransferAllDetails()); set => this._transferAllDetail = value; }

        /// <summary>Type of the account of data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DataAccountType? TransferAllDetailsIncludeDataAccountType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferAllDetailsInternal)TransferAllDetail).IncludeDataAccountType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferAllDetailsInternal)TransferAllDetail).IncludeDataAccountType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DataAccountType)""); }

        /// <summary>Backing field for <see cref="TransferFilterDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferFilterDetails _transferFilterDetail;

        /// <summary>
        /// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as
        /// TransferUsingFilter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferFilterDetails TransferFilterDetail { get => (this._transferFilterDetail = this._transferFilterDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.TransferConfigurationTransferFilterDetails()); set => this._transferFilterDetail = value; }

        /// <summary>Type of the account of data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DataAccountType? TransferFilterDetailsIncludeDataAccountType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferFilterDetailsInternal)TransferFilterDetail).IncludeDataAccountType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferFilterDetailsInternal)TransferFilterDetail).IncludeDataAccountType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DataAccountType)""); }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.TransferConfigurationType _type;

        /// <summary>Type of the configuration for transfer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.TransferConfigurationType Type { get => this._type; set => this._type = value; }

        /// <summary>Creates an new <see cref="TransferConfiguration" /> instance.</summary>
        public TransferConfiguration()
        {

        }
    }
    /// Configuration for defining the transfer of data.
    public partial interface ITransferConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.IJsonSerializable
    {
        /// <summary>List of full path of the files to be transferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of full path of the files to be transferred.",
        SerializedName = @"filePathList",
        PossibleTypes = new [] { typeof(string) })]
        string[] AzureFileFilterDetailFilePathList { get; set; }
        /// <summary>Prefix list of the Azure files to be transferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Prefix list of the Azure files to be transferred.",
        SerializedName = @"filePrefixList",
        PossibleTypes = new [] { typeof(string) })]
        string[] AzureFileFilterDetailFilePrefixList { get; set; }
        /// <summary>List of file shares to be transferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of file shares to be transferred.",
        SerializedName = @"fileShareList",
        PossibleTypes = new [] { typeof(string) })]
        string[] AzureFileFilterDetailFileShareList { get; set; }
        /// <summary>List of full path of the blobs to be transferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of full path of the blobs to be transferred.",
        SerializedName = @"blobPathList",
        PossibleTypes = new [] { typeof(string) })]
        string[] BlobFilterDetailBlobPathList { get; set; }
        /// <summary>Prefix list of the Azure blobs to be transferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Prefix list of the Azure blobs to be transferred.",
        SerializedName = @"blobPrefixList",
        PossibleTypes = new [] { typeof(string) })]
        string[] BlobFilterDetailBlobPrefixList { get; set; }
        /// <summary>List of blob containers to be transferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of blob containers to be transferred.",
        SerializedName = @"containerList",
        PossibleTypes = new [] { typeof(string) })]
        string[] BlobFilterDetailContainerList { get; set; }
        /// <summary>Details of the filter files to be used for data transfer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Details of the filter files to be used for data transfer.",
        SerializedName = @"filterFileDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.IFilterFileDetails) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.IFilterFileDetails[] IncludeFilterFileDetail { get; set; }
        /// <summary>To indicate if all Azure blobs have to be transferred</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"To indicate if all Azure blobs have to be transferred",
        SerializedName = @"transferAllBlobs",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IncludeTransferAllBlob { get; set; }
        /// <summary>To indicate if all Azure Files have to be transferred</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"To indicate if all Azure Files have to be transferred",
        SerializedName = @"transferAllFiles",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IncludeTransferAllFile { get; set; }
        /// <summary>Type of the account of data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the account of data",
        SerializedName = @"dataAccountType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DataAccountType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DataAccountType? TransferAllDetailsIncludeDataAccountType { get; set; }
        /// <summary>Type of the account of data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the account of data.",
        SerializedName = @"dataAccountType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DataAccountType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DataAccountType? TransferFilterDetailsIncludeDataAccountType { get; set; }
        /// <summary>Type of the configuration for transfer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Type of the configuration for transfer.",
        SerializedName = @"transferConfigurationType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.TransferConfigurationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.TransferConfigurationType Type { get; set; }

    }
    /// Configuration for defining the transfer of data.
    internal partial interface ITransferConfigurationInternal

    {
        /// <summary>List of full path of the files to be transferred.</summary>
        string[] AzureFileFilterDetailFilePathList { get; set; }
        /// <summary>Prefix list of the Azure files to be transferred.</summary>
        string[] AzureFileFilterDetailFilePrefixList { get; set; }
        /// <summary>List of file shares to be transferred.</summary>
        string[] AzureFileFilterDetailFileShareList { get; set; }
        /// <summary>List of full path of the blobs to be transferred.</summary>
        string[] BlobFilterDetailBlobPathList { get; set; }
        /// <summary>Prefix list of the Azure blobs to be transferred.</summary>
        string[] BlobFilterDetailBlobPrefixList { get; set; }
        /// <summary>List of blob containers to be transferred.</summary>
        string[] BlobFilterDetailContainerList { get; set; }
        /// <summary>Filter details to transfer Azure files.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.IAzureFileFilterDetails IncludeAzureFileFilterDetail { get; set; }
        /// <summary>Filter details to transfer blobs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.IBlobFilterDetails IncludeBlobFilterDetail { get; set; }
        /// <summary>Details of the filter files to be used for data transfer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.IFilterFileDetails[] IncludeFilterFileDetail { get; set; }
        /// <summary>To indicate if all Azure blobs have to be transferred</summary>
        bool? IncludeTransferAllBlob { get; set; }
        /// <summary>To indicate if all Azure Files have to be transferred</summary>
        bool? IncludeTransferAllFile { get; set; }
        /// <summary>
        /// Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType
        /// is given as TransferAll
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferAllDetails TransferAllDetail { get; set; }
        /// <summary>Details to transfer all data.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferAllDetails TransferAllDetailInclude { get; set; }
        /// <summary>Type of the account of data</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DataAccountType? TransferAllDetailsIncludeDataAccountType { get; set; }
        /// <summary>
        /// Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as
        /// TransferUsingFilter.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferConfigurationTransferFilterDetails TransferFilterDetail { get; set; }
        /// <summary>Details of the filtering the transfer of data.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransferFilterDetails TransferFilterDetailInclude { get; set; }
        /// <summary>Type of the account of data.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DataAccountType? TransferFilterDetailsIncludeDataAccountType { get; set; }
        /// <summary>Type of the configuration for transfer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.TransferConfigurationType Type { get; set; }

    }
}