// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Extensions;

    /// <summary>Preferences related to the order</summary>
    public partial class Preferences :
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.IPreferences,
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.IPreferencesInternal
    {

        /// <summary>Backing field for <see cref="EncryptionPreference" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.IEncryptionPreferences _encryptionPreference;

        /// <summary>Preferences related to the Encryption.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.IEncryptionPreferences EncryptionPreference { get => (this._encryptionPreference = this._encryptionPreference ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.EncryptionPreferences()); set => this._encryptionPreference = value; }

        /// <summary>Defines secondary layer of software-based encryption enablement.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DoubleEncryption? EncryptionPreferenceDoubleEncryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.IEncryptionPreferencesInternal)EncryptionPreference).DoubleEncryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.IEncryptionPreferencesInternal)EncryptionPreference).DoubleEncryption = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DoubleEncryption)""); }

        /// <summary>Internal Acessors for EncryptionPreference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.IEncryptionPreferences Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.IPreferencesInternal.EncryptionPreference { get => (this._encryptionPreference = this._encryptionPreference ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.EncryptionPreferences()); set { {_encryptionPreference = value;} } }

        /// <summary>Internal Acessors for TransportPreference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransportPreferences Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.IPreferencesInternal.TransportPreference { get => (this._transportPreference = this._transportPreference ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.TransportPreferences()); set { {_transportPreference = value;} } }

        /// <summary>Backing field for <see cref="PreferredDataCenterRegion" /> property.</summary>
        private string[] _preferredDataCenterRegion;

        /// <summary>Preferred data center region.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Owned)]
        public string[] PreferredDataCenterRegion { get => this._preferredDataCenterRegion; set => this._preferredDataCenterRegion = value; }

        /// <summary>Backing field for <see cref="StorageAccountAccessTierPreference" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.StorageAccountAccessTier[] _storageAccountAccessTierPreference;

        /// <summary>Preferences related to the Access Tier of storage accounts.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.StorageAccountAccessTier[] StorageAccountAccessTierPreference { get => this._storageAccountAccessTierPreference; set => this._storageAccountAccessTierPreference = value; }

        /// <summary>Backing field for <see cref="TransportPreference" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransportPreferences _transportPreference;

        /// <summary>Preferences related to the shipment logistics of the sku.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransportPreferences TransportPreference { get => (this._transportPreference = this._transportPreference ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.TransportPreferences()); set => this._transportPreference = value; }

        /// <summary>Indicates Shipment Logistics type that the customer preferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.TransportShipmentTypes? TransportPreferencePreferredShipmentType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransportPreferencesInternal)TransportPreference).PreferredShipmentType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransportPreferencesInternal)TransportPreference).PreferredShipmentType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.TransportShipmentTypes)""); }

        /// <summary>Creates an new <see cref="Preferences" /> instance.</summary>
        public Preferences()
        {

        }
    }
    /// Preferences related to the order
    public partial interface IPreferences :
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.IJsonSerializable
    {
        /// <summary>Defines secondary layer of software-based encryption enablement.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Defines secondary layer of software-based encryption enablement.",
        SerializedName = @"doubleEncryption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DoubleEncryption) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DoubleEncryption? EncryptionPreferenceDoubleEncryption { get; set; }
        /// <summary>Preferred data center region.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Preferred data center region.",
        SerializedName = @"preferredDataCenterRegion",
        PossibleTypes = new [] { typeof(string) })]
        string[] PreferredDataCenterRegion { get; set; }
        /// <summary>Preferences related to the Access Tier of storage accounts.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Preferences related to the Access Tier of storage accounts.",
        SerializedName = @"storageAccountAccessTierPreferences",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.StorageAccountAccessTier) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.StorageAccountAccessTier[] StorageAccountAccessTierPreference { get; set; }
        /// <summary>Indicates Shipment Logistics type that the customer preferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates Shipment Logistics type that the customer preferred.",
        SerializedName = @"preferredShipmentType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.TransportShipmentTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.TransportShipmentTypes? TransportPreferencePreferredShipmentType { get; set; }

    }
    /// Preferences related to the order
    internal partial interface IPreferencesInternal

    {
        /// <summary>Preferences related to the Encryption.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.IEncryptionPreferences EncryptionPreference { get; set; }
        /// <summary>Defines secondary layer of software-based encryption enablement.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DoubleEncryption? EncryptionPreferenceDoubleEncryption { get; set; }
        /// <summary>Preferred data center region.</summary>
        string[] PreferredDataCenterRegion { get; set; }
        /// <summary>Preferences related to the Access Tier of storage accounts.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.StorageAccountAccessTier[] StorageAccountAccessTierPreference { get; set; }
        /// <summary>Preferences related to the shipment logistics of the sku.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20211201.ITransportPreferences TransportPreference { get; set; }
        /// <summary>Indicates Shipment Logistics type that the customer preferred.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.TransportShipmentTypes? TransportPreferencePreferredShipmentType { get; set; }

    }
}