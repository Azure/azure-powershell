// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Extensions;

    /// <summary>Azure Video Indexer classic account properties</summary>
    public partial class ClassicAccountMediaServices :
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountMediaServices,
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountMediaServicesInternal
    {

        /// <summary>Backing field for <see cref="AadApplicationId" /> property.</summary>
        private string _aadApplicationId;

        /// <summary>The aad application id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Owned)]
        public string AadApplicationId { get => this._aadApplicationId; set => this._aadApplicationId = value; }

        /// <summary>Backing field for <see cref="AadTenantId" /> property.</summary>
        private string _aadTenantId;

        /// <summary>The aad tenant id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Owned)]
        public string AadTenantId { get => this._aadTenantId; set => this._aadTenantId = value; }

        /// <summary>Backing field for <see cref="Connected" /> property.</summary>
        private bool? _connected;

        /// <summary>Represents wether the media services is connected or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Owned)]
        public bool? Connected { get => this._connected; set => this._connected = value; }

        /// <summary>Backing field for <see cref="EventGridProviderRegistered" /> property.</summary>
        private bool? _eventGridProviderRegistered;

        /// <summary>Represents if the media services event grid is connected or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Owned)]
        public bool? EventGridProviderRegistered { get => this._eventGridProviderRegistered; set => this._eventGridProviderRegistered = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The media services name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="ResourceGroup" /> property.</summary>
        private string _resourceGroup;

        /// <summary>The resource group that the media services belong to</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Owned)]
        public string ResourceGroup { get => this._resourceGroup; set => this._resourceGroup = value; }

        /// <summary>Backing field for <see cref="StreamingEndpointStarted" /> property.</summary>
        private bool? _streamingEndpointStarted;

        /// <summary>Represents wether the media services streaming endpoint has started</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Owned)]
        public bool? StreamingEndpointStarted { get => this._streamingEndpointStarted; set => this._streamingEndpointStarted = value; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>The media services subscriptionId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; set => this._subscriptionId = value; }

        /// <summary>Creates an new <see cref="ClassicAccountMediaServices" /> instance.</summary>
        public ClassicAccountMediaServices()
        {

        }
    }
    /// Azure Video Indexer classic account properties
    public partial interface IClassicAccountMediaServices :
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.IJsonSerializable
    {
        /// <summary>The aad application id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The aad application id",
        SerializedName = @"aadApplicationId",
        PossibleTypes = new [] { typeof(string) })]
        string AadApplicationId { get; set; }
        /// <summary>The aad tenant id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The aad tenant id",
        SerializedName = @"aadTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string AadTenantId { get; set; }
        /// <summary>Represents wether the media services is connected or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents wether the media services is connected or not",
        SerializedName = @"connected",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Connected { get; set; }
        /// <summary>Represents if the media services event grid is connected or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents if the media services event grid is connected or not",
        SerializedName = @"eventGridProviderRegistered",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EventGridProviderRegistered { get; set; }
        /// <summary>The media services name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The media services name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>The resource group that the media services belong to</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource group that the media services belong to",
        SerializedName = @"resourceGroup",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceGroup { get; set; }
        /// <summary>Represents wether the media services streaming endpoint has started</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents wether the media services streaming endpoint has started",
        SerializedName = @"streamingEndpointStarted",
        PossibleTypes = new [] { typeof(bool) })]
        bool? StreamingEndpointStarted { get; set; }
        /// <summary>The media services subscriptionId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The media services subscriptionId",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get; set; }

    }
    /// Azure Video Indexer classic account properties
    internal partial interface IClassicAccountMediaServicesInternal

    {
        /// <summary>The aad application id</summary>
        string AadApplicationId { get; set; }
        /// <summary>The aad tenant id</summary>
        string AadTenantId { get; set; }
        /// <summary>Represents wether the media services is connected or not</summary>
        bool? Connected { get; set; }
        /// <summary>Represents if the media services event grid is connected or not</summary>
        bool? EventGridProviderRegistered { get; set; }
        /// <summary>The media services name</summary>
        string Name { get; set; }
        /// <summary>The resource group that the media services belong to</summary>
        string ResourceGroup { get; set; }
        /// <summary>Represents wether the media services streaming endpoint has started</summary>
        bool? StreamingEndpointStarted { get; set; }
        /// <summary>The media services subscriptionId</summary>
        string SubscriptionId { get; set; }

    }
}