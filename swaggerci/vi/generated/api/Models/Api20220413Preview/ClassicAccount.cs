// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Extensions;

    /// <summary>An Azure Video Indexer classic account.</summary>
    public partial class ClassicAccount :
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccount,
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountInternal
    {

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>The account's id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>The account's location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>The aad application id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Inlined)]
        public string MediaServiceAadApplicationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountPropertiesInternal)Property).MediaServiceAadApplicationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountPropertiesInternal)Property).MediaServiceAadApplicationId = value ?? null; }

        /// <summary>The aad tenant id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Inlined)]
        public string MediaServiceAadTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountPropertiesInternal)Property).MediaServiceAadTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountPropertiesInternal)Property).MediaServiceAadTenantId = value ?? null; }

        /// <summary>Represents wether the media services is connected or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Inlined)]
        public bool? MediaServiceConnected { get => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountPropertiesInternal)Property).MediaServiceConnected; set => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountPropertiesInternal)Property).MediaServiceConnected = value ?? default(bool); }

        /// <summary>Represents if the media services event grid is connected or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Inlined)]
        public bool? MediaServiceEventGridProviderRegistered { get => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountPropertiesInternal)Property).MediaServiceEventGridProviderRegistered; set => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountPropertiesInternal)Property).MediaServiceEventGridProviderRegistered = value ?? default(bool); }

        /// <summary>The media services name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Inlined)]
        public string MediaServiceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountPropertiesInternal)Property).MediaServiceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountPropertiesInternal)Property).MediaServiceName = value ?? null; }

        /// <summary>The resource group that the media services belong to</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Inlined)]
        public string MediaServiceResourceGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountPropertiesInternal)Property).MediaServiceResourceGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountPropertiesInternal)Property).MediaServiceResourceGroup = value ?? null; }

        /// <summary>Represents wether the media services streaming endpoint has started</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Inlined)]
        public bool? MediaServiceStreamingEndpointStarted { get => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountPropertiesInternal)Property).MediaServiceStreamingEndpointStarted; set => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountPropertiesInternal)Property).MediaServiceStreamingEndpointStarted = value ?? default(bool); }

        /// <summary>The media services subscriptionId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Inlined)]
        public string MediaServiceSubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountPropertiesInternal)Property).MediaServiceSubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountPropertiesInternal)Property).MediaServiceSubscriptionId = value ?? null; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for MediaService</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountMediaServices Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountInternal.MediaService { get => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountPropertiesInternal)Property).MediaService; set => ((Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountPropertiesInternal)Property).MediaService = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountProperties Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.ClassicAccountProperties()); set { {_property = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The account's name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountProperties _property;

        /// <summary>List of classic account properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Origin(Microsoft.Azure.PowerShell.Cmdlets.Vi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.ClassicAccountProperties()); set => this._property = value; }

        /// <summary>Creates an new <see cref="ClassicAccount" /> instance.</summary>
        public ClassicAccount()
        {

        }
    }
    /// An Azure Video Indexer classic account.
    public partial interface IClassicAccount :
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.IJsonSerializable
    {
        /// <summary>The account's id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The account's id",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>The account's location</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The account's location",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>The aad application id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The aad application id",
        SerializedName = @"aadApplicationId",
        PossibleTypes = new [] { typeof(string) })]
        string MediaServiceAadApplicationId { get; set; }
        /// <summary>The aad tenant id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The aad tenant id",
        SerializedName = @"aadTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string MediaServiceAadTenantId { get; set; }
        /// <summary>Represents wether the media services is connected or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents wether the media services is connected or not",
        SerializedName = @"connected",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MediaServiceConnected { get; set; }
        /// <summary>Represents if the media services event grid is connected or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents if the media services event grid is connected or not",
        SerializedName = @"eventGridProviderRegistered",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MediaServiceEventGridProviderRegistered { get; set; }
        /// <summary>The media services name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The media services name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string MediaServiceName { get; set; }
        /// <summary>The resource group that the media services belong to</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource group that the media services belong to",
        SerializedName = @"resourceGroup",
        PossibleTypes = new [] { typeof(string) })]
        string MediaServiceResourceGroup { get; set; }
        /// <summary>Represents wether the media services streaming endpoint has started</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents wether the media services streaming endpoint has started",
        SerializedName = @"streamingEndpointStarted",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MediaServiceStreamingEndpointStarted { get; set; }
        /// <summary>The media services subscriptionId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The media services subscriptionId",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string MediaServiceSubscriptionId { get; set; }
        /// <summary>The account's name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Vi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The account's name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }

    }
    /// An Azure Video Indexer classic account.
    internal partial interface IClassicAccountInternal

    {
        /// <summary>The account's id</summary>
        string Id { get; set; }
        /// <summary>The account's location</summary>
        string Location { get; set; }
        /// <summary>The media services details</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountMediaServices MediaService { get; set; }
        /// <summary>The aad application id</summary>
        string MediaServiceAadApplicationId { get; set; }
        /// <summary>The aad tenant id</summary>
        string MediaServiceAadTenantId { get; set; }
        /// <summary>Represents wether the media services is connected or not</summary>
        bool? MediaServiceConnected { get; set; }
        /// <summary>Represents if the media services event grid is connected or not</summary>
        bool? MediaServiceEventGridProviderRegistered { get; set; }
        /// <summary>The media services name</summary>
        string MediaServiceName { get; set; }
        /// <summary>The resource group that the media services belong to</summary>
        string MediaServiceResourceGroup { get; set; }
        /// <summary>Represents wether the media services streaming endpoint has started</summary>
        bool? MediaServiceStreamingEndpointStarted { get; set; }
        /// <summary>The media services subscriptionId</summary>
        string MediaServiceSubscriptionId { get; set; }
        /// <summary>The account's name</summary>
        string Name { get; set; }
        /// <summary>List of classic account properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Vi.Models.Api20220413Preview.IClassicAccountProperties Property { get; set; }

    }
}