// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Extensions;

    /// <summary>OpenShiftCluster represents an Azure Red Hat OpenShift cluster.</summary>
    public partial class OpenShiftCluster :
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftCluster,
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterInternal,
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.TrackedResource();

        /// <summary>The IP of the cluster API server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string ApiserverProfileIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ApiserverProfileIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ApiserverProfileIP = value ?? null; }

        /// <summary>The URL to access the cluster API server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string ApiserverProfileUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ApiserverProfileUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ApiserverProfileUrl = value ?? null; }

        /// <summary>API server visibility.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.Visibility? ApiserverProfileVisibility { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ApiserverProfileVisibility; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ApiserverProfileVisibility = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.Visibility)""); }

        /// <summary>The domain for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string ClusterProfileDomain { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ClusterProfileDomain; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ClusterProfileDomain = value ?? null; }

        /// <summary>If FIPS validated crypto modules are used</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.FipsValidatedModules? ClusterProfileFipsValidatedModule { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ClusterProfileFipsValidatedModule; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ClusterProfileFipsValidatedModule = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.FipsValidatedModules)""); }

        /// <summary>The pull secret for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string ClusterProfilePullSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ClusterProfilePullSecret; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ClusterProfilePullSecret = value ?? null; }

        /// <summary>The ID of the cluster resource group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string ClusterProfileResourceGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ClusterProfileResourceGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ClusterProfileResourceGroupId = value ?? null; }

        /// <summary>The version of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string ClusterProfileVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ClusterProfileVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ClusterProfileVersion = value ?? null; }

        /// <summary>The URL to access the cluster console.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string ConsoleProfileUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ConsoleProfileUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ConsoleProfileUrl = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.IResourceInternal)__trackedResource).Id; }

        /// <summary>The cluster ingress profiles.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IIngressProfile[] IngressProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).IngressProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).IngressProfile = value ?? null /* arrayOf */; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>The resource ID of an associated DiskEncryptionSet, if applicable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string MasterProfileDiskEncryptionSetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).MasterProfileDiskEncryptionSetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).MasterProfileDiskEncryptionSetId = value ?? null; }

        /// <summary>Whether master virtual machines are encrypted at host.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.EncryptionAtHost? MasterProfileEncryptionAtHost { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).MasterProfileEncryptionAtHost; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).MasterProfileEncryptionAtHost = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.EncryptionAtHost)""); }

        /// <summary>The Azure resource ID of the master subnet.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string MasterProfileSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).MasterProfileSubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).MasterProfileSubnetId = value ?? null; }

        /// <summary>The size of the master VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string MasterProfileVMSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).MasterProfileVMSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).MasterProfileVMSize = value ?? null; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>Internal Acessors for ApiserverProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IApiServerProfile Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterInternal.ApiserverProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ApiserverProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ApiserverProfile = value; }

        /// <summary>Internal Acessors for ClusterProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IClusterProfile Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterInternal.ClusterProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ClusterProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ClusterProfile = value; }

        /// <summary>Internal Acessors for ConsoleProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IConsoleProfile Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterInternal.ConsoleProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ConsoleProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ConsoleProfile = value; }

        /// <summary>Internal Acessors for MasterProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IMasterProfile Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterInternal.MasterProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).MasterProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).MasterProfile = value; }

        /// <summary>Internal Acessors for NetworkProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.INetworkProfile Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterInternal.NetworkProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).NetworkProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).NetworkProfile = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterProperties Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.OpenShiftClusterProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ServicePrincipalProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IServicePrincipalProfile Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterInternal.ServicePrincipalProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ServicePrincipalProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ServicePrincipalProfile = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.ISystemData Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterInternal.SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.SystemData()); set { {_systemData = value;} } }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.IResourceInternal)__trackedResource).Name; }

        /// <summary>The CIDR used for OpenShift/Kubernetes Pods.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string NetworkProfilePodCidr { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).NetworkProfilePodCidr; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).NetworkProfilePodCidr = value ?? null; }

        /// <summary>The CIDR used for OpenShift/Kubernetes Services.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string NetworkProfileServiceCidr { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).NetworkProfileServiceCidr; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).NetworkProfileServiceCidr = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterProperties _property;

        /// <summary>The cluster properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.OpenShiftClusterProperties()); set => this._property = value; }

        /// <summary>The cluster provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ProvisioningState = value ?? null; }

        /// <summary>The client ID used for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string ServicePrincipalProfileClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ServicePrincipalProfileClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ServicePrincipalProfileClientId = value ?? null; }

        /// <summary>The client secret used for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string ServicePrincipalProfileClientSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ServicePrincipalProfileClientSecret; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).ServicePrincipalProfileClientSecret = value ?? null; }

        /// <summary>Backing field for <see cref="SystemData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.ISystemData _systemData;

        /// <summary>The system meta data relating to this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.ISystemData SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.SystemData()); }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.ISystemDataInternal)SystemData).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.ISystemDataInternal)SystemData).CreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.ISystemDataInternal)SystemData).CreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.ISystemDataInternal)SystemData).CreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.ISystemDataInternal)SystemData).CreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.ISystemDataInternal)SystemData).CreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.ISystemDataInternal)SystemData).LastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.ISystemDataInternal)SystemData).LastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.ISystemDataInternal)SystemData).LastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.ISystemDataInternal)SystemData).LastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.ISystemDataInternal)SystemData).LastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.ISystemDataInternal)SystemData).LastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.CreatedByType)""); }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.IResourceInternal)__trackedResource).Type; }

        /// <summary>The cluster worker profiles.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IWorkerProfile[] WorkerProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).WorkerProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterPropertiesInternal)Property).WorkerProfile = value ?? null /* arrayOf */; }

        /// <summary>Creates an new <see cref="OpenShiftCluster" /> instance.</summary>
        public OpenShiftCluster()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// OpenShiftCluster represents an Azure Red Hat OpenShift cluster.
    public partial interface IOpenShiftCluster :
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.ITrackedResource
    {
        /// <summary>The IP of the cluster API server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IP of the cluster API server.",
        SerializedName = @"ip",
        PossibleTypes = new [] { typeof(string) })]
        string ApiserverProfileIP { get; set; }
        /// <summary>The URL to access the cluster API server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The URL to access the cluster API server.",
        SerializedName = @"url",
        PossibleTypes = new [] { typeof(string) })]
        string ApiserverProfileUrl { get; set; }
        /// <summary>API server visibility.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"API server visibility.",
        SerializedName = @"visibility",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.Visibility) })]
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.Visibility? ApiserverProfileVisibility { get; set; }
        /// <summary>The domain for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The domain for the cluster.",
        SerializedName = @"domain",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterProfileDomain { get; set; }
        /// <summary>If FIPS validated crypto modules are used</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If FIPS validated crypto modules are used",
        SerializedName = @"fipsValidatedModules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.FipsValidatedModules) })]
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.FipsValidatedModules? ClusterProfileFipsValidatedModule { get; set; }
        /// <summary>The pull secret for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The pull secret for the cluster.",
        SerializedName = @"pullSecret",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterProfilePullSecret { get; set; }
        /// <summary>The ID of the cluster resource group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the cluster resource group.",
        SerializedName = @"resourceGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterProfileResourceGroupId { get; set; }
        /// <summary>The version of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the cluster.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterProfileVersion { get; set; }
        /// <summary>The URL to access the cluster console.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The URL to access the cluster console.",
        SerializedName = @"url",
        PossibleTypes = new [] { typeof(string) })]
        string ConsoleProfileUrl { get; set; }
        /// <summary>The cluster ingress profiles.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cluster ingress profiles.",
        SerializedName = @"ingressProfiles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IIngressProfile) })]
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IIngressProfile[] IngressProfile { get; set; }
        /// <summary>The resource ID of an associated DiskEncryptionSet, if applicable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of an associated DiskEncryptionSet, if applicable.",
        SerializedName = @"diskEncryptionSetId",
        PossibleTypes = new [] { typeof(string) })]
        string MasterProfileDiskEncryptionSetId { get; set; }
        /// <summary>Whether master virtual machines are encrypted at host.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether master virtual machines are encrypted at host.",
        SerializedName = @"encryptionAtHost",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.EncryptionAtHost) })]
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.EncryptionAtHost? MasterProfileEncryptionAtHost { get; set; }
        /// <summary>The Azure resource ID of the master subnet.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Azure resource ID of the master subnet.",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string MasterProfileSubnetId { get; set; }
        /// <summary>The size of the master VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The size of the master VMs.",
        SerializedName = @"vmSize",
        PossibleTypes = new [] { typeof(string) })]
        string MasterProfileVMSize { get; set; }
        /// <summary>The CIDR used for OpenShift/Kubernetes Pods.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The CIDR used for OpenShift/Kubernetes Pods.",
        SerializedName = @"podCidr",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkProfilePodCidr { get; set; }
        /// <summary>The CIDR used for OpenShift/Kubernetes Services.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The CIDR used for OpenShift/Kubernetes Services.",
        SerializedName = @"serviceCidr",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkProfileServiceCidr { get; set; }
        /// <summary>The cluster provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cluster provisioning state.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get; set; }
        /// <summary>The client ID used for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The client ID used for the cluster.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalProfileClientId { get; set; }
        /// <summary>The client secret used for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The client secret used for the cluster.",
        SerializedName = @"clientSecret",
        PossibleTypes = new [] { typeof(string) })]
        string ServicePrincipalProfileClientSecret { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource last modification (UTC)",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>The cluster worker profiles.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cluster worker profiles.",
        SerializedName = @"workerProfiles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IWorkerProfile) })]
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IWorkerProfile[] WorkerProfile { get; set; }

    }
    /// OpenShiftCluster represents an Azure Red Hat OpenShift cluster.
    internal partial interface IOpenShiftClusterInternal :
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.ITrackedResourceInternal
    {
        /// <summary>The cluster API server profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IApiServerProfile ApiserverProfile { get; set; }
        /// <summary>The IP of the cluster API server.</summary>
        string ApiserverProfileIP { get; set; }
        /// <summary>The URL to access the cluster API server.</summary>
        string ApiserverProfileUrl { get; set; }
        /// <summary>API server visibility.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.Visibility? ApiserverProfileVisibility { get; set; }
        /// <summary>The cluster profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IClusterProfile ClusterProfile { get; set; }
        /// <summary>The domain for the cluster.</summary>
        string ClusterProfileDomain { get; set; }
        /// <summary>If FIPS validated crypto modules are used</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.FipsValidatedModules? ClusterProfileFipsValidatedModule { get; set; }
        /// <summary>The pull secret for the cluster.</summary>
        string ClusterProfilePullSecret { get; set; }
        /// <summary>The ID of the cluster resource group.</summary>
        string ClusterProfileResourceGroupId { get; set; }
        /// <summary>The version of the cluster.</summary>
        string ClusterProfileVersion { get; set; }
        /// <summary>The console profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IConsoleProfile ConsoleProfile { get; set; }
        /// <summary>The URL to access the cluster console.</summary>
        string ConsoleProfileUrl { get; set; }
        /// <summary>The cluster ingress profiles.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IIngressProfile[] IngressProfile { get; set; }
        /// <summary>The cluster master profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IMasterProfile MasterProfile { get; set; }
        /// <summary>The resource ID of an associated DiskEncryptionSet, if applicable.</summary>
        string MasterProfileDiskEncryptionSetId { get; set; }
        /// <summary>Whether master virtual machines are encrypted at host.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.EncryptionAtHost? MasterProfileEncryptionAtHost { get; set; }
        /// <summary>The Azure resource ID of the master subnet.</summary>
        string MasterProfileSubnetId { get; set; }
        /// <summary>The size of the master VMs.</summary>
        string MasterProfileVMSize { get; set; }
        /// <summary>The cluster network profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.INetworkProfile NetworkProfile { get; set; }
        /// <summary>The CIDR used for OpenShift/Kubernetes Pods.</summary>
        string NetworkProfilePodCidr { get; set; }
        /// <summary>The CIDR used for OpenShift/Kubernetes Services.</summary>
        string NetworkProfileServiceCidr { get; set; }
        /// <summary>The cluster properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOpenShiftClusterProperties Property { get; set; }
        /// <summary>The cluster provisioning state.</summary>
        string ProvisioningState { get; set; }
        /// <summary>The cluster service principal profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IServicePrincipalProfile ServicePrincipalProfile { get; set; }
        /// <summary>The client ID used for the cluster.</summary>
        string ServicePrincipalProfileClientId { get; set; }
        /// <summary>The client secret used for the cluster.</summary>
        string ServicePrincipalProfileClientSecret { get; set; }
        /// <summary>The system meta data relating to this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20.ISystemData SystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>The cluster worker profiles.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IWorkerProfile[] WorkerProfile { get; set; }

    }
}