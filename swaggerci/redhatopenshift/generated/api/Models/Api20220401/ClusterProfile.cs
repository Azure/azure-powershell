// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Extensions;

    /// <summary>ClusterProfile represents a cluster profile.</summary>
    public partial class ClusterProfile :
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IClusterProfile,
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IClusterProfileInternal
    {

        /// <summary>Backing field for <see cref="Domain" /> property.</summary>
        private string _domain;

        /// <summary>The domain for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Owned)]
        public string Domain { get => this._domain; set => this._domain = value; }

        /// <summary>Backing field for <see cref="FipsValidatedModule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.FipsValidatedModules? _fipsValidatedModule;

        /// <summary>If FIPS validated crypto modules are used</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.FipsValidatedModules? FipsValidatedModule { get => this._fipsValidatedModule; set => this._fipsValidatedModule = value; }

        /// <summary>Backing field for <see cref="PullSecret" /> property.</summary>
        private string _pullSecret;

        /// <summary>The pull secret for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Owned)]
        public string PullSecret { get => this._pullSecret; set => this._pullSecret = value; }

        /// <summary>Backing field for <see cref="ResourceGroupId" /> property.</summary>
        private string _resourceGroupId;

        /// <summary>The ID of the cluster resource group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Owned)]
        public string ResourceGroupId { get => this._resourceGroupId; set => this._resourceGroupId = value; }

        /// <summary>Backing field for <see cref="Version" /> property.</summary>
        private string _version;

        /// <summary>The version of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Owned)]
        public string Version { get => this._version; set => this._version = value; }

        /// <summary>Creates an new <see cref="ClusterProfile" /> instance.</summary>
        public ClusterProfile()
        {

        }
    }
    /// ClusterProfile represents a cluster profile.
    public partial interface IClusterProfile :
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.IJsonSerializable
    {
        /// <summary>The domain for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The domain for the cluster.",
        SerializedName = @"domain",
        PossibleTypes = new [] { typeof(string) })]
        string Domain { get; set; }
        /// <summary>If FIPS validated crypto modules are used</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If FIPS validated crypto modules are used",
        SerializedName = @"fipsValidatedModules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.FipsValidatedModules) })]
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.FipsValidatedModules? FipsValidatedModule { get; set; }
        /// <summary>The pull secret for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The pull secret for the cluster.",
        SerializedName = @"pullSecret",
        PossibleTypes = new [] { typeof(string) })]
        string PullSecret { get; set; }
        /// <summary>The ID of the cluster resource group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the cluster resource group.",
        SerializedName = @"resourceGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceGroupId { get; set; }
        /// <summary>The version of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the cluster.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string Version { get; set; }

    }
    /// ClusterProfile represents a cluster profile.
    internal partial interface IClusterProfileInternal

    {
        /// <summary>The domain for the cluster.</summary>
        string Domain { get; set; }
        /// <summary>If FIPS validated crypto modules are used</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Support.FipsValidatedModules? FipsValidatedModule { get; set; }
        /// <summary>The pull secret for the cluster.</summary>
        string PullSecret { get; set; }
        /// <summary>The ID of the cluster resource group.</summary>
        string ResourceGroupId { get; set; }
        /// <summary>The version of the cluster.</summary>
        string Version { get; set; }

    }
}