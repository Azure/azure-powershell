// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Extensions;

    /// <summary>Operation represents an RP operation.</summary>
    public partial class Operation :
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOperation,
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOperationInternal
    {

        /// <summary>Backing field for <see cref="Display" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IDisplay _display;

        /// <summary>The object that describes the operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IDisplay Display { get => (this._display = this._display ?? new Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.Display()); set => this._display = value; }

        /// <summary>Friendly name of the operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string DisplayDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IDisplayInternal)Display).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IDisplayInternal)Display).Description = value ?? null; }

        /// <summary>Operation type: read, write, delete, listKeys/action, etc.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string DisplayOperation { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IDisplayInternal)Display).Operation; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IDisplayInternal)Display).Operation = value ?? null; }

        /// <summary>Friendly name of the resource provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string DisplayProvider { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IDisplayInternal)Display).Provider; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IDisplayInternal)Display).Provider = value ?? null; }

        /// <summary>Resource type on which the operation is performed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Inlined)]
        public string DisplayResource { get => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IDisplayInternal)Display).Resource; set => ((Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IDisplayInternal)Display).Resource = value ?? null; }

        /// <summary>Internal Acessors for Display</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IDisplay Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IOperationInternal.Display { get => (this._display = this._display ?? new Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.Display()); set { {_display = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Operation name: {provider}/{resource}/{operation}.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Origin" /> property.</summary>
        private string _origin;

        /// <summary>
        /// Sources of requests to this operation. Comma separated list with valid values user or system, e.g. "user,system".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Origin(Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.PropertyOrigin.Owned)]
        public string Origin { get => this._origin; set => this._origin = value; }

        /// <summary>Creates an new <see cref="Operation" /> instance.</summary>
        public Operation()
        {

        }
    }
    /// Operation represents an RP operation.
    public partial interface IOperation :
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.IJsonSerializable
    {
        /// <summary>Friendly name of the operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Friendly name of the operation.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayDescription { get; set; }
        /// <summary>Operation type: read, write, delete, listKeys/action, etc.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Operation type: read, write, delete, listKeys/action, etc.",
        SerializedName = @"operation",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayOperation { get; set; }
        /// <summary>Friendly name of the resource provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Friendly name of the resource provider.",
        SerializedName = @"provider",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayProvider { get; set; }
        /// <summary>Resource type on which the operation is performed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource type on which the operation is performed.",
        SerializedName = @"resource",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayResource { get; set; }
        /// <summary>Operation name: {provider}/{resource}/{operation}.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Operation name: {provider}/{resource}/{operation}.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>
        /// Sources of requests to this operation. Comma separated list with valid values user or system, e.g. "user,system".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Sources of requests to this operation.  Comma separated list with valid values user or system, e.g. ""user,system"".",
        SerializedName = @"origin",
        PossibleTypes = new [] { typeof(string) })]
        string Origin { get; set; }

    }
    /// Operation represents an RP operation.
    internal partial interface IOperationInternal

    {
        /// <summary>The object that describes the operation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.RedHatOpenShift.Models.Api20220401.IDisplay Display { get; set; }
        /// <summary>Friendly name of the operation.</summary>
        string DisplayDescription { get; set; }
        /// <summary>Operation type: read, write, delete, listKeys/action, etc.</summary>
        string DisplayOperation { get; set; }
        /// <summary>Friendly name of the resource provider.</summary>
        string DisplayProvider { get; set; }
        /// <summary>Resource type on which the operation is performed.</summary>
        string DisplayResource { get; set; }
        /// <summary>Operation name: {provider}/{resource}/{operation}.</summary>
        string Name { get; set; }
        /// <summary>
        /// Sources of requests to this operation. Comma separated list with valid values user or system, e.g. "user,system".
        /// </summary>
        string Origin { get; set; }

    }
}