// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Extensions;

    /// <summary>Order item update properties.</summary>
    public partial class OrderItemUpdateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IOrderItemUpdateProperties,
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IOrderItemUpdatePropertiesInternal
    {

        /// <summary>Contact name of the person.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ContactDetailContactName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ContactDetailContactName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ContactDetailContactName = value ?? null; }

        /// <summary>List of Email-ids to be notified about job progress.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string[] ContactDetailEmailList { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ContactDetailEmailList; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ContactDetailEmailList = value ?? null /* arrayOf */; }

        /// <summary>Mobile number of the contact person.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ContactDetailMobile { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ContactDetailMobile; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ContactDetailMobile = value ?? null; }

        /// <summary>Phone number of the contact person.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ContactDetailPhone { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ContactDetailPhone; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ContactDetailPhone = value ?? null; }

        /// <summary>Phone extension number of the contact person.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ContactDetailPhoneExtension { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ContactDetailPhoneExtension; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ContactDetailPhoneExtension = value ?? null; }

        /// <summary>
        /// Double encryption status as entered by the customer. It is compulsory to give this parameter if the 'Deny' or 'Disabled'
        /// policy is configured.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus? EncryptionPreferenceDoubleEncryptionStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IPreferencesInternal)Preference).EncryptionPreferenceDoubleEncryptionStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IPreferencesInternal)Preference).EncryptionPreferenceDoubleEncryptionStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus)""); }

        /// <summary>Backing field for <see cref="ForwardAddress" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressProperties _forwardAddress;

        /// <summary>Updates forward shipping address and contact details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressProperties ForwardAddress { get => (this._forwardAddress = this._forwardAddress ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.AddressProperties()); set => this._forwardAddress = value; }

        /// <summary>Status of address validation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AddressValidationStatus? ForwardAddressValidationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).AddressValidationStatus; }

        /// <summary>Customer preferred Management resource ARM ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ManagementResourcePreferencePreferredManagementResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IPreferencesInternal)Preference).ManagementResourcePreferencePreferredManagementResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IPreferencesInternal)Preference).ManagementResourcePreferencePreferredManagementResourceId = value ?? null; }

        /// <summary>Internal Acessors for ForwardAddress</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressProperties Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IOrderItemUpdatePropertiesInternal.ForwardAddress { get => (this._forwardAddress = this._forwardAddress ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.AddressProperties()); set { {_forwardAddress = value;} } }

        /// <summary>Internal Acessors for ForwardAddressContactDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IContactDetails Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IOrderItemUpdatePropertiesInternal.ForwardAddressContactDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ContactDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ContactDetail = value; }

        /// <summary>Internal Acessors for ForwardAddressShippingAddress</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IShippingAddress Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IOrderItemUpdatePropertiesInternal.ForwardAddressShippingAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ShippingAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ShippingAddress = value; }

        /// <summary>Internal Acessors for ForwardAddressValidationStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AddressValidationStatus? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IOrderItemUpdatePropertiesInternal.ForwardAddressValidationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).AddressValidationStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).AddressValidationStatus = value; }

        /// <summary>Internal Acessors for Preference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IPreferences Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IOrderItemUpdatePropertiesInternal.Preference { get => (this._preference = this._preference ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.Preferences()); set { {_preference = value;} } }

        /// <summary>Internal Acessors for PreferenceEncryptionPreference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IEncryptionPreferences Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IOrderItemUpdatePropertiesInternal.PreferenceEncryptionPreference { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IPreferencesInternal)Preference).EncryptionPreference; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IPreferencesInternal)Preference).EncryptionPreference = value; }

        /// <summary>Internal Acessors for PreferenceManagementResourcePreference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IManagementResourcePreferences Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IOrderItemUpdatePropertiesInternal.PreferenceManagementResourcePreference { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IPreferencesInternal)Preference).ManagementResourcePreference; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IPreferencesInternal)Preference).ManagementResourcePreference = value; }

        /// <summary>Internal Acessors for PreferenceTransportPreference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.ITransportPreferences Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IOrderItemUpdatePropertiesInternal.PreferenceTransportPreference { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IPreferencesInternal)Preference).TransportPreference; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IPreferencesInternal)Preference).TransportPreference = value; }

        /// <summary>Backing field for <see cref="NotificationEmailList" /> property.</summary>
        private string[] _notificationEmailList;

        /// <summary>Additional notification email list.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public string[] NotificationEmailList { get => this._notificationEmailList; set => this._notificationEmailList = value; }

        /// <summary>Backing field for <see cref="Preference" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IPreferences _preference;

        /// <summary>Customer preference.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IPreferences Preference { get => (this._preference = this._preference ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.Preferences()); set => this._preference = value; }

        /// <summary>Notification preferences.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.INotificationPreference[] PreferenceNotificationPreference { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IPreferencesInternal)Preference).NotificationPreference; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IPreferencesInternal)Preference).NotificationPreference = value ?? null /* arrayOf */; }

        /// <summary>Name of the City.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ShippingAddressCity { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ShippingAddressCity; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ShippingAddressCity = value ?? null; }

        /// <summary>Name of the company.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ShippingAddressCompanyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ShippingAddressCompanyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ShippingAddressCompanyName = value ?? null; }

        /// <summary>Name of the Country.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ShippingAddressCountry { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ShippingAddressCountry; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ShippingAddressCountry = value ?? null; }

        /// <summary>Postal code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ShippingAddressPostalCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ShippingAddressPostalCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ShippingAddressPostalCode = value ?? null; }

        /// <summary>Name of the State or Province.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ShippingAddressStateOrProvince { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ShippingAddressStateOrProvince; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ShippingAddressStateOrProvince = value ?? null; }

        /// <summary>Street Address line 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ShippingAddressStreetAddress1 { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ShippingAddressStreetAddress1; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ShippingAddressStreetAddress1 = value ?? null; }

        /// <summary>Street Address line 2.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ShippingAddressStreetAddress2 { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ShippingAddressStreetAddress2; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ShippingAddressStreetAddress2 = value ?? null; }

        /// <summary>Street Address line 3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ShippingAddressStreetAddress3 { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ShippingAddressStreetAddress3; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ShippingAddressStreetAddress3 = value ?? null; }

        /// <summary>Type of address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AddressType? ShippingAddressType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ShippingAddressType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ShippingAddressType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AddressType)""); }

        /// <summary>Extended Zip Code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ShippingAddressZipExtendedCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ShippingAddressZipExtendedCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressPropertiesInternal)ForwardAddress).ShippingAddressZipExtendedCode = value ?? null; }

        /// <summary>Indicates Shipment Logistics type that the customer preferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TransportShipmentTypes? TransportPreferencePreferredShipmentType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IPreferencesInternal)Preference).TransportPreferencePreferredShipmentType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IPreferencesInternal)Preference).TransportPreferencePreferredShipmentType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TransportShipmentTypes)""); }

        /// <summary>Creates an new <see cref="OrderItemUpdateProperties" /> instance.</summary>
        public OrderItemUpdateProperties()
        {

        }
    }
    /// Order item update properties.
    public partial interface IOrderItemUpdateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.IJsonSerializable
    {
        /// <summary>Contact name of the person.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Contact name of the person.",
        SerializedName = @"contactName",
        PossibleTypes = new [] { typeof(string) })]
        string ContactDetailContactName { get; set; }
        /// <summary>List of Email-ids to be notified about job progress.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of Email-ids to be notified about job progress.",
        SerializedName = @"emailList",
        PossibleTypes = new [] { typeof(string) })]
        string[] ContactDetailEmailList { get; set; }
        /// <summary>Mobile number of the contact person.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Mobile number of the contact person.",
        SerializedName = @"mobile",
        PossibleTypes = new [] { typeof(string) })]
        string ContactDetailMobile { get; set; }
        /// <summary>Phone number of the contact person.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Phone number of the contact person.",
        SerializedName = @"phone",
        PossibleTypes = new [] { typeof(string) })]
        string ContactDetailPhone { get; set; }
        /// <summary>Phone extension number of the contact person.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Phone extension number of the contact person.",
        SerializedName = @"phoneExtension",
        PossibleTypes = new [] { typeof(string) })]
        string ContactDetailPhoneExtension { get; set; }
        /// <summary>
        /// Double encryption status as entered by the customer. It is compulsory to give this parameter if the 'Deny' or 'Disabled'
        /// policy is configured.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Double encryption status as entered by the customer. It is compulsory to give this parameter if the 'Deny' or 'Disabled' policy is configured.",
        SerializedName = @"doubleEncryptionStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus? EncryptionPreferenceDoubleEncryptionStatus { get; set; }
        /// <summary>Status of address validation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Status of address validation",
        SerializedName = @"addressValidationStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AddressValidationStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AddressValidationStatus? ForwardAddressValidationStatus { get;  }
        /// <summary>Customer preferred Management resource ARM ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Customer preferred Management resource ARM ID",
        SerializedName = @"preferredManagementResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ManagementResourcePreferencePreferredManagementResourceId { get; set; }
        /// <summary>Additional notification email list.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Additional notification email list.",
        SerializedName = @"notificationEmailList",
        PossibleTypes = new [] { typeof(string) })]
        string[] NotificationEmailList { get; set; }
        /// <summary>Notification preferences.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Notification preferences.",
        SerializedName = @"notificationPreferences",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.INotificationPreference) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.INotificationPreference[] PreferenceNotificationPreference { get; set; }
        /// <summary>Name of the City.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the City.",
        SerializedName = @"city",
        PossibleTypes = new [] { typeof(string) })]
        string ShippingAddressCity { get; set; }
        /// <summary>Name of the company.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the company.",
        SerializedName = @"companyName",
        PossibleTypes = new [] { typeof(string) })]
        string ShippingAddressCompanyName { get; set; }
        /// <summary>Name of the Country.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the Country.",
        SerializedName = @"country",
        PossibleTypes = new [] { typeof(string) })]
        string ShippingAddressCountry { get; set; }
        /// <summary>Postal code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Postal code.",
        SerializedName = @"postalCode",
        PossibleTypes = new [] { typeof(string) })]
        string ShippingAddressPostalCode { get; set; }
        /// <summary>Name of the State or Province.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the State or Province.",
        SerializedName = @"stateOrProvince",
        PossibleTypes = new [] { typeof(string) })]
        string ShippingAddressStateOrProvince { get; set; }
        /// <summary>Street Address line 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Street Address line 1.",
        SerializedName = @"streetAddress1",
        PossibleTypes = new [] { typeof(string) })]
        string ShippingAddressStreetAddress1 { get; set; }
        /// <summary>Street Address line 2.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Street Address line 2.",
        SerializedName = @"streetAddress2",
        PossibleTypes = new [] { typeof(string) })]
        string ShippingAddressStreetAddress2 { get; set; }
        /// <summary>Street Address line 3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Street Address line 3.",
        SerializedName = @"streetAddress3",
        PossibleTypes = new [] { typeof(string) })]
        string ShippingAddressStreetAddress3 { get; set; }
        /// <summary>Type of address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of address.",
        SerializedName = @"addressType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AddressType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AddressType? ShippingAddressType { get; set; }
        /// <summary>Extended Zip Code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Extended Zip Code.",
        SerializedName = @"zipExtendedCode",
        PossibleTypes = new [] { typeof(string) })]
        string ShippingAddressZipExtendedCode { get; set; }
        /// <summary>Indicates Shipment Logistics type that the customer preferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates Shipment Logistics type that the customer preferred.",
        SerializedName = @"preferredShipmentType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TransportShipmentTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TransportShipmentTypes? TransportPreferencePreferredShipmentType { get; set; }

    }
    /// Order item update properties.
    internal partial interface IOrderItemUpdatePropertiesInternal

    {
        /// <summary>Contact name of the person.</summary>
        string ContactDetailContactName { get; set; }
        /// <summary>List of Email-ids to be notified about job progress.</summary>
        string[] ContactDetailEmailList { get; set; }
        /// <summary>Mobile number of the contact person.</summary>
        string ContactDetailMobile { get; set; }
        /// <summary>Phone number of the contact person.</summary>
        string ContactDetailPhone { get; set; }
        /// <summary>Phone extension number of the contact person.</summary>
        string ContactDetailPhoneExtension { get; set; }
        /// <summary>
        /// Double encryption status as entered by the customer. It is compulsory to give this parameter if the 'Deny' or 'Disabled'
        /// policy is configured.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus? EncryptionPreferenceDoubleEncryptionStatus { get; set; }
        /// <summary>Updates forward shipping address and contact details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IAddressProperties ForwardAddress { get; set; }
        /// <summary>Contact details for the address</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IContactDetails ForwardAddressContactDetail { get; set; }
        /// <summary>Shipping details for the address</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IShippingAddress ForwardAddressShippingAddress { get; set; }
        /// <summary>Status of address validation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AddressValidationStatus? ForwardAddressValidationStatus { get; set; }
        /// <summary>Customer preferred Management resource ARM ID</summary>
        string ManagementResourcePreferencePreferredManagementResourceId { get; set; }
        /// <summary>Additional notification email list.</summary>
        string[] NotificationEmailList { get; set; }
        /// <summary>Customer preference.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IPreferences Preference { get; set; }
        /// <summary>Preferences related to the Encryption.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IEncryptionPreferences PreferenceEncryptionPreference { get; set; }
        /// <summary>Preferences related to the Management resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IManagementResourcePreferences PreferenceManagementResourcePreference { get; set; }
        /// <summary>Notification preferences.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.INotificationPreference[] PreferenceNotificationPreference { get; set; }
        /// <summary>Preferences related to the shipment logistics of the order.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.ITransportPreferences PreferenceTransportPreference { get; set; }
        /// <summary>Name of the City.</summary>
        string ShippingAddressCity { get; set; }
        /// <summary>Name of the company.</summary>
        string ShippingAddressCompanyName { get; set; }
        /// <summary>Name of the Country.</summary>
        string ShippingAddressCountry { get; set; }
        /// <summary>Postal code.</summary>
        string ShippingAddressPostalCode { get; set; }
        /// <summary>Name of the State or Province.</summary>
        string ShippingAddressStateOrProvince { get; set; }
        /// <summary>Street Address line 1.</summary>
        string ShippingAddressStreetAddress1 { get; set; }
        /// <summary>Street Address line 2.</summary>
        string ShippingAddressStreetAddress2 { get; set; }
        /// <summary>Street Address line 3.</summary>
        string ShippingAddressStreetAddress3 { get; set; }
        /// <summary>Type of address.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AddressType? ShippingAddressType { get; set; }
        /// <summary>Extended Zip Code.</summary>
        string ShippingAddressZipExtendedCode { get; set; }
        /// <summary>Indicates Shipment Logistics type that the customer preferred.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TransportShipmentTypes? TransportPreferencePreferredShipmentType { get; set; }

    }
}