// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Extensions;

    /// <summary>Preferences related to the order</summary>
    public partial class Preferences :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IPreferences,
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IPreferencesInternal
    {

        /// <summary>Backing field for <see cref="EncryptionPreference" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IEncryptionPreferences _encryptionPreference;

        /// <summary>Preferences related to the Encryption.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IEncryptionPreferences EncryptionPreference { get => (this._encryptionPreference = this._encryptionPreference ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.EncryptionPreferences()); set => this._encryptionPreference = value; }

        /// <summary>
        /// Double encryption status as entered by the customer. It is compulsory to give this parameter if the 'Deny' or 'Disabled'
        /// policy is configured.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus? EncryptionPreferenceDoubleEncryptionStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IEncryptionPreferencesInternal)EncryptionPreference).DoubleEncryptionStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IEncryptionPreferencesInternal)EncryptionPreference).DoubleEncryptionStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus)""); }

        /// <summary>Backing field for <see cref="ManagementResourcePreference" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IManagementResourcePreferences _managementResourcePreference;

        /// <summary>Preferences related to the Management resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IManagementResourcePreferences ManagementResourcePreference { get => (this._managementResourcePreference = this._managementResourcePreference ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.ManagementResourcePreferences()); set => this._managementResourcePreference = value; }

        /// <summary>Customer preferred Management resource ARM ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ManagementResourcePreferencePreferredManagementResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IManagementResourcePreferencesInternal)ManagementResourcePreference).PreferredManagementResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IManagementResourcePreferencesInternal)ManagementResourcePreference).PreferredManagementResourceId = value ?? null; }

        /// <summary>Internal Acessors for EncryptionPreference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IEncryptionPreferences Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IPreferencesInternal.EncryptionPreference { get => (this._encryptionPreference = this._encryptionPreference ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.EncryptionPreferences()); set { {_encryptionPreference = value;} } }

        /// <summary>Internal Acessors for ManagementResourcePreference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IManagementResourcePreferences Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IPreferencesInternal.ManagementResourcePreference { get => (this._managementResourcePreference = this._managementResourcePreference ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.ManagementResourcePreferences()); set { {_managementResourcePreference = value;} } }

        /// <summary>Internal Acessors for TransportPreference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.ITransportPreferences Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IPreferencesInternal.TransportPreference { get => (this._transportPreference = this._transportPreference ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.TransportPreferences()); set { {_transportPreference = value;} } }

        /// <summary>Backing field for <see cref="NotificationPreference" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.INotificationPreference[] _notificationPreference;

        /// <summary>Notification preferences.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.INotificationPreference[] NotificationPreference { get => this._notificationPreference; set => this._notificationPreference = value; }

        /// <summary>Backing field for <see cref="TransportPreference" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.ITransportPreferences _transportPreference;

        /// <summary>Preferences related to the shipment logistics of the order.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.ITransportPreferences TransportPreference { get => (this._transportPreference = this._transportPreference ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.TransportPreferences()); set => this._transportPreference = value; }

        /// <summary>Indicates Shipment Logistics type that the customer preferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TransportShipmentTypes? TransportPreferencePreferredShipmentType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.ITransportPreferencesInternal)TransportPreference).PreferredShipmentType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.ITransportPreferencesInternal)TransportPreference).PreferredShipmentType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TransportShipmentTypes)""); }

        /// <summary>Creates an new <see cref="Preferences" /> instance.</summary>
        public Preferences()
        {

        }
    }
    /// Preferences related to the order
    public partial interface IPreferences :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Double encryption status as entered by the customer. It is compulsory to give this parameter if the 'Deny' or 'Disabled'
        /// policy is configured.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Double encryption status as entered by the customer. It is compulsory to give this parameter if the 'Deny' or 'Disabled' policy is configured.",
        SerializedName = @"doubleEncryptionStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus? EncryptionPreferenceDoubleEncryptionStatus { get; set; }
        /// <summary>Customer preferred Management resource ARM ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Customer preferred Management resource ARM ID",
        SerializedName = @"preferredManagementResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ManagementResourcePreferencePreferredManagementResourceId { get; set; }
        /// <summary>Notification preferences.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Notification preferences.",
        SerializedName = @"notificationPreferences",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.INotificationPreference) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.INotificationPreference[] NotificationPreference { get; set; }
        /// <summary>Indicates Shipment Logistics type that the customer preferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates Shipment Logistics type that the customer preferred.",
        SerializedName = @"preferredShipmentType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TransportShipmentTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TransportShipmentTypes? TransportPreferencePreferredShipmentType { get; set; }

    }
    /// Preferences related to the order
    internal partial interface IPreferencesInternal

    {
        /// <summary>Preferences related to the Encryption.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IEncryptionPreferences EncryptionPreference { get; set; }
        /// <summary>
        /// Double encryption status as entered by the customer. It is compulsory to give this parameter if the 'Deny' or 'Disabled'
        /// policy is configured.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus? EncryptionPreferenceDoubleEncryptionStatus { get; set; }
        /// <summary>Preferences related to the Management resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IManagementResourcePreferences ManagementResourcePreference { get; set; }
        /// <summary>Customer preferred Management resource ARM ID</summary>
        string ManagementResourcePreferencePreferredManagementResourceId { get; set; }
        /// <summary>Notification preferences.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.INotificationPreference[] NotificationPreference { get; set; }
        /// <summary>Preferences related to the shipment logistics of the order.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.ITransportPreferences TransportPreference { get; set; }
        /// <summary>Indicates Shipment Logistics type that the customer preferred.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TransportShipmentTypes? TransportPreferencePreferredShipmentType { get; set; }

    }
}