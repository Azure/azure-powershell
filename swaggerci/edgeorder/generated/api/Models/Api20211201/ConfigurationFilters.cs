// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Extensions;

    /// <summary>Configuration filters</summary>
    public partial class ConfigurationFilters :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IConfigurationFilters,
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IConfigurationFiltersInternal
    {

        /// <summary>Backing field for <see cref="FilterableProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IFilterableProperty[] _filterableProperty;

        /// <summary>Filters specific to product</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IFilterableProperty[] FilterableProperty { get => this._filterableProperty; set => this._filterableProperty = value; }

        /// <summary>Backing field for <see cref="HierarchyInformation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IHierarchyInformation _hierarchyInformation;

        /// <summary>Product hierarchy information</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IHierarchyInformation HierarchyInformation { get => (this._hierarchyInformation = this._hierarchyInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.HierarchyInformation()); set => this._hierarchyInformation = value; }

        /// <summary>Represents configuration name that uniquely identifies configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationConfigurationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IHierarchyInformationInternal)HierarchyInformation).ConfigurationName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IHierarchyInformationInternal)HierarchyInformation).ConfigurationName = value ?? null; }

        /// <summary>Represents product family name that uniquely identifies product family</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationProductFamilyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IHierarchyInformationInternal)HierarchyInformation).ProductFamilyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IHierarchyInformationInternal)HierarchyInformation).ProductFamilyName = value ?? null; }

        /// <summary>Represents product line name that uniquely identifies product line</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationProductLineName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IHierarchyInformationInternal)HierarchyInformation).ProductLineName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IHierarchyInformationInternal)HierarchyInformation).ProductLineName = value ?? null; }

        /// <summary>Represents product name that uniquely identifies product</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationProductName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IHierarchyInformationInternal)HierarchyInformation).ProductName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IHierarchyInformationInternal)HierarchyInformation).ProductName = value ?? null; }

        /// <summary>Internal Acessors for HierarchyInformation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IHierarchyInformation Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IConfigurationFiltersInternal.HierarchyInformation { get => (this._hierarchyInformation = this._hierarchyInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.HierarchyInformation()); set { {_hierarchyInformation = value;} } }

        /// <summary>Creates an new <see cref="ConfigurationFilters" /> instance.</summary>
        public ConfigurationFilters()
        {

        }
    }
    /// Configuration filters
    public partial interface IConfigurationFilters :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.IJsonSerializable
    {
        /// <summary>Filters specific to product</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Filters specific to product",
        SerializedName = @"filterableProperty",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IFilterableProperty) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IFilterableProperty[] FilterableProperty { get; set; }
        /// <summary>Represents configuration name that uniquely identifies configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents configuration name that uniquely identifies configuration",
        SerializedName = @"configurationName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationConfigurationName { get; set; }
        /// <summary>Represents product family name that uniquely identifies product family</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents product family name that uniquely identifies product family",
        SerializedName = @"productFamilyName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationProductFamilyName { get; set; }
        /// <summary>Represents product line name that uniquely identifies product line</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents product line name that uniquely identifies product line",
        SerializedName = @"productLineName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationProductLineName { get; set; }
        /// <summary>Represents product name that uniquely identifies product</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents product name that uniquely identifies product",
        SerializedName = @"productName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationProductName { get; set; }

    }
    /// Configuration filters
    internal partial interface IConfigurationFiltersInternal

    {
        /// <summary>Filters specific to product</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IFilterableProperty[] FilterableProperty { get; set; }
        /// <summary>Product hierarchy information</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20211201.IHierarchyInformation HierarchyInformation { get; set; }
        /// <summary>Represents configuration name that uniquely identifies configuration</summary>
        string HierarchyInformationConfigurationName { get; set; }
        /// <summary>Represents product family name that uniquely identifies product family</summary>
        string HierarchyInformationProductFamilyName { get; set; }
        /// <summary>Represents product line name that uniquely identifies product line</summary>
        string HierarchyInformationProductLineName { get; set; }
        /// <summary>Represents product name that uniquely identifies product</summary>
        string HierarchyInformationProductName { get; set; }

    }
}