// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Extensions;

    /// <summary>The Available OS properties.</summary>
    public partial class AvailableOSProperties :
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IAvailableOSProperties,
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IAvailableOSPropertiesInternal
    {

        /// <summary>Backing field for <see cref="InsiderChannel" /> property.</summary>
        private string _insiderChannel;

        /// <summary>The insider channel of an Available OS of a Test Base Account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public string InsiderChannel { get => this._insiderChannel; set => this._insiderChannel = value; }

        /// <summary>Backing field for <see cref="OSId" /> property.</summary>
        private string _oSId;

        /// <summary>The Id of an Available OS of a Test Base Account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public string OSId { get => this._oSId; set => this._oSId = value; }

        /// <summary>Backing field for <see cref="OSName" /> property.</summary>
        private string _oSName;

        /// <summary>The name of an Available OS of a Test Base Account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public string OSName { get => this._oSName; set => this._oSName = value; }

        /// <summary>Backing field for <see cref="OSPlatform" /> property.</summary>
        private string _oSPlatform;

        /// <summary>The Platform of an Available OS of a Test Base Account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public string OSPlatform { get => this._oSPlatform; set => this._oSPlatform = value; }

        /// <summary>Backing field for <see cref="OSUpdateType" /> property.</summary>
        private string _oSUpdateType;

        /// <summary>The OS update type of an Available OS of a Test Base Account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public string OSUpdateType { get => this._oSUpdateType; set => this._oSUpdateType = value; }

        /// <summary>Backing field for <see cref="OSVersion" /> property.</summary>
        private string _oSVersion;

        /// <summary>The version of an Available OS of a Test Base Account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public string OSVersion { get => this._oSVersion; set => this._oSVersion = value; }

        /// <summary>Creates an new <see cref="AvailableOSProperties" /> instance.</summary>
        public AvailableOSProperties()
        {

        }
    }
    /// The Available OS properties.
    public partial interface IAvailableOSProperties :
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.IJsonSerializable
    {
        /// <summary>The insider channel of an Available OS of a Test Base Account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The insider channel of an Available OS of a Test Base Account.",
        SerializedName = @"insiderChannel",
        PossibleTypes = new [] { typeof(string) })]
        string InsiderChannel { get; set; }
        /// <summary>The Id of an Available OS of a Test Base Account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Id of an Available OS of a Test Base Account.",
        SerializedName = @"osId",
        PossibleTypes = new [] { typeof(string) })]
        string OSId { get; set; }
        /// <summary>The name of an Available OS of a Test Base Account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of an Available OS of a Test Base Account.",
        SerializedName = @"osName",
        PossibleTypes = new [] { typeof(string) })]
        string OSName { get; set; }
        /// <summary>The Platform of an Available OS of a Test Base Account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Platform of an Available OS of a Test Base Account.",
        SerializedName = @"osPlatform",
        PossibleTypes = new [] { typeof(string) })]
        string OSPlatform { get; set; }
        /// <summary>The OS update type of an Available OS of a Test Base Account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The OS update type of an Available OS of a Test Base Account.",
        SerializedName = @"osUpdateType",
        PossibleTypes = new [] { typeof(string) })]
        string OSUpdateType { get; set; }
        /// <summary>The version of an Available OS of a Test Base Account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of an Available OS of a Test Base Account.",
        SerializedName = @"osVersion",
        PossibleTypes = new [] { typeof(string) })]
        string OSVersion { get; set; }

    }
    /// The Available OS properties.
    internal partial interface IAvailableOSPropertiesInternal

    {
        /// <summary>The insider channel of an Available OS of a Test Base Account.</summary>
        string InsiderChannel { get; set; }
        /// <summary>The Id of an Available OS of a Test Base Account.</summary>
        string OSId { get; set; }
        /// <summary>The name of an Available OS of a Test Base Account.</summary>
        string OSName { get; set; }
        /// <summary>The Platform of an Available OS of a Test Base Account.</summary>
        string OSPlatform { get; set; }
        /// <summary>The OS update type of an Available OS of a Test Base Account.</summary>
        string OSUpdateType { get; set; }
        /// <summary>The version of an Available OS of a Test Base Account.</summary>
        string OSVersion { get; set; }

    }
}