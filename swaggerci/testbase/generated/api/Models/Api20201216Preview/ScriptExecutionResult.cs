// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Extensions;

    /// <summary>The Script Execution Result.</summary>
    public partial class ScriptExecutionResult :
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IScriptExecutionResult,
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IScriptExecutionResultInternal
    {

        /// <summary>Backing field for <see cref="EndTime" /> property.</summary>
        private global::System.DateTime? _endTime;

        /// <summary>End time of script execution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public global::System.DateTime? EndTime { get => this._endTime; set => this._endTime = value; }

        /// <summary>Backing field for <see cref="ExitCode" /> property.</summary>
        private int? _exitCode;

        /// <summary>Exit code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public int? ExitCode { get => this._exitCode; set => this._exitCode = value; }

        /// <summary>Backing field for <see cref="ScriptName" /> property.</summary>
        private string _scriptName;

        /// <summary>Name of script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public string ScriptName { get => this._scriptName; set => this._scriptName = value; }

        /// <summary>Backing field for <see cref="StartTime" /> property.</summary>
        private global::System.DateTime? _startTime;

        /// <summary>Start time of script execution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public global::System.DateTime? StartTime { get => this._startTime; set => this._startTime = value; }

        /// <summary>Backing field for <see cref="TimedOut" /> property.</summary>
        private bool? _timedOut;

        /// <summary>Whether the script execution is timed out.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public bool? TimedOut { get => this._timedOut; set => this._timedOut = value; }

        /// <summary>Creates an new <see cref="ScriptExecutionResult" /> instance.</summary>
        public ScriptExecutionResult()
        {

        }
    }
    /// The Script Execution Result.
    public partial interface IScriptExecutionResult :
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.IJsonSerializable
    {
        /// <summary>End time of script execution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"End time of script execution.",
        SerializedName = @"endTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EndTime { get; set; }
        /// <summary>Exit code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Exit code.",
        SerializedName = @"exitCode",
        PossibleTypes = new [] { typeof(int) })]
        int? ExitCode { get; set; }
        /// <summary>Name of script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of script.",
        SerializedName = @"scriptName",
        PossibleTypes = new [] { typeof(string) })]
        string ScriptName { get; set; }
        /// <summary>Start time of script execution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Start time of script execution.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartTime { get; set; }
        /// <summary>Whether the script execution is timed out.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether the script execution is timed out.",
        SerializedName = @"timedOut",
        PossibleTypes = new [] { typeof(bool) })]
        bool? TimedOut { get; set; }

    }
    /// The Script Execution Result.
    internal partial interface IScriptExecutionResultInternal

    {
        /// <summary>End time of script execution.</summary>
        global::System.DateTime? EndTime { get; set; }
        /// <summary>Exit code.</summary>
        int? ExitCode { get; set; }
        /// <summary>Name of script.</summary>
        string ScriptName { get; set; }
        /// <summary>Start time of script execution.</summary>
        global::System.DateTime? StartTime { get; set; }
        /// <summary>Whether the script execution is timed out.</summary>
        bool? TimedOut { get; set; }

    }
}