// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Extensions;

    /// <summary>The definition of a Test.</summary>
    public partial class Test :
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITest,
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITestInternal
    {

        /// <summary>Backing field for <see cref="Command" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ICommand[] _command;

        /// <summary>The commands used in the test.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ICommand[] Command { get => this._command; set => this._command = value; }

        /// <summary>Backing field for <see cref="IsActive" /> property.</summary>
        private bool? _isActive;

        /// <summary>Indicates if this test is active.It doesn't schedule test for not active Test.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public bool? IsActive { get => this._isActive; set => this._isActive = value; }

        /// <summary>Internal Acessors for ValidationRunStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.ValidationRunStatus? Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITestInternal.ValidationRunStatus { get => this._validationRunStatus; set { {_validationRunStatus = value;} } }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.TestType _type;

        /// <summary>The type of the test.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.TestType Type { get => this._type; set => this._type = value; }

        /// <summary>Backing field for <see cref="ValidationRunStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.ValidationRunStatus? _validationRunStatus;

        /// <summary>The status of the validation run of the package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.ValidationRunStatus? ValidationRunStatus { get => this._validationRunStatus; }

        /// <summary>Creates an new <see cref="Test" /> instance.</summary>
        public Test()
        {

        }
    }
    /// The definition of a Test.
    public partial interface ITest :
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.IJsonSerializable
    {
        /// <summary>The commands used in the test.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The commands used in the test.",
        SerializedName = @"commands",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ICommand) })]
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ICommand[] Command { get; set; }
        /// <summary>Indicates if this test is active.It doesn't schedule test for not active Test.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates if this test is active.It doesn't schedule test for not active Test.",
        SerializedName = @"isActive",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsActive { get; set; }
        /// <summary>The type of the test.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The type of the test.",
        SerializedName = @"testType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.TestType) })]
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.TestType Type { get; set; }
        /// <summary>The status of the validation run of the package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the validation run of the package.",
        SerializedName = @"validationRunStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.ValidationRunStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.ValidationRunStatus? ValidationRunStatus { get;  }

    }
    /// The definition of a Test.
    internal partial interface ITestInternal

    {
        /// <summary>The commands used in the test.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ICommand[] Command { get; set; }
        /// <summary>Indicates if this test is active.It doesn't schedule test for not active Test.</summary>
        bool? IsActive { get; set; }
        /// <summary>The type of the test.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.TestType Type { get; set; }
        /// <summary>The status of the validation run of the package.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.ValidationRunStatus? ValidationRunStatus { get; set; }

    }
}