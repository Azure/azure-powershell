// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Extensions;

    /// <summary>The properties of the Test Base Package.</summary>
    public partial class PackageProperties :
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackageProperties,
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal
    {

        /// <summary>Backing field for <see cref="ApplicationName" /> property.</summary>
        private string _applicationName;

        /// <summary>Application name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public string ApplicationName { get => this._applicationName; set => this._applicationName = value; }

        /// <summary>Backing field for <see cref="BlobPath" /> property.</summary>
        private string _blobPath;

        /// <summary>The file path of the package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public string BlobPath { get => this._blobPath; set => this._blobPath = value; }

        /// <summary>Backing field for <see cref="FlightingRing" /> property.</summary>
        private string _flightingRing;

        /// <summary>The flighting ring for feature update.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public string FlightingRing { get => this._flightingRing; set => this._flightingRing = value; }

        /// <summary>Backing field for <see cref="IsEnabled" /> property.</summary>
        private bool? _isEnabled;

        /// <summary>
        /// Flag showing that whether the package is enabled. It doesn't schedule test for package which is not enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public bool? IsEnabled { get => this._isEnabled; }

        /// <summary>Backing field for <see cref="LastModifiedTime" /> property.</summary>
        private global::System.DateTime? _lastModifiedTime;

        /// <summary>The UTC timestamp when the package was last modified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public global::System.DateTime? LastModifiedTime { get => this._lastModifiedTime; }

        /// <summary>Internal Acessors for IsEnabled</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal.IsEnabled { get => this._isEnabled; set { {_isEnabled = value;} } }

        /// <summary>Internal Acessors for LastModifiedTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal.LastModifiedTime { get => this._lastModifiedTime; set { {_lastModifiedTime = value;} } }

        /// <summary>Internal Acessors for PackageStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.PackageStatus? Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal.PackageStatus { get => this._packageStatus; set { {_packageStatus = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for TestType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.TestType[] Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal.TestType { get => this._testType; set { {_testType = value;} } }

        /// <summary>Internal Acessors for ValidationResult</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackageValidationResult[] Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal.ValidationResult { get => this._validationResult; set { {_validationResult = value;} } }

        /// <summary>Backing field for <see cref="PackageStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.PackageStatus? _packageStatus;

        /// <summary>The status of the package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.PackageStatus? PackageStatus { get => this._packageStatus; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.ProvisioningState? _provisioningState;

        /// <summary>The provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="TargetOSList" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITargetOSInfo[] _targetOSList;

        /// <summary>Specifies the target OSs of specific OS Update types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITargetOSInfo[] TargetOSList { get => this._targetOSList; set => this._targetOSList = value; }

        /// <summary>Backing field for <see cref="Test" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITest[] _test;

        /// <summary>The detailed test information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITest[] Test { get => this._test; set => this._test = value; }

        /// <summary>Backing field for <see cref="TestType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.TestType[] _testType;

        /// <summary>OOB, functional or both. Mapped to the data in 'tests' property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.TestType[] TestType { get => this._testType; }

        /// <summary>Backing field for <see cref="ValidationResult" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackageValidationResult[] _validationResult;

        /// <summary>
        /// The validation results. There's validation on package when it's created or updated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackageValidationResult[] ValidationResult { get => this._validationResult; }

        /// <summary>Backing field for <see cref="Version" /> property.</summary>
        private string _version;

        /// <summary>Application version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public string Version { get => this._version; set => this._version = value; }

        /// <summary>Creates an new <see cref="PackageProperties" /> instance.</summary>
        public PackageProperties()
        {

        }
    }
    /// The properties of the Test Base Package.
    public partial interface IPackageProperties :
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.IJsonSerializable
    {
        /// <summary>Application name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Application name",
        SerializedName = @"applicationName",
        PossibleTypes = new [] { typeof(string) })]
        string ApplicationName { get; set; }
        /// <summary>The file path of the package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The file path of the package.",
        SerializedName = @"blobPath",
        PossibleTypes = new [] { typeof(string) })]
        string BlobPath { get; set; }
        /// <summary>The flighting ring for feature update.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The flighting ring for feature update.",
        SerializedName = @"flightingRing",
        PossibleTypes = new [] { typeof(string) })]
        string FlightingRing { get; set; }
        /// <summary>
        /// Flag showing that whether the package is enabled. It doesn't schedule test for package which is not enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Flag showing that whether the package is enabled. It doesn't schedule test for package which is not enabled.",
        SerializedName = @"isEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsEnabled { get;  }
        /// <summary>The UTC timestamp when the package was last modified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The UTC timestamp when the package was last modified.",
        SerializedName = @"lastModifiedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastModifiedTime { get;  }
        /// <summary>The status of the package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the package.",
        SerializedName = @"packageStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.PackageStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.PackageStatus? PackageStatus { get;  }
        /// <summary>The provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Specifies the target OSs of specific OS Update types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Specifies the target OSs of specific OS Update types.",
        SerializedName = @"targetOSList",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITargetOSInfo) })]
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITargetOSInfo[] TargetOSList { get; set; }
        /// <summary>The detailed test information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The detailed test information.",
        SerializedName = @"tests",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITest) })]
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITest[] Test { get; set; }
        /// <summary>OOB, functional or both. Mapped to the data in 'tests' property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"OOB, functional or both. Mapped to the data in 'tests' property.",
        SerializedName = @"testTypes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.TestType) })]
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.TestType[] TestType { get;  }
        /// <summary>
        /// The validation results. There's validation on package when it's created or updated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The validation results. There's validation on package when it's created or updated.",
        SerializedName = @"validationResults",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackageValidationResult) })]
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackageValidationResult[] ValidationResult { get;  }
        /// <summary>Application version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Application version",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string Version { get; set; }

    }
    /// The properties of the Test Base Package.
    internal partial interface IPackagePropertiesInternal

    {
        /// <summary>Application name</summary>
        string ApplicationName { get; set; }
        /// <summary>The file path of the package.</summary>
        string BlobPath { get; set; }
        /// <summary>The flighting ring for feature update.</summary>
        string FlightingRing { get; set; }
        /// <summary>
        /// Flag showing that whether the package is enabled. It doesn't schedule test for package which is not enabled.
        /// </summary>
        bool? IsEnabled { get; set; }
        /// <summary>The UTC timestamp when the package was last modified.</summary>
        global::System.DateTime? LastModifiedTime { get; set; }
        /// <summary>The status of the package.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.PackageStatus? PackageStatus { get; set; }
        /// <summary>The provisioning state of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Specifies the target OSs of specific OS Update types.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITargetOSInfo[] TargetOSList { get; set; }
        /// <summary>The detailed test information.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITest[] Test { get; set; }
        /// <summary>OOB, functional or both. Mapped to the data in 'tests' property.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.TestType[] TestType { get; set; }
        /// <summary>
        /// The validation results. There's validation on package when it's created or updated.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackageValidationResult[] ValidationResult { get; set; }
        /// <summary>Application version</summary>
        string Version { get; set; }

    }
}