// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Extensions;

    /// <summary>The Reliability Result.</summary>
    public partial class ReliabilityResult :
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IReliabilityResult,
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IReliabilityResultInternal
    {

        /// <summary>Backing field for <see cref="CrashCount" /> property.</summary>
        private int? _crashCount;

        /// <summary>Count of number of crashes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public int? CrashCount { get => this._crashCount; set => this._crashCount = value; }

        /// <summary>Backing field for <see cref="CrashRegressionGrade" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.Grade? _crashRegressionGrade;

        /// <summary>The statistic regression grade for crash signal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.Grade? CrashRegressionGrade { get => this._crashRegressionGrade; set => this._crashRegressionGrade = value; }

        /// <summary>Backing field for <see cref="CrashRegressionTestDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IRegressionTestDetails _crashRegressionTestDetail;

        /// <summary>Details related to the crash regression analysis.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IRegressionTestDetails CrashRegressionTestDetail { get => (this._crashRegressionTestDetail = this._crashRegressionTestDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.RegressionTestDetails()); set => this._crashRegressionTestDetail = value; }

        /// <summary>Difference between the two datasets being analyzed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Inlined)]
        public double? CrashRegressionTestDetailDiff { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IRegressionTestDetailsInternal)CrashRegressionTestDetail).Diff; set => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IRegressionTestDetailsInternal)CrashRegressionTestDetail).Diff = value ?? default(double); }

        /// <summary>Indicates if a regression was inferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Inlined)]
        public bool? CrashRegressionTestDetailIsRegressed { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IRegressionTestDetailsInternal)CrashRegressionTestDetail).IsRegressed; set => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IRegressionTestDetailsInternal)CrashRegressionTestDetail).IsRegressed = value ?? default(bool); }

        /// <summary>Backing field for <see cref="FileName" /> property.</summary>
        private string _fileName;

        /// <summary>File name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public string FileName { get => this._fileName; set => this._fileName = value; }

        /// <summary>Backing field for <see cref="HangCount" /> property.</summary>
        private int? _hangCount;

        /// <summary>Count of number of hangs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public int? HangCount { get => this._hangCount; set => this._hangCount = value; }

        /// <summary>Backing field for <see cref="HangRegressionGrade" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.Grade? _hangRegressionGrade;

        /// <summary>The statistic regression grade for hang signal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.Grade? HangRegressionGrade { get => this._hangRegressionGrade; set => this._hangRegressionGrade = value; }

        /// <summary>Backing field for <see cref="HangRegressionTestDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IRegressionTestDetails _hangRegressionTestDetail;

        /// <summary>Details related to the hang regression analysis.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IRegressionTestDetails HangRegressionTestDetail { get => (this._hangRegressionTestDetail = this._hangRegressionTestDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.RegressionTestDetails()); set => this._hangRegressionTestDetail = value; }

        /// <summary>Difference between the two datasets being analyzed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Inlined)]
        public double? HangRegressionTestDetailDiff { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IRegressionTestDetailsInternal)HangRegressionTestDetail).Diff; set => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IRegressionTestDetailsInternal)HangRegressionTestDetail).Diff = value ?? default(double); }

        /// <summary>Indicates if a regression was inferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Inlined)]
        public bool? HangRegressionTestDetailIsRegressed { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IRegressionTestDetailsInternal)HangRegressionTestDetail).IsRegressed; set => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IRegressionTestDetailsInternal)HangRegressionTestDetail).IsRegressed = value ?? default(bool); }

        /// <summary>Backing field for <see cref="LaunchCount" /> property.</summary>
        private int? _launchCount;

        /// <summary>Count of number of launches.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public int? LaunchCount { get => this._launchCount; set => this._launchCount = value; }

        /// <summary>Internal Acessors for CrashRegressionTestDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IRegressionTestDetails Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IReliabilityResultInternal.CrashRegressionTestDetail { get => (this._crashRegressionTestDetail = this._crashRegressionTestDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.RegressionTestDetails()); set { {_crashRegressionTestDetail = value;} } }

        /// <summary>Internal Acessors for HangRegressionTestDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IRegressionTestDetails Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IReliabilityResultInternal.HangRegressionTestDetail { get => (this._hangRegressionTestDetail = this._hangRegressionTestDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.RegressionTestDetails()); set { {_hangRegressionTestDetail = value;} } }

        /// <summary>Backing field for <see cref="RegressionGrade" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.Grade? _regressionGrade;

        /// <summary>The regression grade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.Grade? RegressionGrade { get => this._regressionGrade; set => this._regressionGrade = value; }

        /// <summary>Creates an new <see cref="ReliabilityResult" /> instance.</summary>
        public ReliabilityResult()
        {

        }
    }
    /// The Reliability Result.
    public partial interface IReliabilityResult :
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.IJsonSerializable
    {
        /// <summary>Count of number of crashes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Count of number of crashes.",
        SerializedName = @"crashCount",
        PossibleTypes = new [] { typeof(int) })]
        int? CrashCount { get; set; }
        /// <summary>The statistic regression grade for crash signal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The statistic regression grade for crash signal.",
        SerializedName = @"crashRegressionGrade",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.Grade) })]
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.Grade? CrashRegressionGrade { get; set; }
        /// <summary>Difference between the two datasets being analyzed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Difference between the two datasets being analyzed.",
        SerializedName = @"diff",
        PossibleTypes = new [] { typeof(double) })]
        double? CrashRegressionTestDetailDiff { get; set; }
        /// <summary>Indicates if a regression was inferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates if a regression was inferred.",
        SerializedName = @"isRegressed",
        PossibleTypes = new [] { typeof(bool) })]
        bool? CrashRegressionTestDetailIsRegressed { get; set; }
        /// <summary>File name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"File name.",
        SerializedName = @"fileName",
        PossibleTypes = new [] { typeof(string) })]
        string FileName { get; set; }
        /// <summary>Count of number of hangs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Count of number of hangs.",
        SerializedName = @"hangCount",
        PossibleTypes = new [] { typeof(int) })]
        int? HangCount { get; set; }
        /// <summary>The statistic regression grade for hang signal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The statistic regression grade for hang signal.",
        SerializedName = @"hangRegressionGrade",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.Grade) })]
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.Grade? HangRegressionGrade { get; set; }
        /// <summary>Difference between the two datasets being analyzed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Difference between the two datasets being analyzed.",
        SerializedName = @"diff",
        PossibleTypes = new [] { typeof(double) })]
        double? HangRegressionTestDetailDiff { get; set; }
        /// <summary>Indicates if a regression was inferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates if a regression was inferred.",
        SerializedName = @"isRegressed",
        PossibleTypes = new [] { typeof(bool) })]
        bool? HangRegressionTestDetailIsRegressed { get; set; }
        /// <summary>Count of number of launches.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Count of number of launches.",
        SerializedName = @"launchCount",
        PossibleTypes = new [] { typeof(int) })]
        int? LaunchCount { get; set; }
        /// <summary>The regression grade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The regression grade.",
        SerializedName = @"regressionGrade",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.Grade) })]
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.Grade? RegressionGrade { get; set; }

    }
    /// The Reliability Result.
    internal partial interface IReliabilityResultInternal

    {
        /// <summary>Count of number of crashes.</summary>
        int? CrashCount { get; set; }
        /// <summary>The statistic regression grade for crash signal.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.Grade? CrashRegressionGrade { get; set; }
        /// <summary>Details related to the crash regression analysis.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IRegressionTestDetails CrashRegressionTestDetail { get; set; }
        /// <summary>Difference between the two datasets being analyzed.</summary>
        double? CrashRegressionTestDetailDiff { get; set; }
        /// <summary>Indicates if a regression was inferred.</summary>
        bool? CrashRegressionTestDetailIsRegressed { get; set; }
        /// <summary>File name.</summary>
        string FileName { get; set; }
        /// <summary>Count of number of hangs.</summary>
        int? HangCount { get; set; }
        /// <summary>The statistic regression grade for hang signal.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.Grade? HangRegressionGrade { get; set; }
        /// <summary>Details related to the hang regression analysis.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IRegressionTestDetails HangRegressionTestDetail { get; set; }
        /// <summary>Difference between the two datasets being analyzed.</summary>
        double? HangRegressionTestDetailDiff { get; set; }
        /// <summary>Indicates if a regression was inferred.</summary>
        bool? HangRegressionTestDetailIsRegressed { get; set; }
        /// <summary>Count of number of launches.</summary>
        int? LaunchCount { get; set; }
        /// <summary>The regression grade.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.Grade? RegressionGrade { get; set; }

    }
}