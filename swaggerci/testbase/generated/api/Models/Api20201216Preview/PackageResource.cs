// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Extensions;

    /// <summary>The Test Base Package resource.</summary>
    public partial class PackageResource :
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackageResource,
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackageResourceInternal,
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.IValidates,
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.IHeaderSerializable
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.TrackedResource();

        /// <summary>Application name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Inlined)]
        public string ApplicationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).ApplicationName; set => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).ApplicationName = value ?? null; }

        /// <summary>Backing field for <see cref="AzureAsyncOperation" /> property.</summary>
        private string _azureAsyncOperation;

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        public string AzureAsyncOperation { get => this._azureAsyncOperation; set => this._azureAsyncOperation = value; }

        /// <summary>The file path of the package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Inlined)]
        public string BlobPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).BlobPath; set => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).BlobPath = value ?? null; }

        /// <summary>Resource Etag.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Inherited)]
        public string Etag { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITrackedResourceInternal)__trackedResource).Etag; }

        /// <summary>The flighting ring for feature update.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Inlined)]
        public string FlightingRing { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).FlightingRing; set => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).FlightingRing = value ?? null; }

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IResourceInternal)__trackedResource).Id; }

        /// <summary>
        /// Flag showing that whether the package is enabled. It doesn't schedule test for package which is not enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Inlined)]
        public bool? IsEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).IsEnabled; }

        /// <summary>The UTC timestamp when the package was last modified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Inlined)]
        public global::System.DateTime? LastModifiedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).LastModifiedTime; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>Internal Acessors for IsEnabled</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackageResourceInternal.IsEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).IsEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).IsEnabled = value; }

        /// <summary>Internal Acessors for LastModifiedTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackageResourceInternal.LastModifiedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).LastModifiedTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).LastModifiedTime = value; }

        /// <summary>Internal Acessors for PackageStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.PackageStatus? Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackageResourceInternal.PackageStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).PackageStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).PackageStatus = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackageProperties Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackageResourceInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.PackageProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackageResourceInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ISystemData Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackageResourceInternal.SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.SystemData()); set { {_systemData = value;} } }

        /// <summary>Internal Acessors for TestType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.TestType[] Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackageResourceInternal.TestType { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).TestType; set => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).TestType = value; }

        /// <summary>Internal Acessors for ValidationResult</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackageValidationResult[] Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackageResourceInternal.ValidationResult { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).ValidationResult; set => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).ValidationResult = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>Internal Acessors for Etag</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITrackedResourceInternal.Etag { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITrackedResourceInternal)__trackedResource).Etag; set => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITrackedResourceInternal)__trackedResource).Etag = value; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IResourceInternal)__trackedResource).Name; }

        /// <summary>The status of the package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.PackageStatus? PackageStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).PackageStatus; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackageProperties _property;

        /// <summary>Test Base Package properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackageProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.PackageProperties()); set => this._property = value; }

        /// <summary>The provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).ProvisioningState; }

        /// <summary>Backing field for <see cref="SystemData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ISystemData _systemData;

        /// <summary>The system metadata relating to this resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ISystemData SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.SystemData()); }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ISystemDataInternal)SystemData).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ISystemDataInternal)SystemData).CreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Inlined)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ISystemDataInternal)SystemData).CreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ISystemDataInternal)SystemData).CreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ISystemDataInternal)SystemData).CreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ISystemDataInternal)SystemData).CreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.CreatedByType)""); }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ISystemDataInternal)SystemData).LastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ISystemDataInternal)SystemData).LastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ISystemDataInternal)SystemData).LastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ISystemDataInternal)SystemData).LastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ISystemDataInternal)SystemData).LastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ISystemDataInternal)SystemData).LastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.CreatedByType)""); }

        /// <summary>The tags of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>Specifies the target OSs of specific OS Update types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITargetOSInfo[] TargetOSList { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).TargetOSList; set => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).TargetOSList = value ?? null /* arrayOf */; }

        /// <summary>The detailed test information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITest[] Test { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).Test; set => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).Test = value ?? null /* arrayOf */; }

        /// <summary>OOB, functional or both. Mapped to the data in 'tests' property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.TestType[] TestType { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).TestType; }

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IResourceInternal)__trackedResource).Type; }

        /// <summary>
        /// The validation results. There's validation on package when it's created or updated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackageValidationResult[] ValidationResult { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).ValidationResult; }

        /// <summary>Application version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Origin(Microsoft.Azure.PowerShell.Cmdlets.TestBase.PropertyOrigin.Inlined)]
        public string Version { get => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).Version; set => ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackagePropertiesInternal)Property).Version = value ?? null; }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("Azure-AsyncOperation", out var __azureAsyncOperationHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackageResourceInternal)this).AzureAsyncOperation = System.Linq.Enumerable.FirstOrDefault(__azureAsyncOperationHeader0) is string __headerAzureAsyncOperationHeader0 ? __headerAzureAsyncOperationHeader0 : (string)null;
            }
        }

        /// <summary>Creates an new <see cref="PackageResource" /> instance.</summary>
        public PackageResource()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// The Test Base Package resource.
    public partial interface IPackageResource :
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITrackedResource
    {
        /// <summary>Application name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Application name",
        SerializedName = @"applicationName",
        PossibleTypes = new [] { typeof(string) })]
        string ApplicationName { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"Azure-AsyncOperation",
        PossibleTypes = new [] { typeof(string) })]
        string AzureAsyncOperation { get; set; }
        /// <summary>The file path of the package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The file path of the package.",
        SerializedName = @"blobPath",
        PossibleTypes = new [] { typeof(string) })]
        string BlobPath { get; set; }
        /// <summary>The flighting ring for feature update.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The flighting ring for feature update.",
        SerializedName = @"flightingRing",
        PossibleTypes = new [] { typeof(string) })]
        string FlightingRing { get; set; }
        /// <summary>
        /// Flag showing that whether the package is enabled. It doesn't schedule test for package which is not enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Flag showing that whether the package is enabled. It doesn't schedule test for package which is not enabled.",
        SerializedName = @"isEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsEnabled { get;  }
        /// <summary>The UTC timestamp when the package was last modified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The UTC timestamp when the package was last modified.",
        SerializedName = @"lastModifiedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastModifiedTime { get;  }
        /// <summary>The status of the package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the package.",
        SerializedName = @"packageStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.PackageStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.PackageStatus? PackageStatus { get;  }
        /// <summary>The provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>Specifies the target OSs of specific OS Update types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the target OSs of specific OS Update types.",
        SerializedName = @"targetOSList",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITargetOSInfo) })]
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITargetOSInfo[] TargetOSList { get; set; }
        /// <summary>The detailed test information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The detailed test information.",
        SerializedName = @"tests",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITest) })]
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITest[] Test { get; set; }
        /// <summary>OOB, functional or both. Mapped to the data in 'tests' property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"OOB, functional or both. Mapped to the data in 'tests' property.",
        SerializedName = @"testTypes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.TestType) })]
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.TestType[] TestType { get;  }
        /// <summary>
        /// The validation results. There's validation on package when it's created or updated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The validation results. There's validation on package when it's created or updated.",
        SerializedName = @"validationResults",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackageValidationResult) })]
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackageValidationResult[] ValidationResult { get;  }
        /// <summary>Application version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Application version",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string Version { get; set; }

    }
    /// The Test Base Package resource.
    internal partial interface IPackageResourceInternal :
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITrackedResourceInternal
    {
        /// <summary>Application name</summary>
        string ApplicationName { get; set; }

        string AzureAsyncOperation { get; set; }
        /// <summary>The file path of the package.</summary>
        string BlobPath { get; set; }
        /// <summary>The flighting ring for feature update.</summary>
        string FlightingRing { get; set; }
        /// <summary>
        /// Flag showing that whether the package is enabled. It doesn't schedule test for package which is not enabled.
        /// </summary>
        bool? IsEnabled { get; set; }
        /// <summary>The UTC timestamp when the package was last modified.</summary>
        global::System.DateTime? LastModifiedTime { get; set; }
        /// <summary>The status of the package.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.PackageStatus? PackageStatus { get; set; }
        /// <summary>Test Base Package properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackageProperties Property { get; set; }
        /// <summary>The provisioning state of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>The system metadata relating to this resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ISystemData SystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>Specifies the target OSs of specific OS Update types.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITargetOSInfo[] TargetOSList { get; set; }
        /// <summary>The detailed test information.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.ITest[] Test { get; set; }
        /// <summary>OOB, functional or both. Mapped to the data in 'tests' property.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Support.TestType[] TestType { get; set; }
        /// <summary>
        /// The validation results. There's validation on package when it's created or updated.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IPackageValidationResult[] ValidationResult { get; set; }
        /// <summary>Application version</summary>
        string Version { get; set; }

    }
}