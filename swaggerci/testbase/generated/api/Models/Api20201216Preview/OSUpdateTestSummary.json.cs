// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Extensions;

    /// <summary>The summary of a test.</summary>
    public partial class OSUpdateTestSummary
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IOSUpdateTestSummary.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IOSUpdateTestSummary.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.TestBase.Models.Api20201216Preview.IOSUpdateTestSummary FromJson(Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonObject json ? new OSUpdateTestSummary(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonObject into a new instance of <see cref="OSUpdateTestSummary" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal OSUpdateTestSummary(Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_oSName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonString>("osName"), out var __jsonOSName) ? (string)__jsonOSName : (string)OSName;}
            {_releaseName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonString>("releaseName"), out var __jsonReleaseName) ? (string)__jsonReleaseName : (string)ReleaseName;}
            {_buildVersion = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonString>("buildVersion"), out var __jsonBuildVersion) ? (string)__jsonBuildVersion : (string)BuildVersion;}
            {_buildRevision = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonString>("buildRevision"), out var __jsonBuildRevision) ? (string)__jsonBuildRevision : (string)BuildRevision;}
            {_releaseVersionDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonString>("releaseVersionDate"), out var __jsonReleaseVersionDate) ? global::System.DateTime.TryParse((string)__jsonReleaseVersionDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonReleaseVersionDateValue) ? __jsonReleaseVersionDateValue : ReleaseVersionDate : ReleaseVersionDate;}
            {_flightingRing = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonString>("flightingRing"), out var __jsonFlightingRing) ? (string)__jsonFlightingRing : (string)FlightingRing;}
            {_executionStatus = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonString>("executionStatus"), out var __jsonExecutionStatus) ? (string)__jsonExecutionStatus : (string)ExecutionStatus;}
            {_testStatus = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonString>("testStatus"), out var __jsonTestStatus) ? (string)__jsonTestStatus : (string)TestStatus;}
            {_grade = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonString>("grade"), out var __jsonGrade) ? (string)__jsonGrade : (string)Grade;}
            {_testRunTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonString>("testRunTime"), out var __jsonTestRunTime) ? (string)__jsonTestRunTime : (string)TestRunTime;}
            {_testType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonString>("testType"), out var __jsonTestType) ? (string)__jsonTestType : (string)TestType;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="OSUpdateTestSummary" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="OSUpdateTestSummary" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != (((object)this._oSName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonString(this._oSName.ToString()) : null, "osName" ,container.Add );
            AddIf( null != (((object)this._releaseName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonString(this._releaseName.ToString()) : null, "releaseName" ,container.Add );
            AddIf( null != (((object)this._buildVersion)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonString(this._buildVersion.ToString()) : null, "buildVersion" ,container.Add );
            AddIf( null != (((object)this._buildRevision)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonString(this._buildRevision.ToString()) : null, "buildRevision" ,container.Add );
            AddIf( null != this._releaseVersionDate ? (Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonString(this._releaseVersionDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "releaseVersionDate" ,container.Add );
            AddIf( null != (((object)this._flightingRing)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonString(this._flightingRing.ToString()) : null, "flightingRing" ,container.Add );
            AddIf( null != (((object)this._executionStatus)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonString(this._executionStatus.ToString()) : null, "executionStatus" ,container.Add );
            AddIf( null != (((object)this._testStatus)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonString(this._testStatus.ToString()) : null, "testStatus" ,container.Add );
            AddIf( null != (((object)this._grade)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonString(this._grade.ToString()) : null, "grade" ,container.Add );
            AddIf( null != (((object)this._testRunTime)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonString(this._testRunTime.ToString()) : null, "testRunTime" ,container.Add );
            AddIf( null != (((object)this._testType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.TestBase.Runtime.Json.JsonString(this._testType.ToString()) : null, "testType" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}