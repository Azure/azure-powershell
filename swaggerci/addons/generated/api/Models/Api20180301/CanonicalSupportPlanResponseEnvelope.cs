// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Addons.Models.Api20180301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Addons.Runtime.Extensions;

    /// <summary>The status of the Canonical support plan.</summary>
    public partial class CanonicalSupportPlanResponseEnvelope :
        Microsoft.Azure.PowerShell.Cmdlets.Addons.Models.Api20180301.ICanonicalSupportPlanResponseEnvelope,
        Microsoft.Azure.PowerShell.Cmdlets.Addons.Models.Api20180301.ICanonicalSupportPlanResponseEnvelopeInternal
    {

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>
        /// The id of the ARM resource, e.g. "/subscriptions/{id}/providers/Microsoft.Addons/supportProvider/{supportProviderName}/supportPlanTypes/{planTypeName}".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Addons.Origin(Microsoft.Azure.PowerShell.Cmdlets.Addons.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Addons.Models.Api20180301.ICanonicalSupportPlanResponseEnvelopeInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Addons.Models.Api20180301.ICanonicalSupportPlanResponseEnvelopeInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Addons.Models.Api20180301.ICanonicalSupportPlanProperties Microsoft.Azure.PowerShell.Cmdlets.Addons.Models.Api20180301.ICanonicalSupportPlanResponseEnvelopeInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Addons.Models.Api20180301.CanonicalSupportPlanProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Addons.Models.Api20180301.ICanonicalSupportPlanResponseEnvelopeInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>
        /// The name of the Canonical support plan, i.e. "essential", "standard" or "advanced".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Addons.Origin(Microsoft.Azure.PowerShell.Cmdlets.Addons.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Addons.Models.Api20180301.ICanonicalSupportPlanProperties _property;

        /// <summary>Describes Canonical support plan type and status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Addons.Origin(Microsoft.Azure.PowerShell.Cmdlets.Addons.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Addons.Models.Api20180301.ICanonicalSupportPlanProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Addons.Models.Api20180301.CanonicalSupportPlanProperties()); set => this._property = value; }

        /// <summary>The provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Addons.Origin(Microsoft.Azure.PowerShell.Cmdlets.Addons.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Addons.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Addons.Models.Api20180301.ICanonicalSupportPlanPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Addons.Models.Api20180301.ICanonicalSupportPlanPropertiesInternal)Property).ProvisioningState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Addons.Support.ProvisioningState)""); }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>Microsoft.Addons/supportProvider</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Addons.Origin(Microsoft.Azure.PowerShell.Cmdlets.Addons.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>Creates an new <see cref="CanonicalSupportPlanResponseEnvelope" /> instance.</summary>
        public CanonicalSupportPlanResponseEnvelope()
        {

        }
    }
    /// The status of the Canonical support plan.
    public partial interface ICanonicalSupportPlanResponseEnvelope :
        Microsoft.Azure.PowerShell.Cmdlets.Addons.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The id of the ARM resource, e.g. "/subscriptions/{id}/providers/Microsoft.Addons/supportProvider/{supportProviderName}/supportPlanTypes/{planTypeName}".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Addons.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The id of the ARM resource, e.g. ""/subscriptions/{id}/providers/Microsoft.Addons/supportProvider/{supportProviderName}/supportPlanTypes/{planTypeName}"".",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>
        /// The name of the Canonical support plan, i.e. "essential", "standard" or "advanced".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Addons.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the Canonical support plan, i.e. ""essential"", ""standard"" or ""advanced"".",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>The provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Addons.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The provisioning state of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Addons.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Addons.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Microsoft.Addons/supportProvider</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Addons.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Microsoft.Addons/supportProvider",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }

    }
    /// The status of the Canonical support plan.
    internal partial interface ICanonicalSupportPlanResponseEnvelopeInternal

    {
        /// <summary>
        /// The id of the ARM resource, e.g. "/subscriptions/{id}/providers/Microsoft.Addons/supportProvider/{supportProviderName}/supportPlanTypes/{planTypeName}".
        /// </summary>
        string Id { get; set; }
        /// <summary>
        /// The name of the Canonical support plan, i.e. "essential", "standard" or "advanced".
        /// </summary>
        string Name { get; set; }
        /// <summary>Describes Canonical support plan type and status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Addons.Models.Api20180301.ICanonicalSupportPlanProperties Property { get; set; }
        /// <summary>The provisioning state of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Addons.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Microsoft.Addons/supportProvider</summary>
        string Type { get; set; }

    }
}