// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Appliances.Runtime.Extensions;

    /// <summary>Appliances definition.</summary>
    public partial class Appliance :
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliance,
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IApplianceInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.TrackedResource();

        /// <summary>Represents a supported Fabric/Infra. (AKSEdge etc...).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Distro? Distro { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInternal)Property).Distro; set => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInternal)Property).Distro = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Distro)""); }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.IResourceInternal)__trackedResource).Id; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IIdentity _identity;

        /// <summary>Identity for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.Identity()); set => this._identity = value; }

        /// <summary>The principal ID of resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Inlined)]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IIdentityInternal)Identity).PrincipalId; }

        /// <summary>The tenant ID of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IIdentityInternal)Identity).TenantId; }

        /// <summary>The identity type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.ResourceIdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IIdentityInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.ResourceIdentityType)""); }

        /// <summary>Information about the connected appliance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Provider? InfrastructureConfigProvider { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInternal)Property).InfrastructureConfigProvider; set => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInternal)Property).InfrastructureConfigProvider = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Provider)""); }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IIdentity Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IApplianceInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.Identity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IApplianceInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IIdentityInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IIdentityInternal)Identity).PrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IApplianceInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IIdentityInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IIdentityInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for InfrastructureConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInfrastructureConfig Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IApplianceInternal.InfrastructureConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInternal)Property).InfrastructureConfig; set => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInternal)Property).InfrastructureConfig = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IApplianceProperties Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IApplianceInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.ApplianceProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IApplianceInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Status? Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IApplianceInternal.Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInternal)Property).Status = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.ISystemData Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IApplianceInternal.SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.SystemData()); set { {_systemData = value;} } }

        /// <summary>Internal Acessors for Version</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IApplianceInternal.Version { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInternal)Property).Version; set => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInternal)Property).Version = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.IResourceInternal)__trackedResource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IApplianceProperties _property;

        /// <summary>The set of properties specific to an Appliance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IApplianceProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.ApplianceProperties()); set => this._property = value; }

        /// <summary>
        /// The current deployment or provisioning state, which only appears in the response.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInternal)Property).ProvisioningState; }

        /// <summary>Certificates pair used to download MSI certificate from HIS</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Inlined)]
        public string PublicKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInternal)Property).PublicKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInternal)Property).PublicKey = value ?? null; }

        /// <summary>Appliance’s health and state of connection to on-prem</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Status? Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInternal)Property).Status; }

        /// <summary>Backing field for <see cref="SystemData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.ISystemData _systemData;

        /// <summary>Metadata pertaining to creation and last modification of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.ISystemData SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.SystemData()); }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.ISystemDataInternal)SystemData).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.ISystemDataInternal)SystemData).CreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Inlined)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.ISystemDataInternal)SystemData).CreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.ISystemDataInternal)SystemData).CreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.ISystemDataInternal)SystemData).CreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.ISystemDataInternal)SystemData).CreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.ISystemDataInternal)SystemData).LastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.ISystemDataInternal)SystemData).LastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.ISystemDataInternal)SystemData).LastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.ISystemDataInternal)SystemData).LastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.ISystemDataInternal)SystemData).LastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.ISystemDataInternal)SystemData).LastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.CreatedByType)""); }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.IResourceInternal)__trackedResource).Type; }

        /// <summary>Version of the Appliance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Inlined)]
        public string Version { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInternal)Property).Version; }

        /// <summary>Creates an new <see cref="Appliance" /> instance.</summary>
        public Appliance()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Appliances.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Appliances.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// Appliances definition.
    public partial interface IAppliance :
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.ITrackedResource
    {
        /// <summary>Represents a supported Fabric/Infra. (AKSEdge etc...).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents a supported Fabric/Infra. (AKSEdge etc...).",
        SerializedName = @"distro",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Distro) })]
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Distro? Distro { get; set; }
        /// <summary>The principal ID of resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The principal ID of resource identity.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }
        /// <summary>The tenant ID of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tenant ID of resource.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }
        /// <summary>The identity type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.ResourceIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.ResourceIdentityType? IdentityType { get; set; }
        /// <summary>Information about the connected appliance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Information about the connected appliance.",
        SerializedName = @"provider",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Provider) })]
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Provider? InfrastructureConfigProvider { get; set; }
        /// <summary>
        /// The current deployment or provisioning state, which only appears in the response.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current deployment or provisioning state, which only appears in the response.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>Certificates pair used to download MSI certificate from HIS</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Certificates pair used to download MSI certificate from HIS",
        SerializedName = @"publicKey",
        PossibleTypes = new [] { typeof(string) })]
        string PublicKey { get; set; }
        /// <summary>Appliance’s health and state of connection to on-prem</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Appliance’s health and state of connection to on-prem",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Status) })]
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Status? Status { get;  }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource last modification (UTC)",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>Version of the Appliance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Version of the Appliance",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string Version { get;  }

    }
    /// Appliances definition.
    internal partial interface IApplianceInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.ITrackedResourceInternal
    {
        /// <summary>Represents a supported Fabric/Infra. (AKSEdge etc...).</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Distro? Distro { get; set; }
        /// <summary>Identity for the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IIdentity Identity { get; set; }
        /// <summary>The principal ID of resource identity.</summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>The tenant ID of resource.</summary>
        string IdentityTenantId { get; set; }
        /// <summary>The identity type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.ResourceIdentityType? IdentityType { get; set; }
        /// <summary>Contains infrastructure information about the Appliance</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInfrastructureConfig InfrastructureConfig { get; set; }
        /// <summary>Information about the connected appliance.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Provider? InfrastructureConfigProvider { get; set; }
        /// <summary>The set of properties specific to an Appliance</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IApplianceProperties Property { get; set; }
        /// <summary>
        /// The current deployment or provisioning state, which only appears in the response.
        /// </summary>
        string ProvisioningState { get; set; }
        /// <summary>Certificates pair used to download MSI certificate from HIS</summary>
        string PublicKey { get; set; }
        /// <summary>Appliance’s health and state of connection to on-prem</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Status? Status { get; set; }
        /// <summary>Metadata pertaining to creation and last modification of the resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20.ISystemData SystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>Version of the Appliance</summary>
        string Version { get; set; }

    }
}