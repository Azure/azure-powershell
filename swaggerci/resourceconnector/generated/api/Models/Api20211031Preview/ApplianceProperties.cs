// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Appliances.Runtime.Extensions;

    /// <summary>Properties for an appliance.</summary>
    public partial class ApplianceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IApplianceProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInternal
    {

        /// <summary>Backing field for <see cref="Distro" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Distro? _distro;

        /// <summary>Represents a supported Fabric/Infra. (AKSEdge etc...).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Distro? Distro { get => this._distro; set => this._distro = value; }

        /// <summary>Backing field for <see cref="InfrastructureConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInfrastructureConfig _infrastructureConfig;

        /// <summary>Contains infrastructure information about the Appliance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInfrastructureConfig InfrastructureConfig { get => (this._infrastructureConfig = this._infrastructureConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.AppliancePropertiesInfrastructureConfig()); set => this._infrastructureConfig = value; }

        /// <summary>Information about the connected appliance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Provider? InfrastructureConfigProvider { get => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInfrastructureConfigInternal)InfrastructureConfig).Provider; set => ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInfrastructureConfigInternal)InfrastructureConfig).Provider = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Provider)""); }

        /// <summary>Internal Acessors for InfrastructureConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInfrastructureConfig Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInternal.InfrastructureConfig { get => (this._infrastructureConfig = this._infrastructureConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.AppliancePropertiesInfrastructureConfig()); set { {_infrastructureConfig = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Status? Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInternal.Status { get => this._status; set { {_status = value;} } }

        /// <summary>Internal Acessors for Version</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInternal.Version { get => this._version; set { {_version = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>
        /// The current deployment or provisioning state, which only appears in the response.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="PublicKey" /> property.</summary>
        private string _publicKey;

        /// <summary>Certificates pair used to download MSI certificate from HIS</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Owned)]
        public string PublicKey { get => this._publicKey; set => this._publicKey = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Status? _status;

        /// <summary>Appliance’s health and state of connection to on-prem</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Status? Status { get => this._status; }

        /// <summary>Backing field for <see cref="Version" /> property.</summary>
        private string _version;

        /// <summary>Version of the Appliance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Origin(Microsoft.Azure.PowerShell.Cmdlets.Appliances.PropertyOrigin.Owned)]
        public string Version { get => this._version; }

        /// <summary>Creates an new <see cref="ApplianceProperties" /> instance.</summary>
        public ApplianceProperties()
        {

        }
    }
    /// Properties for an appliance.
    public partial interface IApplianceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Runtime.IJsonSerializable
    {
        /// <summary>Represents a supported Fabric/Infra. (AKSEdge etc...).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents a supported Fabric/Infra. (AKSEdge etc...).",
        SerializedName = @"distro",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Distro) })]
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Distro? Distro { get; set; }
        /// <summary>Information about the connected appliance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Information about the connected appliance.",
        SerializedName = @"provider",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Provider) })]
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Provider? InfrastructureConfigProvider { get; set; }
        /// <summary>
        /// The current deployment or provisioning state, which only appears in the response.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current deployment or provisioning state, which only appears in the response.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>Certificates pair used to download MSI certificate from HIS</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Certificates pair used to download MSI certificate from HIS",
        SerializedName = @"publicKey",
        PossibleTypes = new [] { typeof(string) })]
        string PublicKey { get; set; }
        /// <summary>Appliance’s health and state of connection to on-prem</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Appliance’s health and state of connection to on-prem",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Status) })]
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Status? Status { get;  }
        /// <summary>Version of the Appliance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Appliances.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Version of the Appliance",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string Version { get;  }

    }
    /// Properties for an appliance.
    internal partial interface IAppliancePropertiesInternal

    {
        /// <summary>Represents a supported Fabric/Infra. (AKSEdge etc...).</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Distro? Distro { get; set; }
        /// <summary>Contains infrastructure information about the Appliance</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Models.Api20211031Preview.IAppliancePropertiesInfrastructureConfig InfrastructureConfig { get; set; }
        /// <summary>Information about the connected appliance.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Provider? InfrastructureConfigProvider { get; set; }
        /// <summary>
        /// The current deployment or provisioning state, which only appears in the response.
        /// </summary>
        string ProvisioningState { get; set; }
        /// <summary>Certificates pair used to download MSI certificate from HIS</summary>
        string PublicKey { get; set; }
        /// <summary>Appliance’s health and state of connection to on-prem</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Appliances.Support.Status? Status { get; set; }
        /// <summary>Version of the Appliance</summary>
        string Version { get; set; }

    }
}