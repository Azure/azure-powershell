
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Validate the cluster create request spec is valid or not.
.Description
Validate the cluster create request spec is valid or not.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterCreateRequestValidationParameters
.Inputs
Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.IHdInsightIdentity
.Outputs
Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterCreateValidationResult
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

COMPUTEPROFILEROLE <IRole[]>: The list of roles in the cluster.
  [CapacityMaxInstanceCount <Int32?>]: The maximum instance count of the cluster
  [CapacityMinInstanceCount <Int32?>]: The minimum instance count of the cluster
  [DataDisksGroup <IDataDisksGroups[]>]: The data disks groups for the role.
    [DisksPerNode <Int32?>]: The number of disks per node.
  [EncryptDataDisk <Boolean?>]: Indicates whether encrypt the data disks.
  [HardwareProfileVMSize <String>]: The size of the VM
  [LinuxOperatingSystemProfilePassword <String>]: The password.
  [LinuxOperatingSystemProfileUsername <String>]: The username.
  [MinInstanceCount <Int32?>]: The minimum instance count of the cluster.
  [Name <String>]: The name of the role.
  [RecurrenceSchedule <IAutoscaleSchedule[]>]: Array of schedule-based autoscale rules
    [Day <DaysOfWeek[]>]: Days of the week for a schedule-based autoscale rule
    [TimeAndCapacityMaxInstanceCount <Int32?>]: The maximum instance count of the cluster
    [TimeAndCapacityMinInstanceCount <Int32?>]: The minimum instance count of the cluster
    [TimeAndCapacityTime <String>]: 24-hour time in the form xx:xx
  [RecurrenceTimeZone <String>]: The time zone for the autoscale schedule times
  [ScriptAction <IScriptAction[]>]: The list of script actions on the role.
    Name <String>: The name of the script action.
    Parameter <String>: The parameters for the script provided.
    Uri <String>: The URI to the script.
  [SshProfilePublicKey <ISshPublicKey[]>]: The list of SSH public keys.
    [CertificateData <String>]: The certificate for SSH.
  [TargetInstanceCount <Int32?>]: The instance count of the cluster.
  [VMGroupName <String>]: The name of the virtual machine group.
  [VirtualNetworkProfileId <String>]: The ID of the virtual network.
  [VirtualNetworkProfileSubnet <String>]: The name of the subnet.

INPUTOBJECT <IHdInsightIdentity>: Identity Parameter
  [ApplicationName <String>]: The constant value for the application name.
  [ClusterName <String>]: The name of the cluster.
  [ConfigurationName <String>]: The name of the cluster configuration.
  [ExtensionName <String>]: The name of the cluster extension.
  [Id <String>]: Resource identity path
  [Location <String>]: The Azure location (region) for which to make the request.
  [OperationId <String>]: The long running operation id.
  [PrivateEndpointConnectionName <String>]: The name of the private endpoint connection.
  [PrivateLinkResourceName <String>]: The name of the private link resource.
  [ResourceGroupName <String>]: The name of the resource group.
  [RoleName <RoleName?>]: The constant value for the roleName
  [ScriptExecutionId <String>]: The script execution Id
  [ScriptName <String>]: The name of the script.
  [SubscriptionId <String>]: The subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.

PARAMETER <IClusterCreateRequestValidationParameters>: The cluster create request specification.
  [ClientGroupInfoGroupId <String>]: The AAD security group id.
  [ClientGroupInfoGroupName <String>]: The AAD security group name.
  [ClusterDefinitionBlueprint <String>]: The link to the blueprint.
  [ClusterDefinitionComponentVersion <IClusterDefinitionComponentVersion>]: The versions of different services in the cluster.
    [(Any) <String>]: This indicates any property can be added to this object.
  [ClusterDefinitionConfiguration <IAny>]: The cluster configurations.
  [ClusterDefinitionKind <String>]: The type of cluster.
  [ClusterVersion <String>]: The version of the cluster.
  [ComputeIsolationPropertyEnableComputeIsolation <Boolean?>]: The flag indicates whether enable compute isolation or not.
  [ComputeIsolationPropertyHostSku <String>]: The host sku.
  [ComputeProfileRole <IRole[]>]: The list of roles in the cluster.
    [CapacityMaxInstanceCount <Int32?>]: The maximum instance count of the cluster
    [CapacityMinInstanceCount <Int32?>]: The minimum instance count of the cluster
    [DataDisksGroup <IDataDisksGroups[]>]: The data disks groups for the role.
      [DisksPerNode <Int32?>]: The number of disks per node.
    [EncryptDataDisk <Boolean?>]: Indicates whether encrypt the data disks.
    [HardwareProfileVMSize <String>]: The size of the VM
    [LinuxOperatingSystemProfilePassword <String>]: The password.
    [LinuxOperatingSystemProfileUsername <String>]: The username.
    [MinInstanceCount <Int32?>]: The minimum instance count of the cluster.
    [Name <String>]: The name of the role.
    [RecurrenceSchedule <IAutoscaleSchedule[]>]: Array of schedule-based autoscale rules
      [Day <DaysOfWeek[]>]: Days of the week for a schedule-based autoscale rule
      [TimeAndCapacityMaxInstanceCount <Int32?>]: The maximum instance count of the cluster
      [TimeAndCapacityMinInstanceCount <Int32?>]: The minimum instance count of the cluster
      [TimeAndCapacityTime <String>]: 24-hour time in the form xx:xx
    [RecurrenceTimeZone <String>]: The time zone for the autoscale schedule times
    [ScriptAction <IScriptAction[]>]: The list of script actions on the role.
      Name <String>: The name of the script action.
      Parameter <String>: The parameters for the script provided.
      Uri <String>: The URI to the script.
    [SshProfilePublicKey <ISshPublicKey[]>]: The list of SSH public keys.
      [CertificateData <String>]: The certificate for SSH.
    [TargetInstanceCount <Int32?>]: The instance count of the cluster.
    [VMGroupName <String>]: The name of the virtual machine group.
    [VirtualNetworkProfileId <String>]: The ID of the virtual network.
    [VirtualNetworkProfileSubnet <String>]: The name of the subnet.
  [DiskEncryptionPropertyEncryptionAlgorithm <JsonWebKeyEncryptionAlgorithm?>]: Algorithm identifier for encryption, default RSA-OAEP.
  [DiskEncryptionPropertyEncryptionAtHost <Boolean?>]: Indicates whether or not resource disk encryption is enabled.
  [DiskEncryptionPropertyKeyName <String>]: Key name that is used for enabling disk encryption.
  [DiskEncryptionPropertyKeyVersion <String>]: Specific key version that is used for enabling disk encryption.
  [DiskEncryptionPropertyMsiResourceId <String>]: Resource ID of Managed Identity that is used to access the key vault.
  [DiskEncryptionPropertyVaultUri <String>]: Base key vault URI where the customers key is located eg. https://myvault.vault.azure.net
  [EncryptionInTransitPropertyIsEncryptionInTransitEnabled <Boolean?>]: Indicates whether or not inter cluster node communication is encrypted in transit.
  [IdentityType <ResourceIdentityType?>]: The type of identity used for the cluster. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities.
  [IdentityUserAssignedIdentity <IClusterIdentityUserAssignedIdentities>]: The list of user identities associated with the cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
    [(Any) <IUserAssignedIdentity>]: This indicates any property can be added to this object.
  [KafkaRestPropertyConfigurationOverride <IKafkaRestPropertiesConfigurationOverride>]: The configurations that need to be overriden.
    [(Any) <String>]: This indicates any property can be added to this object.
  [Location <String>]: The location of the cluster.
  [MinSupportedTlsVersion <String>]: The minimal supported tls version.
  [NetworkPropertyPrivateLink <PrivateLink?>]: Indicates whether or not private link is enabled.
  [NetworkPropertyResourceProviderConnection <ResourceProviderConnection?>]: The direction for the resource provider connection.
  [OSType <OSType?>]: The type of operating system.
  [PrivateLinkConfiguration <IPrivateLinkConfiguration[]>]: The private link configurations.
    GroupId <String>: The HDInsight private linkable sub-resource name to apply the private link configuration to. For example, 'headnode', 'gateway', 'edgenode'.
    IPConfiguration <IIPConfiguration[]>: The IP configurations for the private link service.
      Name <String>: The name of private link IP configuration.
      [Primary <Boolean?>]: Indicates whether this IP configuration is primary for the corresponding NIC.
      [PrivateIPAddress <String>]: The IP address.
      [PrivateIPAllocationMethod <PrivateIPAllocationMethod?>]: The method that private IP address is allocated.
      [SubnetId <String>]: The azure resource id.
    Name <String>: The name of private link configuration.
  [SecurityProfileAaddsResourceId <String>]: The resource ID of the user's Azure Active Directory Domain Service.
  [SecurityProfileClusterUsersGroupDN <String[]>]: Optional. The Distinguished Names for cluster user groups
  [SecurityProfileDirectoryType <DirectoryType?>]: The directory type.
  [SecurityProfileDomain <String>]: The organization's active directory domain.
  [SecurityProfileDomainUserPassword <SecureString>]: The domain admin password.
  [SecurityProfileDomainUsername <String>]: The domain user account that will have admin privileges on the cluster.
  [SecurityProfileLdapsUrl <String[]>]: The LDAPS protocol URLs to communicate with the Active Directory.
  [SecurityProfileMsiResourceId <String>]: User assigned identity that has permissions to read and create cluster-related artifacts in the user's AADDS.
  [SecurityProfileOrganizationalUnitDn <String>]: The organizational unit within the Active Directory to place the cluster and service accounts.
  [StorageProfileStorageaccount <IStorageAccount[]>]: The list of storage accounts in the cluster.
    [Container <String>]: The container in the storage account, only to be specified for WASB storage accounts.
    [FileSystem <String>]: The filesystem, only to be specified for Azure Data Lake Storage Gen 2.
    [Fileshare <String>]: The file share name.
    [IsDefault <Boolean?>]: Whether or not the storage account is the default storage account.
    [Key <String>]: The storage account access key.
    [MsiResourceId <String>]: The managed identity (MSI) that is allowed to access the storage account, only to be specified for Azure Data Lake Storage Gen 2.
    [Name <String>]: The name of the storage account.
    [ResourceId <String>]: The resource ID of storage account, only to be specified for Azure Data Lake Storage Gen 2.
    [Saskey <String>]: The shared access signature key.
  [Tag <IClusterCreateParametersExtendedTags>]: The resource tags.
    [(Any) <String>]: This indicates any property can be added to this object.
  [Tier <Tier?>]: The cluster tier.
  [Zone <String[]>]: The availability zones.
  [FetchAaddsResource <Boolean?>]: This indicates whether fetch Aadds resource or not.
  [Name <String>]: The cluster name.
  [TenantId <String>]: The tenant id.
  [Type <String>]: The resource type.

PRIVATELINKCONFIGURATION <IPrivateLinkConfiguration[]>: The private link configurations.
  GroupId <String>: The HDInsight private linkable sub-resource name to apply the private link configuration to. For example, 'headnode', 'gateway', 'edgenode'.
  IPConfiguration <IIPConfiguration[]>: The IP configurations for the private link service.
    Name <String>: The name of private link IP configuration.
    [Primary <Boolean?>]: Indicates whether this IP configuration is primary for the corresponding NIC.
    [PrivateIPAddress <String>]: The IP address.
    [PrivateIPAllocationMethod <PrivateIPAllocationMethod?>]: The method that private IP address is allocated.
    [SubnetId <String>]: The azure resource id.
  Name <String>: The name of private link configuration.

STORAGEPROFILESTORAGEACCOUNT <IStorageAccount[]>: The list of storage accounts in the cluster.
  [Container <String>]: The container in the storage account, only to be specified for WASB storage accounts.
  [FileSystem <String>]: The filesystem, only to be specified for Azure Data Lake Storage Gen 2.
  [Fileshare <String>]: The file share name.
  [IsDefault <Boolean?>]: Whether or not the storage account is the default storage account.
  [Key <String>]: The storage account access key.
  [MsiResourceId <String>]: The managed identity (MSI) that is allowed to access the storage account, only to be specified for Azure Data Lake Storage Gen 2.
  [Name <String>]: The name of the storage account.
  [ResourceId <String>]: The resource ID of storage account, only to be specified for Azure Data Lake Storage Gen 2.
  [Saskey <String>]: The shared access signature key.
.Link
https://docs.microsoft.com/en-us/powershell/module/az.hdinsight/test-azhdinsightlocationclustercreaterequest
#>
function Test-AzHdInsightLocationClusterCreateRequest {
[OutputType([Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterCreateValidationResult])]
[CmdletBinding(DefaultParameterSetName='ValidateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Validate', Mandatory)]
    [Parameter(ParameterSetName='ValidateExpanded', Mandatory)]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Path')]
    [System.String]
    # The Azure location (region) for which to make the request.
    ${Location},

    [Parameter(ParameterSetName='Validate')]
    [Parameter(ParameterSetName='ValidateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.DefaultInfo(Script='(Get-AzContext).Subscription.Id')]
    [System.String]
    # The subscription credentials which uniquely identify Microsoft Azure subscription.
    # The subscription ID forms part of the URI for every service call.
    ${SubscriptionId},

    [Parameter(ParameterSetName='ValidateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.IHdInsightIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Validate', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='ValidateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterCreateRequestValidationParameters]
    # The cluster create request specification.
    # To construct, see NOTES section for PARAMETER properties and create a hash table.
    ${Parameter},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [System.String]
    # The AAD security group id.
    ${ClientGroupInfoGroupId},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [System.String]
    # The AAD security group name.
    ${ClientGroupInfoGroupName},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [System.String]
    # The link to the blueprint.
    ${ClusterDefinitionBlueprint},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(PossibleTypes=([Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterDefinitionComponentVersion]))]
    [System.Collections.Hashtable]
    # The versions of different services in the cluster.
    ${ClusterDefinitionComponentVersion},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.IAny]
    # The cluster configurations.
    ${ClusterDefinitionConfiguration},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [System.String]
    # The type of cluster.
    ${ClusterDefinitionKind},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [System.String]
    # The version of the cluster.
    ${ClusterVersion},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # The flag indicates whether enable compute isolation or not.
    ${ComputeIsolationPropertyEnableComputeIsolation},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [System.String]
    # The host sku.
    ${ComputeIsolationPropertyHostSku},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRole[]]
    # The list of roles in the cluster.
    # To construct, see NOTES section for COMPUTEPROFILEROLE properties and create a hash table.
    ${ComputeProfileRole},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.JsonWebKeyEncryptionAlgorithm])]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.JsonWebKeyEncryptionAlgorithm]
    # Algorithm identifier for encryption, default RSA-OAEP.
    ${DiskEncryptionPropertyEncryptionAlgorithm},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether or not resource disk encryption is enabled.
    ${DiskEncryptionPropertyEncryptionAtHost},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [System.String]
    # Key name that is used for enabling disk encryption.
    ${DiskEncryptionPropertyKeyName},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [System.String]
    # Specific key version that is used for enabling disk encryption.
    ${DiskEncryptionPropertyKeyVersion},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [System.String]
    # Resource ID of Managed Identity that is used to access the key vault.
    ${DiskEncryptionPropertyMsiResourceId},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [System.String]
    # Base key vault URI where the customers key is located eg.
    # https://myvault.vault.azure.net
    ${DiskEncryptionPropertyVaultUri},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether or not inter cluster node communication is encrypted in transit.
    ${EncryptionInTransitPropertyIsEncryptionInTransitEnabled},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # This indicates whether fetch Aadds resource or not.
    ${FetchAaddsResource},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.ResourceIdentityType])]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.ResourceIdentityType]
    # The type of identity used for the cluster.
    # The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities.
    ${IdentityType},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(PossibleTypes=([Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterIdentityUserAssignedIdentities]))]
    [System.Collections.Hashtable]
    # The list of user identities associated with the cluster.
    # The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
    ${IdentityUserAssignedIdentity},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(PossibleTypes=([Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IKafkaRestPropertiesConfigurationOverride]))]
    [System.Collections.Hashtable]
    # The configurations that need to be overriden.
    ${KafkaRestPropertyConfigurationOverride},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [System.String]
    # The location of the cluster.
    ${Location1},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [System.String]
    # The minimal supported tls version.
    ${MinSupportedTlsVersion},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [System.String]
    # The cluster name.
    ${Name},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.PrivateLink])]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.PrivateLink]
    # Indicates whether or not private link is enabled.
    ${NetworkPropertyPrivateLink},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.ResourceProviderConnection])]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.ResourceProviderConnection]
    # The direction for the resource provider connection.
    ${NetworkPropertyResourceProviderConnection},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.OSType])]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.OSType]
    # The type of operating system.
    ${OSType},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IPrivateLinkConfiguration[]]
    # The private link configurations.
    # To construct, see NOTES section for PRIVATELINKCONFIGURATION properties and create a hash table.
    ${PrivateLinkConfiguration},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [System.String]
    # The resource ID of the user's Azure Active Directory Domain Service.
    ${SecurityProfileAaddsResourceId},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [System.String[]]
    # Optional.
    # The Distinguished Names for cluster user groups
    ${SecurityProfileClusterUsersGroupDN},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.DirectoryType])]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.DirectoryType]
    # The directory type.
    ${SecurityProfileDirectoryType},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [System.String]
    # The organization's active directory domain.
    ${SecurityProfileDomain},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [System.Security.SecureString]
    # The domain admin password.
    ${SecurityProfileDomainUserPassword},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [System.String]
    # The domain user account that will have admin privileges on the cluster.
    ${SecurityProfileDomainUsername},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [System.String[]]
    # The LDAPS protocol URLs to communicate with the Active Directory.
    ${SecurityProfileLdapsUrl},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [System.String]
    # User assigned identity that has permissions to read and create cluster-related artifacts in the user's AADDS.
    ${SecurityProfileMsiResourceId},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [System.String]
    # The organizational unit within the Active Directory to place the cluster and service accounts.
    ${SecurityProfileOrganizationalUnitDn},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IStorageAccount[]]
    # The list of storage accounts in the cluster.
    # To construct, see NOTES section for STORAGEPROFILESTORAGEACCOUNT properties and create a hash table.
    ${StorageProfileStorageaccount},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(PossibleTypes=([Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterCreateParametersExtendedTags]))]
    [System.Collections.Hashtable]
    # The resource tags.
    ${Tag},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [System.String]
    # The tenant id.
    ${TenantId},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.Tier])]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.Tier]
    # The cluster tier.
    ${Tier},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [System.String]
    # The resource type.
    ${Type},

    [Parameter(ParameterSetName='ValidateExpanded')]
    [Parameter(ParameterSetName='ValidateViaIdentityExpanded')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Body')]
    [System.String[]]
    # The availability zones.
    ${Zone},

    [Parameter()]
    [Alias('AzureRMContext', 'AzureCredential')]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Azure')]
    [System.Management.Automation.PSObject]
    # The credentials, account, tenant, and subscription used for communication with Azure.
    ${DefaultProfile},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        if ($null -eq [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion) {
            [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion = $Host.Version.ToString()
        }         
        $preTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        if ($preTelemetryId -eq '') {
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId =(New-Guid).ToString()
            [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.module]::Instance.Telemetry.Invoke('Create', $MyInvocation, $parameterSet, $PSCmdlet)
        } else {
            $internalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
            if ($internalCalledCmdlets -eq '') {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $MyInvocation.MyCommand.Name
            } else {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets += ',' + $MyInvocation.MyCommand.Name
            }
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = 'internal'
        }

        $mapping = @{
            Validate = 'Az.HdInsight.private\Test-AzHdInsightLocationClusterCreateRequest_Validate';
            ValidateExpanded = 'Az.HdInsight.private\Test-AzHdInsightLocationClusterCreateRequest_ValidateExpanded';
            ValidateViaIdentity = 'Az.HdInsight.private\Test-AzHdInsightLocationClusterCreateRequest_ValidateViaIdentity';
            ValidateViaIdentityExpanded = 'Az.HdInsight.private\Test-AzHdInsightLocationClusterCreateRequest_ValidateViaIdentityExpanded';
        }
        if (('Validate', 'ValidateExpanded') -contains $parameterSet -and -not $PSBoundParameters.ContainsKey('SubscriptionId')) {
            $PSBoundParameters['SubscriptionId'] = (Get-AzContext).Subscription.Id
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }

    finally {
        $backupTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        $backupInternalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
    }

}
end {
    try {
        $steppablePipeline.End()

        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $backupTelemetryId
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $backupInternalCalledCmdlets
        if ($preTelemetryId -eq '') {
            [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.module]::Instance.Telemetry.Invoke('Send', $MyInvocation, $parameterSet, $PSCmdlet)
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        }
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $preTelemetryId

    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
} 
}
