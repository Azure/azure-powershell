// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Extensions;

    /// <summary>The disk encryption properties</summary>
    public partial class DiskEncryptionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IDiskEncryptionProperties,
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IDiskEncryptionPropertiesInternal
    {

        /// <summary>Backing field for <see cref="EncryptionAlgorithm" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.JsonWebKeyEncryptionAlgorithm? _encryptionAlgorithm;

        /// <summary>Algorithm identifier for encryption, default RSA-OAEP.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.JsonWebKeyEncryptionAlgorithm? EncryptionAlgorithm { get => this._encryptionAlgorithm; set => this._encryptionAlgorithm = value; }

        /// <summary>Backing field for <see cref="EncryptionAtHost" /> property.</summary>
        private bool? _encryptionAtHost;

        /// <summary>Indicates whether or not resource disk encryption is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public bool? EncryptionAtHost { get => this._encryptionAtHost; set => this._encryptionAtHost = value; }

        /// <summary>Backing field for <see cref="KeyName" /> property.</summary>
        private string _keyName;

        /// <summary>Key name that is used for enabling disk encryption.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string KeyName { get => this._keyName; set => this._keyName = value; }

        /// <summary>Backing field for <see cref="KeyVersion" /> property.</summary>
        private string _keyVersion;

        /// <summary>Specific key version that is used for enabling disk encryption.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string KeyVersion { get => this._keyVersion; set => this._keyVersion = value; }

        /// <summary>Backing field for <see cref="MsiResourceId" /> property.</summary>
        private string _msiResourceId;

        /// <summary>Resource ID of Managed Identity that is used to access the key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string MsiResourceId { get => this._msiResourceId; set => this._msiResourceId = value; }

        /// <summary>Backing field for <see cref="VaultUri" /> property.</summary>
        private string _vaultUri;

        /// <summary>
        /// Base key vault URI where the customers key is located eg. https://myvault.vault.azure.net
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string VaultUri { get => this._vaultUri; set => this._vaultUri = value; }

        /// <summary>Creates an new <see cref="DiskEncryptionProperties" /> instance.</summary>
        public DiskEncryptionProperties()
        {

        }
    }
    /// The disk encryption properties
    public partial interface IDiskEncryptionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.IJsonSerializable
    {
        /// <summary>Algorithm identifier for encryption, default RSA-OAEP.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Algorithm identifier for encryption, default RSA-OAEP.",
        SerializedName = @"encryptionAlgorithm",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.JsonWebKeyEncryptionAlgorithm) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.JsonWebKeyEncryptionAlgorithm? EncryptionAlgorithm { get; set; }
        /// <summary>Indicates whether or not resource disk encryption is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether or not resource disk encryption is enabled.",
        SerializedName = @"encryptionAtHost",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EncryptionAtHost { get; set; }
        /// <summary>Key name that is used for enabling disk encryption.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key name that is used for enabling disk encryption.",
        SerializedName = @"keyName",
        PossibleTypes = new [] { typeof(string) })]
        string KeyName { get; set; }
        /// <summary>Specific key version that is used for enabling disk encryption.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specific key version that is used for enabling disk encryption.",
        SerializedName = @"keyVersion",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVersion { get; set; }
        /// <summary>Resource ID of Managed Identity that is used to access the key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of Managed Identity that is used to access the key vault.",
        SerializedName = @"msiResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string MsiResourceId { get; set; }
        /// <summary>
        /// Base key vault URI where the customers key is located eg. https://myvault.vault.azure.net
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Base key vault URI where the customers key is located eg. https://myvault.vault.azure.net",
        SerializedName = @"vaultUri",
        PossibleTypes = new [] { typeof(string) })]
        string VaultUri { get; set; }

    }
    /// The disk encryption properties
    internal partial interface IDiskEncryptionPropertiesInternal

    {
        /// <summary>Algorithm identifier for encryption, default RSA-OAEP.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.JsonWebKeyEncryptionAlgorithm? EncryptionAlgorithm { get; set; }
        /// <summary>Indicates whether or not resource disk encryption is enabled.</summary>
        bool? EncryptionAtHost { get; set; }
        /// <summary>Key name that is used for enabling disk encryption.</summary>
        string KeyName { get; set; }
        /// <summary>Specific key version that is used for enabling disk encryption.</summary>
        string KeyVersion { get; set; }
        /// <summary>Resource ID of Managed Identity that is used to access the key vault.</summary>
        string MsiResourceId { get; set; }
        /// <summary>
        /// Base key vault URI where the customers key is located eg. https://myvault.vault.azure.net
        /// </summary>
        string VaultUri { get; set; }

    }
}