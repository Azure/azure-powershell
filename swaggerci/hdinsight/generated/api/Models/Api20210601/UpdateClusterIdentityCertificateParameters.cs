// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Extensions;

    /// <summary>The update cluster identity certificate request parameters.</summary>
    public partial class UpdateClusterIdentityCertificateParameters :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IUpdateClusterIdentityCertificateParameters,
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IUpdateClusterIdentityCertificateParametersInternal
    {

        /// <summary>Backing field for <see cref="ApplicationId" /> property.</summary>
        private string _applicationId;

        /// <summary>The application id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string ApplicationId { get => this._applicationId; set => this._applicationId = value; }

        /// <summary>Backing field for <see cref="Certificate" /> property.</summary>
        private string _certificate;

        /// <summary>The certificate in base64 encoded format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string Certificate { get => this._certificate; set => this._certificate = value; }

        /// <summary>Backing field for <see cref="CertificatePassword" /> property.</summary>
        private string _certificatePassword;

        /// <summary>The password of the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string CertificatePassword { get => this._certificatePassword; set => this._certificatePassword = value; }

        /// <summary>
        /// Creates an new <see cref="UpdateClusterIdentityCertificateParameters" /> instance.
        /// </summary>
        public UpdateClusterIdentityCertificateParameters()
        {

        }
    }
    /// The update cluster identity certificate request parameters.
    public partial interface IUpdateClusterIdentityCertificateParameters :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.IJsonSerializable
    {
        /// <summary>The application id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The application id.",
        SerializedName = @"applicationId",
        PossibleTypes = new [] { typeof(string) })]
        string ApplicationId { get; set; }
        /// <summary>The certificate in base64 encoded format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The certificate in base64 encoded format.",
        SerializedName = @"certificate",
        PossibleTypes = new [] { typeof(string) })]
        string Certificate { get; set; }
        /// <summary>The password of the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The password of the certificate.",
        SerializedName = @"certificatePassword",
        PossibleTypes = new [] { typeof(string) })]
        string CertificatePassword { get; set; }

    }
    /// The update cluster identity certificate request parameters.
    internal partial interface IUpdateClusterIdentityCertificateParametersInternal

    {
        /// <summary>The application id.</summary>
        string ApplicationId { get; set; }
        /// <summary>The certificate in base64 encoded format.</summary>
        string Certificate { get; set; }
        /// <summary>The password of the certificate.</summary>
        string CertificatePassword { get; set; }

    }
}