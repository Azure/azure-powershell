// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601
{
    using Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.PowerShell;

    /// <summary>Describes a role on the cluster.</summary>
    [System.ComponentModel.TypeConverter(typeof(RoleTypeConverter))]
    public partial class Role
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.Role"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRole" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRole DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new Role(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.Role"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRole" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRole DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new Role(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="Role" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="Role" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRole FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.Role"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal Role(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("AutoscaleConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).AutoscaleConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IAutoscale) content.GetValueForProperty("AutoscaleConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).AutoscaleConfiguration, Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.AutoscaleTypeConverter.ConvertFrom);
            }
            if (content.Contains("HardwareProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).HardwareProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IHardwareProfile) content.GetValueForProperty("HardwareProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).HardwareProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.HardwareProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("OSProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).OSProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IOSProfile) content.GetValueForProperty("OSProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).OSProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.OSProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualNetworkProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).VirtualNetworkProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IVirtualNetworkProfile) content.GetValueForProperty("VirtualNetworkProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).VirtualNetworkProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.VirtualNetworkProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("MinInstanceCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).MinInstanceCount = (int?) content.GetValueForProperty("MinInstanceCount",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).MinInstanceCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("TargetInstanceCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).TargetInstanceCount = (int?) content.GetValueForProperty("TargetInstanceCount",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).TargetInstanceCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("VMGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).VMGroupName = (string) content.GetValueForProperty("VMGroupName",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).VMGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("DataDisksGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).DataDisksGroup = (Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IDataDisksGroups[]) content.GetValueForProperty("DataDisksGroup",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).DataDisksGroup, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IDataDisksGroups>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.DataDisksGroupsTypeConverter.ConvertFrom));
            }
            if (content.Contains("ScriptAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).ScriptAction = (Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IScriptAction[]) content.GetValueForProperty("ScriptAction",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).ScriptAction, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IScriptAction>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ScriptActionTypeConverter.ConvertFrom));
            }
            if (content.Contains("EncryptDataDisk"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).EncryptDataDisk = (bool?) content.GetValueForProperty("EncryptDataDisk",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).EncryptDataDisk, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("HardwareProfileVMSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).HardwareProfileVMSize = (string) content.GetValueForProperty("HardwareProfileVMSize",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).HardwareProfileVMSize, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualNetworkProfileId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).VirtualNetworkProfileId = (string) content.GetValueForProperty("VirtualNetworkProfileId",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).VirtualNetworkProfileId, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualNetworkProfileSubnet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).VirtualNetworkProfileSubnet = (string) content.GetValueForProperty("VirtualNetworkProfileSubnet",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).VirtualNetworkProfileSubnet, global::System.Convert.ToString);
            }
            if (content.Contains("AutoscaleConfigurationCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).AutoscaleConfigurationCapacity = (Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IAutoscaleCapacity) content.GetValueForProperty("AutoscaleConfigurationCapacity",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).AutoscaleConfigurationCapacity, Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.AutoscaleCapacityTypeConverter.ConvertFrom);
            }
            if (content.Contains("AutoscaleConfigurationRecurrence"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).AutoscaleConfigurationRecurrence = (Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IAutoscaleRecurrence) content.GetValueForProperty("AutoscaleConfigurationRecurrence",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).AutoscaleConfigurationRecurrence, Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.AutoscaleRecurrenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("OSProfileLinuxOperatingSystemProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).OSProfileLinuxOperatingSystemProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ILinuxOperatingSystemProfile) content.GetValueForProperty("OSProfileLinuxOperatingSystemProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).OSProfileLinuxOperatingSystemProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.LinuxOperatingSystemProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinuxOperatingSystemProfileSshProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).LinuxOperatingSystemProfileSshProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISshProfile) content.GetValueForProperty("LinuxOperatingSystemProfileSshProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).LinuxOperatingSystemProfileSshProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.SshProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinuxOperatingSystemProfileUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).LinuxOperatingSystemProfileUsername = (string) content.GetValueForProperty("LinuxOperatingSystemProfileUsername",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).LinuxOperatingSystemProfileUsername, global::System.Convert.ToString);
            }
            if (content.Contains("LinuxOperatingSystemProfilePassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).LinuxOperatingSystemProfilePassword = (string) content.GetValueForProperty("LinuxOperatingSystemProfilePassword",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).LinuxOperatingSystemProfilePassword, global::System.Convert.ToString);
            }
            if (content.Contains("CapacityMinInstanceCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).CapacityMinInstanceCount = (int?) content.GetValueForProperty("CapacityMinInstanceCount",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).CapacityMinInstanceCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CapacityMaxInstanceCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).CapacityMaxInstanceCount = (int?) content.GetValueForProperty("CapacityMaxInstanceCount",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).CapacityMaxInstanceCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RecurrenceTimeZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).RecurrenceTimeZone = (string) content.GetValueForProperty("RecurrenceTimeZone",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).RecurrenceTimeZone, global::System.Convert.ToString);
            }
            if (content.Contains("RecurrenceSchedule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).RecurrenceSchedule = (Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IAutoscaleSchedule[]) content.GetValueForProperty("RecurrenceSchedule",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).RecurrenceSchedule, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IAutoscaleSchedule>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.AutoscaleScheduleTypeConverter.ConvertFrom));
            }
            if (content.Contains("SshProfilePublicKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).SshProfilePublicKey = (Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISshPublicKey[]) content.GetValueForProperty("SshProfilePublicKey",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).SshProfilePublicKey, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISshPublicKey>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.SshPublicKeyTypeConverter.ConvertFrom));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.Role"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal Role(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("AutoscaleConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).AutoscaleConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IAutoscale) content.GetValueForProperty("AutoscaleConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).AutoscaleConfiguration, Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.AutoscaleTypeConverter.ConvertFrom);
            }
            if (content.Contains("HardwareProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).HardwareProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IHardwareProfile) content.GetValueForProperty("HardwareProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).HardwareProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.HardwareProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("OSProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).OSProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IOSProfile) content.GetValueForProperty("OSProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).OSProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.OSProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualNetworkProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).VirtualNetworkProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IVirtualNetworkProfile) content.GetValueForProperty("VirtualNetworkProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).VirtualNetworkProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.VirtualNetworkProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("MinInstanceCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).MinInstanceCount = (int?) content.GetValueForProperty("MinInstanceCount",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).MinInstanceCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("TargetInstanceCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).TargetInstanceCount = (int?) content.GetValueForProperty("TargetInstanceCount",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).TargetInstanceCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("VMGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).VMGroupName = (string) content.GetValueForProperty("VMGroupName",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).VMGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("DataDisksGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).DataDisksGroup = (Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IDataDisksGroups[]) content.GetValueForProperty("DataDisksGroup",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).DataDisksGroup, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IDataDisksGroups>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.DataDisksGroupsTypeConverter.ConvertFrom));
            }
            if (content.Contains("ScriptAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).ScriptAction = (Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IScriptAction[]) content.GetValueForProperty("ScriptAction",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).ScriptAction, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IScriptAction>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ScriptActionTypeConverter.ConvertFrom));
            }
            if (content.Contains("EncryptDataDisk"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).EncryptDataDisk = (bool?) content.GetValueForProperty("EncryptDataDisk",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).EncryptDataDisk, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("HardwareProfileVMSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).HardwareProfileVMSize = (string) content.GetValueForProperty("HardwareProfileVMSize",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).HardwareProfileVMSize, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualNetworkProfileId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).VirtualNetworkProfileId = (string) content.GetValueForProperty("VirtualNetworkProfileId",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).VirtualNetworkProfileId, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualNetworkProfileSubnet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).VirtualNetworkProfileSubnet = (string) content.GetValueForProperty("VirtualNetworkProfileSubnet",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).VirtualNetworkProfileSubnet, global::System.Convert.ToString);
            }
            if (content.Contains("AutoscaleConfigurationCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).AutoscaleConfigurationCapacity = (Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IAutoscaleCapacity) content.GetValueForProperty("AutoscaleConfigurationCapacity",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).AutoscaleConfigurationCapacity, Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.AutoscaleCapacityTypeConverter.ConvertFrom);
            }
            if (content.Contains("AutoscaleConfigurationRecurrence"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).AutoscaleConfigurationRecurrence = (Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IAutoscaleRecurrence) content.GetValueForProperty("AutoscaleConfigurationRecurrence",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).AutoscaleConfigurationRecurrence, Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.AutoscaleRecurrenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("OSProfileLinuxOperatingSystemProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).OSProfileLinuxOperatingSystemProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ILinuxOperatingSystemProfile) content.GetValueForProperty("OSProfileLinuxOperatingSystemProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).OSProfileLinuxOperatingSystemProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.LinuxOperatingSystemProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinuxOperatingSystemProfileSshProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).LinuxOperatingSystemProfileSshProfile = (Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISshProfile) content.GetValueForProperty("LinuxOperatingSystemProfileSshProfile",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).LinuxOperatingSystemProfileSshProfile, Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.SshProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinuxOperatingSystemProfileUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).LinuxOperatingSystemProfileUsername = (string) content.GetValueForProperty("LinuxOperatingSystemProfileUsername",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).LinuxOperatingSystemProfileUsername, global::System.Convert.ToString);
            }
            if (content.Contains("LinuxOperatingSystemProfilePassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).LinuxOperatingSystemProfilePassword = (string) content.GetValueForProperty("LinuxOperatingSystemProfilePassword",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).LinuxOperatingSystemProfilePassword, global::System.Convert.ToString);
            }
            if (content.Contains("CapacityMinInstanceCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).CapacityMinInstanceCount = (int?) content.GetValueForProperty("CapacityMinInstanceCount",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).CapacityMinInstanceCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CapacityMaxInstanceCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).CapacityMaxInstanceCount = (int?) content.GetValueForProperty("CapacityMaxInstanceCount",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).CapacityMaxInstanceCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RecurrenceTimeZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).RecurrenceTimeZone = (string) content.GetValueForProperty("RecurrenceTimeZone",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).RecurrenceTimeZone, global::System.Convert.ToString);
            }
            if (content.Contains("RecurrenceSchedule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).RecurrenceSchedule = (Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IAutoscaleSchedule[]) content.GetValueForProperty("RecurrenceSchedule",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).RecurrenceSchedule, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IAutoscaleSchedule>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.AutoscaleScheduleTypeConverter.ConvertFrom));
            }
            if (content.Contains("SshProfilePublicKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).SshProfilePublicKey = (Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISshPublicKey[]) content.GetValueForProperty("SshProfilePublicKey",((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRoleInternal)this).SshProfilePublicKey, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISshPublicKey>(__y, Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.SshPublicKeyTypeConverter.ConvertFrom));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Describes a role on the cluster.
    [System.ComponentModel.TypeConverter(typeof(RoleTypeConverter))]
    public partial interface IRole

    {

    }
}