// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Extensions;

    /// <summary>The security profile which contains Ssh public key for the HDInsight cluster.</summary>
    public partial class SecurityProfile :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISecurityProfile,
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISecurityProfileInternal
    {

        /// <summary>Backing field for <see cref="AaddsResourceId" /> property.</summary>
        private string _aaddsResourceId;

        /// <summary>The resource ID of the user's Azure Active Directory Domain Service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string AaddsResourceId { get => this._aaddsResourceId; set => this._aaddsResourceId = value; }

        /// <summary>Backing field for <see cref="ClusterUsersGroupDN" /> property.</summary>
        private string[] _clusterUsersGroupDN;

        /// <summary>Optional. The Distinguished Names for cluster user groups</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string[] ClusterUsersGroupDN { get => this._clusterUsersGroupDN; set => this._clusterUsersGroupDN = value; }

        /// <summary>Backing field for <see cref="DirectoryType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.DirectoryType? _directoryType;

        /// <summary>The directory type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.DirectoryType? DirectoryType { get => this._directoryType; set => this._directoryType = value; }

        /// <summary>Backing field for <see cref="Domain" /> property.</summary>
        private string _domain;

        /// <summary>The organization's active directory domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string Domain { get => this._domain; set => this._domain = value; }

        /// <summary>Backing field for <see cref="DomainUserPassword" /> property.</summary>
        private System.Security.SecureString _domainUserPassword;

        /// <summary>The domain admin password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public System.Security.SecureString DomainUserPassword { get => this._domainUserPassword; set => this._domainUserPassword = value; }

        /// <summary>Backing field for <see cref="DomainUsername" /> property.</summary>
        private string _domainUsername;

        /// <summary>The domain user account that will have admin privileges on the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string DomainUsername { get => this._domainUsername; set => this._domainUsername = value; }

        /// <summary>Backing field for <see cref="LdapsUrl" /> property.</summary>
        private string[] _ldapsUrl;

        /// <summary>The LDAPS protocol URLs to communicate with the Active Directory.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string[] LdapsUrl { get => this._ldapsUrl; set => this._ldapsUrl = value; }

        /// <summary>Backing field for <see cref="MsiResourceId" /> property.</summary>
        private string _msiResourceId;

        /// <summary>
        /// User assigned identity that has permissions to read and create cluster-related artifacts in the user's AADDS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string MsiResourceId { get => this._msiResourceId; set => this._msiResourceId = value; }

        /// <summary>Backing field for <see cref="OrganizationalUnitDn" /> property.</summary>
        private string _organizationalUnitDn;

        /// <summary>
        /// The organizational unit within the Active Directory to place the cluster and service accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string OrganizationalUnitDn { get => this._organizationalUnitDn; set => this._organizationalUnitDn = value; }

        /// <summary>Creates an new <see cref="SecurityProfile" /> instance.</summary>
        public SecurityProfile()
        {

        }
    }
    /// The security profile which contains Ssh public key for the HDInsight cluster.
    public partial interface ISecurityProfile :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.IJsonSerializable
    {
        /// <summary>The resource ID of the user's Azure Active Directory Domain Service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the user's Azure Active Directory Domain Service.",
        SerializedName = @"aaddsResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string AaddsResourceId { get; set; }
        /// <summary>Optional. The Distinguished Names for cluster user groups</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional. The Distinguished Names for cluster user groups",
        SerializedName = @"clusterUsersGroupDNs",
        PossibleTypes = new [] { typeof(string) })]
        string[] ClusterUsersGroupDN { get; set; }
        /// <summary>The directory type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The directory type.",
        SerializedName = @"directoryType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.DirectoryType) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.DirectoryType? DirectoryType { get; set; }
        /// <summary>The organization's active directory domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The organization's active directory domain.",
        SerializedName = @"domain",
        PossibleTypes = new [] { typeof(string) })]
        string Domain { get; set; }
        /// <summary>The domain admin password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The domain admin password.",
        SerializedName = @"domainUserPassword",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString DomainUserPassword { get; set; }
        /// <summary>The domain user account that will have admin privileges on the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The domain user account that will have admin privileges on the cluster.",
        SerializedName = @"domainUsername",
        PossibleTypes = new [] { typeof(string) })]
        string DomainUsername { get; set; }
        /// <summary>The LDAPS protocol URLs to communicate with the Active Directory.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The LDAPS protocol URLs to communicate with the Active Directory.",
        SerializedName = @"ldapsUrls",
        PossibleTypes = new [] { typeof(string) })]
        string[] LdapsUrl { get; set; }
        /// <summary>
        /// User assigned identity that has permissions to read and create cluster-related artifacts in the user's AADDS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User assigned identity that has permissions to read and create cluster-related artifacts in the user's AADDS.",
        SerializedName = @"msiResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string MsiResourceId { get; set; }
        /// <summary>
        /// The organizational unit within the Active Directory to place the cluster and service accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The organizational unit within the Active Directory to place the cluster and service accounts.",
        SerializedName = @"organizationalUnitDN",
        PossibleTypes = new [] { typeof(string) })]
        string OrganizationalUnitDn { get; set; }

    }
    /// The security profile which contains Ssh public key for the HDInsight cluster.
    internal partial interface ISecurityProfileInternal

    {
        /// <summary>The resource ID of the user's Azure Active Directory Domain Service.</summary>
        string AaddsResourceId { get; set; }
        /// <summary>Optional. The Distinguished Names for cluster user groups</summary>
        string[] ClusterUsersGroupDN { get; set; }
        /// <summary>The directory type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.DirectoryType? DirectoryType { get; set; }
        /// <summary>The organization's active directory domain.</summary>
        string Domain { get; set; }
        /// <summary>The domain admin password.</summary>
        System.Security.SecureString DomainUserPassword { get; set; }
        /// <summary>The domain user account that will have admin privileges on the cluster.</summary>
        string DomainUsername { get; set; }
        /// <summary>The LDAPS protocol URLs to communicate with the Active Directory.</summary>
        string[] LdapsUrl { get; set; }
        /// <summary>
        /// User assigned identity that has permissions to read and create cluster-related artifacts in the user's AADDS.
        /// </summary>
        string MsiResourceId { get; set; }
        /// <summary>
        /// The organizational unit within the Active Directory to place the cluster and service accounts.
        /// </summary>
        string OrganizationalUnitDn { get; set; }

    }
}