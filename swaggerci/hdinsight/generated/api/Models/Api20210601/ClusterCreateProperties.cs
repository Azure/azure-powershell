// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Extensions;

    /// <summary>The cluster create parameters.</summary>
    public partial class ClusterCreateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterCreateProperties,
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterCreatePropertiesInternal
    {

        /// <summary>The AAD security group id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string ClientGroupInfoGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IKafkaRestPropertiesInternal)KafkaRestProperty).ClientGroupInfoGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IKafkaRestPropertiesInternal)KafkaRestProperty).ClientGroupInfoGroupId = value ?? null; }

        /// <summary>The AAD security group name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string ClientGroupInfoGroupName { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IKafkaRestPropertiesInternal)KafkaRestProperty).ClientGroupInfoGroupName; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IKafkaRestPropertiesInternal)KafkaRestProperty).ClientGroupInfoGroupName = value ?? null; }

        /// <summary>Backing field for <see cref="ClusterDefinition" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterDefinition _clusterDefinition;

        /// <summary>The cluster definition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterDefinition ClusterDefinition { get => (this._clusterDefinition = this._clusterDefinition ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ClusterDefinition()); set => this._clusterDefinition = value; }

        /// <summary>The link to the blueprint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string ClusterDefinitionBlueprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterDefinitionInternal)ClusterDefinition).Blueprint; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterDefinitionInternal)ClusterDefinition).Blueprint = value ?? null; }

        /// <summary>The versions of different services in the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterDefinitionComponentVersion ClusterDefinitionComponentVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterDefinitionInternal)ClusterDefinition).ComponentVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterDefinitionInternal)ClusterDefinition).ComponentVersion = value ?? null /* model class */; }

        /// <summary>The cluster configurations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.IAny ClusterDefinitionConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterDefinitionInternal)ClusterDefinition).Configuration; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterDefinitionInternal)ClusterDefinition).Configuration = value ?? null /* model class */; }

        /// <summary>The type of cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string ClusterDefinitionKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterDefinitionInternal)ClusterDefinition).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterDefinitionInternal)ClusterDefinition).Kind = value ?? null; }

        /// <summary>Backing field for <see cref="ClusterVersion" /> property.</summary>
        private string _clusterVersion;

        /// <summary>The version of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string ClusterVersion { get => this._clusterVersion; set => this._clusterVersion = value; }

        /// <summary>Backing field for <see cref="ComputeIsolationProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IComputeIsolationProperties _computeIsolationProperty;

        /// <summary>The compute isolation properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IComputeIsolationProperties ComputeIsolationProperty { get => (this._computeIsolationProperty = this._computeIsolationProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ComputeIsolationProperties()); set => this._computeIsolationProperty = value; }

        /// <summary>The flag indicates whether enable compute isolation or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public bool? ComputeIsolationPropertyEnableComputeIsolation { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IComputeIsolationPropertiesInternal)ComputeIsolationProperty).EnableComputeIsolation; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IComputeIsolationPropertiesInternal)ComputeIsolationProperty).EnableComputeIsolation = value ?? default(bool); }

        /// <summary>The host sku.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string ComputeIsolationPropertyHostSku { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IComputeIsolationPropertiesInternal)ComputeIsolationProperty).HostSku; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IComputeIsolationPropertiesInternal)ComputeIsolationProperty).HostSku = value ?? null; }

        /// <summary>Backing field for <see cref="ComputeProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IComputeProfile _computeProfile;

        /// <summary>The compute profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IComputeProfile ComputeProfile { get => (this._computeProfile = this._computeProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ComputeProfile()); set => this._computeProfile = value; }

        /// <summary>The list of roles in the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRole[] ComputeProfileRole { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IComputeProfileInternal)ComputeProfile).Role; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IComputeProfileInternal)ComputeProfile).Role = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="DiskEncryptionProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IDiskEncryptionProperties _diskEncryptionProperty;

        /// <summary>The disk encryption properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IDiskEncryptionProperties DiskEncryptionProperty { get => (this._diskEncryptionProperty = this._diskEncryptionProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.DiskEncryptionProperties()); set => this._diskEncryptionProperty = value; }

        /// <summary>Algorithm identifier for encryption, default RSA-OAEP.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.JsonWebKeyEncryptionAlgorithm? DiskEncryptionPropertyEncryptionAlgorithm { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IDiskEncryptionPropertiesInternal)DiskEncryptionProperty).EncryptionAlgorithm; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IDiskEncryptionPropertiesInternal)DiskEncryptionProperty).EncryptionAlgorithm = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.JsonWebKeyEncryptionAlgorithm)""); }

        /// <summary>Indicates whether or not resource disk encryption is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public bool? DiskEncryptionPropertyEncryptionAtHost { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IDiskEncryptionPropertiesInternal)DiskEncryptionProperty).EncryptionAtHost; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IDiskEncryptionPropertiesInternal)DiskEncryptionProperty).EncryptionAtHost = value ?? default(bool); }

        /// <summary>Key name that is used for enabling disk encryption.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string DiskEncryptionPropertyKeyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IDiskEncryptionPropertiesInternal)DiskEncryptionProperty).KeyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IDiskEncryptionPropertiesInternal)DiskEncryptionProperty).KeyName = value ?? null; }

        /// <summary>Specific key version that is used for enabling disk encryption.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string DiskEncryptionPropertyKeyVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IDiskEncryptionPropertiesInternal)DiskEncryptionProperty).KeyVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IDiskEncryptionPropertiesInternal)DiskEncryptionProperty).KeyVersion = value ?? null; }

        /// <summary>Resource ID of Managed Identity that is used to access the key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string DiskEncryptionPropertyMsiResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IDiskEncryptionPropertiesInternal)DiskEncryptionProperty).MsiResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IDiskEncryptionPropertiesInternal)DiskEncryptionProperty).MsiResourceId = value ?? null; }

        /// <summary>
        /// Base key vault URI where the customers key is located eg. https://myvault.vault.azure.net
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string DiskEncryptionPropertyVaultUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IDiskEncryptionPropertiesInternal)DiskEncryptionProperty).VaultUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IDiskEncryptionPropertiesInternal)DiskEncryptionProperty).VaultUri = value ?? null; }

        /// <summary>Backing field for <see cref="EncryptionInTransitProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IEncryptionInTransitProperties _encryptionInTransitProperty;

        /// <summary>The encryption-in-transit properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IEncryptionInTransitProperties EncryptionInTransitProperty { get => (this._encryptionInTransitProperty = this._encryptionInTransitProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.EncryptionInTransitProperties()); set => this._encryptionInTransitProperty = value; }

        /// <summary>
        /// Indicates whether or not inter cluster node communication is encrypted in transit.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public bool? EncryptionInTransitPropertyIsEncryptionInTransitEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IEncryptionInTransitPropertiesInternal)EncryptionInTransitProperty).IsEncryptionInTransitEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IEncryptionInTransitPropertiesInternal)EncryptionInTransitProperty).IsEncryptionInTransitEnabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="KafkaRestProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IKafkaRestProperties _kafkaRestProperty;

        /// <summary>The cluster kafka rest proxy configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IKafkaRestProperties KafkaRestProperty { get => (this._kafkaRestProperty = this._kafkaRestProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.KafkaRestProperties()); set => this._kafkaRestProperty = value; }

        /// <summary>The configurations that need to be overriden.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IKafkaRestPropertiesConfigurationOverride KafkaRestPropertyConfigurationOverride { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IKafkaRestPropertiesInternal)KafkaRestProperty).ConfigurationOverride; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IKafkaRestPropertiesInternal)KafkaRestProperty).ConfigurationOverride = value ?? null /* model class */; }

        /// <summary>Internal Acessors for ClusterDefinition</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterDefinition Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterCreatePropertiesInternal.ClusterDefinition { get => (this._clusterDefinition = this._clusterDefinition ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ClusterDefinition()); set { {_clusterDefinition = value;} } }

        /// <summary>Internal Acessors for ComputeIsolationProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IComputeIsolationProperties Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterCreatePropertiesInternal.ComputeIsolationProperty { get => (this._computeIsolationProperty = this._computeIsolationProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ComputeIsolationProperties()); set { {_computeIsolationProperty = value;} } }

        /// <summary>Internal Acessors for ComputeProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IComputeProfile Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterCreatePropertiesInternal.ComputeProfile { get => (this._computeProfile = this._computeProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ComputeProfile()); set { {_computeProfile = value;} } }

        /// <summary>Internal Acessors for DiskEncryptionProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IDiskEncryptionProperties Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterCreatePropertiesInternal.DiskEncryptionProperty { get => (this._diskEncryptionProperty = this._diskEncryptionProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.DiskEncryptionProperties()); set { {_diskEncryptionProperty = value;} } }

        /// <summary>Internal Acessors for EncryptionInTransitProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IEncryptionInTransitProperties Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterCreatePropertiesInternal.EncryptionInTransitProperty { get => (this._encryptionInTransitProperty = this._encryptionInTransitProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.EncryptionInTransitProperties()); set { {_encryptionInTransitProperty = value;} } }

        /// <summary>Internal Acessors for KafkaRestProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IKafkaRestProperties Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterCreatePropertiesInternal.KafkaRestProperty { get => (this._kafkaRestProperty = this._kafkaRestProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.KafkaRestProperties()); set { {_kafkaRestProperty = value;} } }

        /// <summary>Internal Acessors for KafkaRestPropertyClientGroupInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClientGroupInfo Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterCreatePropertiesInternal.KafkaRestPropertyClientGroupInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IKafkaRestPropertiesInternal)KafkaRestProperty).ClientGroupInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IKafkaRestPropertiesInternal)KafkaRestProperty).ClientGroupInfo = value; }

        /// <summary>Internal Acessors for NetworkProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.INetworkProperties Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterCreatePropertiesInternal.NetworkProperty { get => (this._networkProperty = this._networkProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.NetworkProperties()); set { {_networkProperty = value;} } }

        /// <summary>Internal Acessors for SecurityProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISecurityProfile Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterCreatePropertiesInternal.SecurityProfile { get => (this._securityProfile = this._securityProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.SecurityProfile()); set { {_securityProfile = value;} } }

        /// <summary>Internal Acessors for StorageProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IStorageProfile Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterCreatePropertiesInternal.StorageProfile { get => (this._storageProfile = this._storageProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.StorageProfile()); set { {_storageProfile = value;} } }

        /// <summary>Backing field for <see cref="MinSupportedTlsVersion" /> property.</summary>
        private string _minSupportedTlsVersion;

        /// <summary>The minimal supported tls version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string MinSupportedTlsVersion { get => this._minSupportedTlsVersion; set => this._minSupportedTlsVersion = value; }

        /// <summary>Backing field for <see cref="NetworkProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.INetworkProperties _networkProperty;

        /// <summary>The network properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.INetworkProperties NetworkProperty { get => (this._networkProperty = this._networkProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.NetworkProperties()); set => this._networkProperty = value; }

        /// <summary>Indicates whether or not private link is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.PrivateLink? NetworkPropertyPrivateLink { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.INetworkPropertiesInternal)NetworkProperty).PrivateLink; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.INetworkPropertiesInternal)NetworkProperty).PrivateLink = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.PrivateLink)""); }

        /// <summary>The direction for the resource provider connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.ResourceProviderConnection? NetworkPropertyResourceProviderConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.INetworkPropertiesInternal)NetworkProperty).ResourceProviderConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.INetworkPropertiesInternal)NetworkProperty).ResourceProviderConnection = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.ResourceProviderConnection)""); }

        /// <summary>Backing field for <see cref="OSType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.OSType? _oSType;

        /// <summary>The type of operating system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.OSType? OSType { get => this._oSType; set => this._oSType = value; }

        /// <summary>Backing field for <see cref="PrivateLinkConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IPrivateLinkConfiguration[] _privateLinkConfiguration;

        /// <summary>The private link configurations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IPrivateLinkConfiguration[] PrivateLinkConfiguration { get => this._privateLinkConfiguration; set => this._privateLinkConfiguration = value; }

        /// <summary>Backing field for <see cref="SecurityProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISecurityProfile _securityProfile;

        /// <summary>The security profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISecurityProfile SecurityProfile { get => (this._securityProfile = this._securityProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.SecurityProfile()); set => this._securityProfile = value; }

        /// <summary>The resource ID of the user's Azure Active Directory Domain Service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string SecurityProfileAaddsResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISecurityProfileInternal)SecurityProfile).AaddsResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISecurityProfileInternal)SecurityProfile).AaddsResourceId = value ?? null; }

        /// <summary>Optional. The Distinguished Names for cluster user groups</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string[] SecurityProfileClusterUsersGroupDN { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISecurityProfileInternal)SecurityProfile).ClusterUsersGroupDN; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISecurityProfileInternal)SecurityProfile).ClusterUsersGroupDN = value ?? null /* arrayOf */; }

        /// <summary>The directory type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.DirectoryType? SecurityProfileDirectoryType { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISecurityProfileInternal)SecurityProfile).DirectoryType; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISecurityProfileInternal)SecurityProfile).DirectoryType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.DirectoryType)""); }

        /// <summary>The organization's active directory domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string SecurityProfileDomain { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISecurityProfileInternal)SecurityProfile).Domain; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISecurityProfileInternal)SecurityProfile).Domain = value ?? null; }

        /// <summary>The domain admin password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public System.Security.SecureString SecurityProfileDomainUserPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISecurityProfileInternal)SecurityProfile).DomainUserPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISecurityProfileInternal)SecurityProfile).DomainUserPassword = value ?? null; }

        /// <summary>The domain user account that will have admin privileges on the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string SecurityProfileDomainUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISecurityProfileInternal)SecurityProfile).DomainUsername; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISecurityProfileInternal)SecurityProfile).DomainUsername = value ?? null; }

        /// <summary>The LDAPS protocol URLs to communicate with the Active Directory.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string[] SecurityProfileLdapsUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISecurityProfileInternal)SecurityProfile).LdapsUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISecurityProfileInternal)SecurityProfile).LdapsUrl = value ?? null /* arrayOf */; }

        /// <summary>
        /// User assigned identity that has permissions to read and create cluster-related artifacts in the user's AADDS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string SecurityProfileMsiResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISecurityProfileInternal)SecurityProfile).MsiResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISecurityProfileInternal)SecurityProfile).MsiResourceId = value ?? null; }

        /// <summary>
        /// The organizational unit within the Active Directory to place the cluster and service accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string SecurityProfileOrganizationalUnitDn { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISecurityProfileInternal)SecurityProfile).OrganizationalUnitDn; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISecurityProfileInternal)SecurityProfile).OrganizationalUnitDn = value ?? null; }

        /// <summary>Backing field for <see cref="StorageProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IStorageProfile _storageProfile;

        /// <summary>The storage profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IStorageProfile StorageProfile { get => (this._storageProfile = this._storageProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.StorageProfile()); set => this._storageProfile = value; }

        /// <summary>The list of storage accounts in the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IStorageAccount[] StorageProfileStorageaccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IStorageProfileInternal)StorageProfile).Storageaccount; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IStorageProfileInternal)StorageProfile).Storageaccount = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Tier" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.Tier? _tier;

        /// <summary>The cluster tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.Tier? Tier { get => this._tier; set => this._tier = value; }

        /// <summary>Creates an new <see cref="ClusterCreateProperties" /> instance.</summary>
        public ClusterCreateProperties()
        {

        }
    }
    /// The cluster create parameters.
    public partial interface IClusterCreateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.IJsonSerializable
    {
        /// <summary>The AAD security group id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The AAD security group id.",
        SerializedName = @"groupId",
        PossibleTypes = new [] { typeof(string) })]
        string ClientGroupInfoGroupId { get; set; }
        /// <summary>The AAD security group name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The AAD security group name.",
        SerializedName = @"groupName",
        PossibleTypes = new [] { typeof(string) })]
        string ClientGroupInfoGroupName { get; set; }
        /// <summary>The link to the blueprint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The link to the blueprint.",
        SerializedName = @"blueprint",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterDefinitionBlueprint { get; set; }
        /// <summary>The versions of different services in the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The versions of different services in the cluster.",
        SerializedName = @"componentVersion",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterDefinitionComponentVersion) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterDefinitionComponentVersion ClusterDefinitionComponentVersion { get; set; }
        /// <summary>The cluster configurations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cluster configurations.",
        SerializedName = @"configurations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.IAny ClusterDefinitionConfiguration { get; set; }
        /// <summary>The type of cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of cluster.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterDefinitionKind { get; set; }
        /// <summary>The version of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the cluster.",
        SerializedName = @"clusterVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterVersion { get; set; }
        /// <summary>The flag indicates whether enable compute isolation or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The flag indicates whether enable compute isolation or not.",
        SerializedName = @"enableComputeIsolation",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ComputeIsolationPropertyEnableComputeIsolation { get; set; }
        /// <summary>The host sku.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The host sku.",
        SerializedName = @"hostSku",
        PossibleTypes = new [] { typeof(string) })]
        string ComputeIsolationPropertyHostSku { get; set; }
        /// <summary>The list of roles in the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of roles in the cluster.",
        SerializedName = @"roles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRole) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRole[] ComputeProfileRole { get; set; }
        /// <summary>Algorithm identifier for encryption, default RSA-OAEP.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Algorithm identifier for encryption, default RSA-OAEP.",
        SerializedName = @"encryptionAlgorithm",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.JsonWebKeyEncryptionAlgorithm) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.JsonWebKeyEncryptionAlgorithm? DiskEncryptionPropertyEncryptionAlgorithm { get; set; }
        /// <summary>Indicates whether or not resource disk encryption is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether or not resource disk encryption is enabled.",
        SerializedName = @"encryptionAtHost",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DiskEncryptionPropertyEncryptionAtHost { get; set; }
        /// <summary>Key name that is used for enabling disk encryption.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key name that is used for enabling disk encryption.",
        SerializedName = @"keyName",
        PossibleTypes = new [] { typeof(string) })]
        string DiskEncryptionPropertyKeyName { get; set; }
        /// <summary>Specific key version that is used for enabling disk encryption.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specific key version that is used for enabling disk encryption.",
        SerializedName = @"keyVersion",
        PossibleTypes = new [] { typeof(string) })]
        string DiskEncryptionPropertyKeyVersion { get; set; }
        /// <summary>Resource ID of Managed Identity that is used to access the key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of Managed Identity that is used to access the key vault.",
        SerializedName = @"msiResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string DiskEncryptionPropertyMsiResourceId { get; set; }
        /// <summary>
        /// Base key vault URI where the customers key is located eg. https://myvault.vault.azure.net
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Base key vault URI where the customers key is located eg. https://myvault.vault.azure.net",
        SerializedName = @"vaultUri",
        PossibleTypes = new [] { typeof(string) })]
        string DiskEncryptionPropertyVaultUri { get; set; }
        /// <summary>
        /// Indicates whether or not inter cluster node communication is encrypted in transit.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether or not inter cluster node communication is encrypted in transit.",
        SerializedName = @"isEncryptionInTransitEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EncryptionInTransitPropertyIsEncryptionInTransitEnabled { get; set; }
        /// <summary>The configurations that need to be overriden.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The configurations that need to be overriden.",
        SerializedName = @"configurationOverride",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IKafkaRestPropertiesConfigurationOverride) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IKafkaRestPropertiesConfigurationOverride KafkaRestPropertyConfigurationOverride { get; set; }
        /// <summary>The minimal supported tls version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minimal supported tls version.",
        SerializedName = @"minSupportedTlsVersion",
        PossibleTypes = new [] { typeof(string) })]
        string MinSupportedTlsVersion { get; set; }
        /// <summary>Indicates whether or not private link is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether or not private link is enabled.",
        SerializedName = @"privateLink",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.PrivateLink) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.PrivateLink? NetworkPropertyPrivateLink { get; set; }
        /// <summary>The direction for the resource provider connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The direction for the resource provider connection.",
        SerializedName = @"resourceProviderConnection",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.ResourceProviderConnection) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.ResourceProviderConnection? NetworkPropertyResourceProviderConnection { get; set; }
        /// <summary>The type of operating system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of operating system.",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.OSType) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.OSType? OSType { get; set; }
        /// <summary>The private link configurations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The private link configurations.",
        SerializedName = @"privateLinkConfigurations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IPrivateLinkConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IPrivateLinkConfiguration[] PrivateLinkConfiguration { get; set; }
        /// <summary>The resource ID of the user's Azure Active Directory Domain Service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the user's Azure Active Directory Domain Service.",
        SerializedName = @"aaddsResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string SecurityProfileAaddsResourceId { get; set; }
        /// <summary>Optional. The Distinguished Names for cluster user groups</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional. The Distinguished Names for cluster user groups",
        SerializedName = @"clusterUsersGroupDNs",
        PossibleTypes = new [] { typeof(string) })]
        string[] SecurityProfileClusterUsersGroupDN { get; set; }
        /// <summary>The directory type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The directory type.",
        SerializedName = @"directoryType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.DirectoryType) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.DirectoryType? SecurityProfileDirectoryType { get; set; }
        /// <summary>The organization's active directory domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The organization's active directory domain.",
        SerializedName = @"domain",
        PossibleTypes = new [] { typeof(string) })]
        string SecurityProfileDomain { get; set; }
        /// <summary>The domain admin password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The domain admin password.",
        SerializedName = @"domainUserPassword",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString SecurityProfileDomainUserPassword { get; set; }
        /// <summary>The domain user account that will have admin privileges on the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The domain user account that will have admin privileges on the cluster.",
        SerializedName = @"domainUsername",
        PossibleTypes = new [] { typeof(string) })]
        string SecurityProfileDomainUsername { get; set; }
        /// <summary>The LDAPS protocol URLs to communicate with the Active Directory.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The LDAPS protocol URLs to communicate with the Active Directory.",
        SerializedName = @"ldapsUrls",
        PossibleTypes = new [] { typeof(string) })]
        string[] SecurityProfileLdapsUrl { get; set; }
        /// <summary>
        /// User assigned identity that has permissions to read and create cluster-related artifacts in the user's AADDS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User assigned identity that has permissions to read and create cluster-related artifacts in the user's AADDS.",
        SerializedName = @"msiResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string SecurityProfileMsiResourceId { get; set; }
        /// <summary>
        /// The organizational unit within the Active Directory to place the cluster and service accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The organizational unit within the Active Directory to place the cluster and service accounts.",
        SerializedName = @"organizationalUnitDN",
        PossibleTypes = new [] { typeof(string) })]
        string SecurityProfileOrganizationalUnitDn { get; set; }
        /// <summary>The list of storage accounts in the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of storage accounts in the cluster.",
        SerializedName = @"storageaccounts",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IStorageAccount) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IStorageAccount[] StorageProfileStorageaccount { get; set; }
        /// <summary>The cluster tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cluster tier.",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.Tier) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.Tier? Tier { get; set; }

    }
    /// The cluster create parameters.
    internal partial interface IClusterCreatePropertiesInternal

    {
        /// <summary>The AAD security group id.</summary>
        string ClientGroupInfoGroupId { get; set; }
        /// <summary>The AAD security group name.</summary>
        string ClientGroupInfoGroupName { get; set; }
        /// <summary>The cluster definition.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterDefinition ClusterDefinition { get; set; }
        /// <summary>The link to the blueprint.</summary>
        string ClusterDefinitionBlueprint { get; set; }
        /// <summary>The versions of different services in the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterDefinitionComponentVersion ClusterDefinitionComponentVersion { get; set; }
        /// <summary>The cluster configurations.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.IAny ClusterDefinitionConfiguration { get; set; }
        /// <summary>The type of cluster.</summary>
        string ClusterDefinitionKind { get; set; }
        /// <summary>The version of the cluster.</summary>
        string ClusterVersion { get; set; }
        /// <summary>The compute isolation properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IComputeIsolationProperties ComputeIsolationProperty { get; set; }
        /// <summary>The flag indicates whether enable compute isolation or not.</summary>
        bool? ComputeIsolationPropertyEnableComputeIsolation { get; set; }
        /// <summary>The host sku.</summary>
        string ComputeIsolationPropertyHostSku { get; set; }
        /// <summary>The compute profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IComputeProfile ComputeProfile { get; set; }
        /// <summary>The list of roles in the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRole[] ComputeProfileRole { get; set; }
        /// <summary>The disk encryption properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IDiskEncryptionProperties DiskEncryptionProperty { get; set; }
        /// <summary>Algorithm identifier for encryption, default RSA-OAEP.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.JsonWebKeyEncryptionAlgorithm? DiskEncryptionPropertyEncryptionAlgorithm { get; set; }
        /// <summary>Indicates whether or not resource disk encryption is enabled.</summary>
        bool? DiskEncryptionPropertyEncryptionAtHost { get; set; }
        /// <summary>Key name that is used for enabling disk encryption.</summary>
        string DiskEncryptionPropertyKeyName { get; set; }
        /// <summary>Specific key version that is used for enabling disk encryption.</summary>
        string DiskEncryptionPropertyKeyVersion { get; set; }
        /// <summary>Resource ID of Managed Identity that is used to access the key vault.</summary>
        string DiskEncryptionPropertyMsiResourceId { get; set; }
        /// <summary>
        /// Base key vault URI where the customers key is located eg. https://myvault.vault.azure.net
        /// </summary>
        string DiskEncryptionPropertyVaultUri { get; set; }
        /// <summary>The encryption-in-transit properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IEncryptionInTransitProperties EncryptionInTransitProperty { get; set; }
        /// <summary>
        /// Indicates whether or not inter cluster node communication is encrypted in transit.
        /// </summary>
        bool? EncryptionInTransitPropertyIsEncryptionInTransitEnabled { get; set; }
        /// <summary>The cluster kafka rest proxy configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IKafkaRestProperties KafkaRestProperty { get; set; }
        /// <summary>The information of AAD security group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClientGroupInfo KafkaRestPropertyClientGroupInfo { get; set; }
        /// <summary>The configurations that need to be overriden.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IKafkaRestPropertiesConfigurationOverride KafkaRestPropertyConfigurationOverride { get; set; }
        /// <summary>The minimal supported tls version.</summary>
        string MinSupportedTlsVersion { get; set; }
        /// <summary>The network properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.INetworkProperties NetworkProperty { get; set; }
        /// <summary>Indicates whether or not private link is enabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.PrivateLink? NetworkPropertyPrivateLink { get; set; }
        /// <summary>The direction for the resource provider connection.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.ResourceProviderConnection? NetworkPropertyResourceProviderConnection { get; set; }
        /// <summary>The type of operating system.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.OSType? OSType { get; set; }
        /// <summary>The private link configurations.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IPrivateLinkConfiguration[] PrivateLinkConfiguration { get; set; }
        /// <summary>The security profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISecurityProfile SecurityProfile { get; set; }
        /// <summary>The resource ID of the user's Azure Active Directory Domain Service.</summary>
        string SecurityProfileAaddsResourceId { get; set; }
        /// <summary>Optional. The Distinguished Names for cluster user groups</summary>
        string[] SecurityProfileClusterUsersGroupDN { get; set; }
        /// <summary>The directory type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.DirectoryType? SecurityProfileDirectoryType { get; set; }
        /// <summary>The organization's active directory domain.</summary>
        string SecurityProfileDomain { get; set; }
        /// <summary>The domain admin password.</summary>
        System.Security.SecureString SecurityProfileDomainUserPassword { get; set; }
        /// <summary>The domain user account that will have admin privileges on the cluster.</summary>
        string SecurityProfileDomainUsername { get; set; }
        /// <summary>The LDAPS protocol URLs to communicate with the Active Directory.</summary>
        string[] SecurityProfileLdapsUrl { get; set; }
        /// <summary>
        /// User assigned identity that has permissions to read and create cluster-related artifacts in the user's AADDS.
        /// </summary>
        string SecurityProfileMsiResourceId { get; set; }
        /// <summary>
        /// The organizational unit within the Active Directory to place the cluster and service accounts.
        /// </summary>
        string SecurityProfileOrganizationalUnitDn { get; set; }
        /// <summary>The storage profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IStorageProfile StorageProfile { get; set; }
        /// <summary>The list of storage accounts in the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IStorageAccount[] StorageProfileStorageaccount { get; set; }
        /// <summary>The cluster tier.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.Tier? Tier { get; set; }

    }
}