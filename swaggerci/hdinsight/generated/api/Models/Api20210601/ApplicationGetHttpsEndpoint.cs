// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Extensions;

    /// <summary>Gets the application HTTP endpoints.</summary>
    public partial class ApplicationGetHttpsEndpoint :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IApplicationGetHttpsEndpoint,
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IApplicationGetHttpsEndpointInternal
    {

        /// <summary>Backing field for <see cref="AccessMode" /> property.</summary>
        private string[] _accessMode;

        /// <summary>The list of access modes for the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string[] AccessMode { get => this._accessMode; set => this._accessMode = value; }

        /// <summary>Backing field for <see cref="DestinationPort" /> property.</summary>
        private int? _destinationPort;

        /// <summary>The destination port to connect to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public int? DestinationPort { get => this._destinationPort; set => this._destinationPort = value; }

        /// <summary>Backing field for <see cref="DisableGatewayAuth" /> property.</summary>
        private bool? _disableGatewayAuth;

        /// <summary>The value indicates whether to disable GatewayAuth.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public bool? DisableGatewayAuth { get => this._disableGatewayAuth; set => this._disableGatewayAuth = value; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>The location of the endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string Location { get => this._location; }

        /// <summary>Internal Acessors for Location</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IApplicationGetHttpsEndpointInternal.Location { get => this._location; set { {_location = value;} } }

        /// <summary>Internal Acessors for PublicPort</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IApplicationGetHttpsEndpointInternal.PublicPort { get => this._publicPort; set { {_publicPort = value;} } }

        /// <summary>Backing field for <see cref="PrivateIPAddress" /> property.</summary>
        private string _privateIPAddress;

        /// <summary>The private ip address of the endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string PrivateIPAddress { get => this._privateIPAddress; set => this._privateIPAddress = value; }

        /// <summary>Backing field for <see cref="PublicPort" /> property.</summary>
        private int? _publicPort;

        /// <summary>The public port to connect to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public int? PublicPort { get => this._publicPort; }

        /// <summary>Backing field for <see cref="SubDomainSuffix" /> property.</summary>
        private string _subDomainSuffix;

        /// <summary>The subdomain suffix of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string SubDomainSuffix { get => this._subDomainSuffix; set => this._subDomainSuffix = value; }

        /// <summary>Creates an new <see cref="ApplicationGetHttpsEndpoint" /> instance.</summary>
        public ApplicationGetHttpsEndpoint()
        {

        }
    }
    /// Gets the application HTTP endpoints.
    public partial interface IApplicationGetHttpsEndpoint :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.IJsonSerializable
    {
        /// <summary>The list of access modes for the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of access modes for the application.",
        SerializedName = @"accessModes",
        PossibleTypes = new [] { typeof(string) })]
        string[] AccessMode { get; set; }
        /// <summary>The destination port to connect to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The destination port to connect to.",
        SerializedName = @"destinationPort",
        PossibleTypes = new [] { typeof(int) })]
        int? DestinationPort { get; set; }
        /// <summary>The value indicates whether to disable GatewayAuth.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value indicates whether to disable GatewayAuth.",
        SerializedName = @"disableGatewayAuth",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DisableGatewayAuth { get; set; }
        /// <summary>The location of the endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The location of the endpoint.",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get;  }
        /// <summary>The private ip address of the endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The private ip address of the endpoint.",
        SerializedName = @"privateIPAddress",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateIPAddress { get; set; }
        /// <summary>The public port to connect to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The public port to connect to.",
        SerializedName = @"publicPort",
        PossibleTypes = new [] { typeof(int) })]
        int? PublicPort { get;  }
        /// <summary>The subdomain suffix of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The subdomain suffix of the application.",
        SerializedName = @"subDomainSuffix",
        PossibleTypes = new [] { typeof(string) })]
        string SubDomainSuffix { get; set; }

    }
    /// Gets the application HTTP endpoints.
    internal partial interface IApplicationGetHttpsEndpointInternal

    {
        /// <summary>The list of access modes for the application.</summary>
        string[] AccessMode { get; set; }
        /// <summary>The destination port to connect to.</summary>
        int? DestinationPort { get; set; }
        /// <summary>The value indicates whether to disable GatewayAuth.</summary>
        bool? DisableGatewayAuth { get; set; }
        /// <summary>The location of the endpoint.</summary>
        string Location { get; set; }
        /// <summary>The private ip address of the endpoint.</summary>
        string PrivateIPAddress { get; set; }
        /// <summary>The public port to connect to.</summary>
        int? PublicPort { get; set; }
        /// <summary>The subdomain suffix of the application.</summary>
        string SubDomainSuffix { get; set; }

    }
}