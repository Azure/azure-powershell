// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Extensions;

    /// <summary>
    /// This class represent a single filter object that defines a multidimensional set. The dimensions of this set are Regions,
    /// ClusterFlavors, NodeTypes and ClusterVersions. The constraint should be defined based on the following: FilterMode (Exclude
    /// vs Include), VMSizes (the vm sizes in affect of exclusion/inclusion) and the ordering of the Filters. Later filters override
    /// previous settings if conflicted.
    /// </summary>
    public partial class VMSizeCompatibilityFilterV2 :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IVMSizeCompatibilityFilterV2,
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IVMSizeCompatibilityFilterV2Internal
    {

        /// <summary>Backing field for <see cref="ClusterFlavor" /> property.</summary>
        private string[] _clusterFlavor;

        /// <summary>The list of cluster flavors under the effect of the filter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string[] ClusterFlavor { get => this._clusterFlavor; set => this._clusterFlavor = value; }

        /// <summary>Backing field for <see cref="ClusterVersion" /> property.</summary>
        private string[] _clusterVersion;

        /// <summary>The list of cluster versions affected in Major.Minor format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string[] ClusterVersion { get => this._clusterVersion; set => this._clusterVersion = value; }

        /// <summary>Backing field for <see cref="ComputeIsolationSupported" /> property.</summary>
        private string _computeIsolationSupported;

        /// <summary>
        /// Whether support compute isolation. 'true' means only for ComputeIsolationEnabled, 'false' means only for regular cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string ComputeIsolationSupported { get => this._computeIsolationSupported; set => this._computeIsolationSupported = value; }

        /// <summary>Backing field for <see cref="EspApplied" /> property.</summary>
        private string _espApplied;

        /// <summary>
        /// Whether apply for ESP cluster. 'true' means only for ESP, 'false' means only for non-ESP, null or empty string or others
        /// mean for both.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string EspApplied { get => this._espApplied; set => this._espApplied = value; }

        /// <summary>Backing field for <see cref="FilterMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.FilterMode? _filterMode;

        /// <summary>
        /// The filtering mode. Effectively this can enabling or disabling the VM sizes in a particular set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.FilterMode? FilterMode { get => this._filterMode; set => this._filterMode = value; }

        /// <summary>Backing field for <see cref="NodeType" /> property.</summary>
        private string[] _nodeType;

        /// <summary>The list of node types affected by the filter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string[] NodeType { get => this._nodeType; set => this._nodeType = value; }

        /// <summary>Backing field for <see cref="OSType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.OSType[] _oSType;

        /// <summary>The OSType affected, Windows or Linux.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.OSType[] OSType { get => this._oSType; set => this._oSType = value; }

        /// <summary>Backing field for <see cref="Region" /> property.</summary>
        private string[] _region;

        /// <summary>The list of regions under the effect of the filter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string[] Region { get => this._region; set => this._region = value; }

        /// <summary>Backing field for <see cref="VMSize" /> property.</summary>
        private string[] _vMSize;

        /// <summary>The list of virtual machine sizes to include or exclude.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string[] VMSize { get => this._vMSize; set => this._vMSize = value; }

        /// <summary>Creates an new <see cref="VMSizeCompatibilityFilterV2" /> instance.</summary>
        public VMSizeCompatibilityFilterV2()
        {

        }
    }
    /// This class represent a single filter object that defines a multidimensional set. The dimensions of this set are Regions,
    /// ClusterFlavors, NodeTypes and ClusterVersions. The constraint should be defined based on the following: FilterMode (Exclude
    /// vs Include), VMSizes (the vm sizes in affect of exclusion/inclusion) and the ordering of the Filters. Later filters override
    /// previous settings if conflicted.
    public partial interface IVMSizeCompatibilityFilterV2 :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.IJsonSerializable
    {
        /// <summary>The list of cluster flavors under the effect of the filter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of cluster flavors under the effect of the filter.",
        SerializedName = @"clusterFlavors",
        PossibleTypes = new [] { typeof(string) })]
        string[] ClusterFlavor { get; set; }
        /// <summary>The list of cluster versions affected in Major.Minor format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of cluster versions affected in Major.Minor format.",
        SerializedName = @"clusterVersions",
        PossibleTypes = new [] { typeof(string) })]
        string[] ClusterVersion { get; set; }
        /// <summary>
        /// Whether support compute isolation. 'true' means only for ComputeIsolationEnabled, 'false' means only for regular cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether support compute isolation. 'true' means only for ComputeIsolationEnabled, 'false' means only for regular cluster.",
        SerializedName = @"computeIsolationSupported",
        PossibleTypes = new [] { typeof(string) })]
        string ComputeIsolationSupported { get; set; }
        /// <summary>
        /// Whether apply for ESP cluster. 'true' means only for ESP, 'false' means only for non-ESP, null or empty string or others
        /// mean for both.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether apply for ESP cluster. 'true' means only for ESP, 'false' means only for non-ESP, null or empty string or others mean for both.",
        SerializedName = @"espApplied",
        PossibleTypes = new [] { typeof(string) })]
        string EspApplied { get; set; }
        /// <summary>
        /// The filtering mode. Effectively this can enabling or disabling the VM sizes in a particular set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The filtering mode. Effectively this can enabling or disabling the VM sizes in a particular set.",
        SerializedName = @"filterMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.FilterMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.FilterMode? FilterMode { get; set; }
        /// <summary>The list of node types affected by the filter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of node types affected by the filter.",
        SerializedName = @"nodeTypes",
        PossibleTypes = new [] { typeof(string) })]
        string[] NodeType { get; set; }
        /// <summary>The OSType affected, Windows or Linux.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The OSType affected, Windows or Linux.",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.OSType) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.OSType[] OSType { get; set; }
        /// <summary>The list of regions under the effect of the filter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of regions under the effect of the filter.",
        SerializedName = @"regions",
        PossibleTypes = new [] { typeof(string) })]
        string[] Region { get; set; }
        /// <summary>The list of virtual machine sizes to include or exclude.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of virtual machine sizes to include or exclude.",
        SerializedName = @"vmSizes",
        PossibleTypes = new [] { typeof(string) })]
        string[] VMSize { get; set; }

    }
    /// This class represent a single filter object that defines a multidimensional set. The dimensions of this set are Regions,
    /// ClusterFlavors, NodeTypes and ClusterVersions. The constraint should be defined based on the following: FilterMode (Exclude
    /// vs Include), VMSizes (the vm sizes in affect of exclusion/inclusion) and the ordering of the Filters. Later filters override
    /// previous settings if conflicted.
    internal partial interface IVMSizeCompatibilityFilterV2Internal

    {
        /// <summary>The list of cluster flavors under the effect of the filter.</summary>
        string[] ClusterFlavor { get; set; }
        /// <summary>The list of cluster versions affected in Major.Minor format.</summary>
        string[] ClusterVersion { get; set; }
        /// <summary>
        /// Whether support compute isolation. 'true' means only for ComputeIsolationEnabled, 'false' means only for regular cluster.
        /// </summary>
        string ComputeIsolationSupported { get; set; }
        /// <summary>
        /// Whether apply for ESP cluster. 'true' means only for ESP, 'false' means only for non-ESP, null or empty string or others
        /// mean for both.
        /// </summary>
        string EspApplied { get; set; }
        /// <summary>
        /// The filtering mode. Effectively this can enabling or disabling the VM sizes in a particular set.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.FilterMode? FilterMode { get; set; }
        /// <summary>The list of node types affected by the filter.</summary>
        string[] NodeType { get; set; }
        /// <summary>The OSType affected, Windows or Linux.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.OSType[] OSType { get; set; }
        /// <summary>The list of regions under the effect of the filter.</summary>
        string[] Region { get; set; }
        /// <summary>The list of virtual machine sizes to include or exclude.</summary>
        string[] VMSize { get; set; }

    }
}