// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Extensions;

    /// <summary>The HDInsight cluster.</summary>
    public partial class Cluster :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ICluster,
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterInternal,
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.TrackedResource();

        /// <summary>The AAD security group id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string ClientGroupInfoGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ClientGroupInfoGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ClientGroupInfoGroupId = value ?? null; }

        /// <summary>The AAD security group name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string ClientGroupInfoGroupName { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ClientGroupInfoGroupName; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ClientGroupInfoGroupName = value ?? null; }

        /// <summary>The cluster id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string ClusterId { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ClusterId; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ClusterId = value ?? null; }

        /// <summary>The flag indicates whether enable compute isolation or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public bool? ComputeIsolationPropertyEnableComputeIsolation { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ComputeIsolationPropertyEnableComputeIsolation; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ComputeIsolationPropertyEnableComputeIsolation = value ?? default(bool); }

        /// <summary>The host sku.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string ComputeIsolationPropertyHostSku { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ComputeIsolationPropertyHostSku; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ComputeIsolationPropertyHostSku = value ?? null; }

        /// <summary>The list of roles in the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRole[] ComputeProfileRole { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ComputeProfileRole; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ComputeProfileRole = value ?? null /* arrayOf */; }

        /// <summary>The list of connectivity endpoints.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IConnectivityEndpoint[] ConnectivityEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ConnectivityEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ConnectivityEndpoint = value ?? null /* arrayOf */; }

        /// <summary>The date on which the cluster was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string CreatedDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).CreatedDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).CreatedDate = value ?? null; }

        /// <summary>The link to the blueprint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string DefinitionBlueprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ClusterDefinitionBlueprint; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ClusterDefinitionBlueprint = value ?? null; }

        /// <summary>The versions of different services in the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterDefinitionComponentVersion DefinitionComponentVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ClusterDefinitionComponentVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ClusterDefinitionComponentVersion = value ?? null /* model class */; }

        /// <summary>The cluster configurations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.IAny DefinitionConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ClusterDefinitionConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ClusterDefinitionConfiguration = value ?? null /* model class */; }

        /// <summary>The type of cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string DefinitionKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ClusterDefinitionKind; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ClusterDefinitionKind = value ?? null; }

        /// <summary>Algorithm identifier for encryption, default RSA-OAEP.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.JsonWebKeyEncryptionAlgorithm? DiskEncryptionPropertyEncryptionAlgorithm { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).DiskEncryptionPropertyEncryptionAlgorithm; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).DiskEncryptionPropertyEncryptionAlgorithm = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.JsonWebKeyEncryptionAlgorithm)""); }

        /// <summary>Indicates whether or not resource disk encryption is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public bool? DiskEncryptionPropertyEncryptionAtHost { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).DiskEncryptionPropertyEncryptionAtHost; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).DiskEncryptionPropertyEncryptionAtHost = value ?? default(bool); }

        /// <summary>Key name that is used for enabling disk encryption.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string DiskEncryptionPropertyKeyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).DiskEncryptionPropertyKeyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).DiskEncryptionPropertyKeyName = value ?? null; }

        /// <summary>Specific key version that is used for enabling disk encryption.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string DiskEncryptionPropertyKeyVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).DiskEncryptionPropertyKeyVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).DiskEncryptionPropertyKeyVersion = value ?? null; }

        /// <summary>Resource ID of Managed Identity that is used to access the key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string DiskEncryptionPropertyMsiResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).DiskEncryptionPropertyMsiResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).DiskEncryptionPropertyMsiResourceId = value ?? null; }

        /// <summary>
        /// Base key vault URI where the customers key is located eg. https://myvault.vault.azure.net
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string DiskEncryptionPropertyVaultUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).DiskEncryptionPropertyVaultUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).DiskEncryptionPropertyVaultUri = value ?? null; }

        /// <summary>
        /// Indicates whether or not inter cluster node communication is encrypted in transit.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public bool? EncryptionInTransitPropertyIsEncryptionInTransitEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).EncryptionInTransitPropertyIsEncryptionInTransitEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).EncryptionInTransitPropertyIsEncryptionInTransitEnabled = value ?? default(bool); }

        /// <summary>The list of errors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IErrors[] Error { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).Error; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).Error = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Etag" /> property.</summary>
        private string _etag;

        /// <summary>The ETag for the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string Etag { get => this._etag; set => this._etag = value; }

        /// <summary>The config id of excluded services.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string ExcludedServiceConfigExcludedServicesConfigId { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ExcludedServiceConfigExcludedServicesConfigId; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ExcludedServiceConfigExcludedServicesConfigId = value ?? null; }

        /// <summary>The list of excluded services.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string ExcludedServiceConfigExcludedServicesList { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ExcludedServiceConfigExcludedServicesList; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ExcludedServiceConfigExcludedServicesList = value ?? null; }

        /// <summary>The hdp version of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string HdpVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ClusterHdpVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ClusterHdpVersion = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.IResourceAutoGeneratedInternal)__trackedResource).Id; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterIdentity _identity;

        /// <summary>The identity of the cluster, if configured.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ClusterIdentity()); set => this._identity = value; }

        /// <summary>
        /// The principal id of cluster identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterIdentityInternal)Identity).PrincipalId; }

        /// <summary>
        /// The tenant id associated with the cluster. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterIdentityInternal)Identity).TenantId; }

        /// <summary>
        /// The type of identity used for the cluster. The type 'SystemAssigned, UserAssigned' includes both an implicitly created
        /// identity and a set of user assigned identities.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.ResourceIdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterIdentityInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.ResourceIdentityType)""); }

        /// <summary>
        /// The list of user identities associated with the cluster. The user identity dictionary key references will be ARM resource
        /// ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterIdentityUserAssignedIdentities IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterIdentityInternal)Identity).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterIdentityInternal)Identity).UserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>The configurations that need to be overriden.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IKafkaRestPropertiesConfigurationOverride KafkaRestPropertyConfigurationOverride { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).KafkaRestPropertyConfigurationOverride; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).KafkaRestPropertyConfigurationOverride = value ?? null /* model class */; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.IResourceAutoGeneratedInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.IResourceAutoGeneratedInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.IResourceAutoGeneratedInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.IResourceAutoGeneratedInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.IResourceAutoGeneratedInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.IResourceAutoGeneratedInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.IResourceAutoGeneratedInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.IResourceAutoGeneratedInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.IResourceAutoGeneratedInternal)__trackedResource).Type = value; }

        /// <summary>Internal Acessors for ComputeIsolationProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IComputeIsolationProperties Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterInternal.ComputeIsolationProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ComputeIsolationProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ComputeIsolationProperty = value; }

        /// <summary>Internal Acessors for ComputeProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IComputeProfile Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterInternal.ComputeProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ComputeProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ComputeProfile = value; }

        /// <summary>Internal Acessors for Definition</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterDefinition Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterInternal.Definition { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ClusterDefinition; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ClusterDefinition = value; }

        /// <summary>Internal Acessors for DiskEncryptionProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IDiskEncryptionProperties Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterInternal.DiskEncryptionProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).DiskEncryptionProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).DiskEncryptionProperty = value; }

        /// <summary>Internal Acessors for EncryptionInTransitProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IEncryptionInTransitProperties Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterInternal.EncryptionInTransitProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).EncryptionInTransitProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).EncryptionInTransitProperty = value; }

        /// <summary>Internal Acessors for ExcludedServicesConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IExcludedServicesConfig Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterInternal.ExcludedServicesConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ExcludedServicesConfig; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ExcludedServicesConfig = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterIdentity Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ClusterIdentity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterIdentityInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterIdentityInternal)Identity).PrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterIdentityInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterIdentityInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for KafkaRestProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IKafkaRestProperties Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterInternal.KafkaRestProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).KafkaRestProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).KafkaRestProperty = value; }

        /// <summary>Internal Acessors for KafkaRestPropertyClientGroupInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClientGroupInfo Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterInternal.KafkaRestPropertyClientGroupInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).KafkaRestPropertyClientGroupInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).KafkaRestPropertyClientGroupInfo = value; }

        /// <summary>Internal Acessors for NetworkProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.INetworkProperties Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterInternal.NetworkProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).NetworkProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).NetworkProperty = value; }

        /// <summary>Internal Acessors for PrivateEndpointConnection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IPrivateEndpointConnection[] Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterInternal.PrivateEndpointConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).PrivateEndpointConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).PrivateEndpointConnection = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetProperties Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ClusterGetProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for QuotaInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IQuotaInfo Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterInternal.QuotaInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).QuotaInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).QuotaInfo = value; }

        /// <summary>Internal Acessors for SecurityProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISecurityProfile Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterInternal.SecurityProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).SecurityProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).SecurityProfile = value; }

        /// <summary>Internal Acessors for StorageProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IStorageProfile Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterInternal.StorageProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).StorageProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).StorageProfile = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.ISystemData Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterInternal.SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.SystemData()); set { {_systemData = value;} } }

        /// <summary>The minimal supported tls version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string MinSupportedTlsVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).MinSupportedTlsVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).MinSupportedTlsVersion = value ?? null; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.IResourceAutoGeneratedInternal)__trackedResource).Name; }

        /// <summary>Indicates whether or not private link is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.PrivateLink? NetworkPropertyPrivateLink { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).NetworkPropertyPrivateLink; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).NetworkPropertyPrivateLink = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.PrivateLink)""); }

        /// <summary>The direction for the resource provider connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.ResourceProviderConnection? NetworkPropertyResourceProviderConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).NetworkPropertyResourceProviderConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).NetworkPropertyResourceProviderConnection = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.ResourceProviderConnection)""); }

        /// <summary>The type of operating system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.OSType? OSType { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).OSType; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).OSType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.OSType)""); }

        /// <summary>The list of private endpoint connections.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IPrivateEndpointConnection[] PrivateEndpointConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).PrivateEndpointConnection; }

        /// <summary>The private link configurations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IPrivateLinkConfiguration[] PrivateLinkConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).PrivateLinkConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).PrivateLinkConfiguration = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetProperties _property;

        /// <summary>The properties of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ClusterGetProperties()); set => this._property = value; }

        /// <summary>The provisioning state, which only appears in the response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.HdInsightClusterProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ProvisioningState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.HdInsightClusterProvisioningState)""); }

        /// <summary>The cores used by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public int? QuotaInfoCoresUsed { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).QuotaInfoCoresUsed; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).QuotaInfoCoresUsed = value ?? default(int); }

        /// <summary>The resource ID of the user's Azure Active Directory Domain Service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string SecurityProfileAaddsResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).SecurityProfileAaddsResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).SecurityProfileAaddsResourceId = value ?? null; }

        /// <summary>Optional. The Distinguished Names for cluster user groups</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string[] SecurityProfileClusterUsersGroupDN { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).SecurityProfileClusterUsersGroupDN; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).SecurityProfileClusterUsersGroupDN = value ?? null /* arrayOf */; }

        /// <summary>The directory type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.DirectoryType? SecurityProfileDirectoryType { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).SecurityProfileDirectoryType; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).SecurityProfileDirectoryType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.DirectoryType)""); }

        /// <summary>The organization's active directory domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string SecurityProfileDomain { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).SecurityProfileDomain; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).SecurityProfileDomain = value ?? null; }

        /// <summary>The domain admin password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public System.Security.SecureString SecurityProfileDomainUserPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).SecurityProfileDomainUserPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).SecurityProfileDomainUserPassword = value ?? null; }

        /// <summary>The domain user account that will have admin privileges on the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string SecurityProfileDomainUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).SecurityProfileDomainUsername; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).SecurityProfileDomainUsername = value ?? null; }

        /// <summary>The LDAPS protocol URLs to communicate with the Active Directory.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string[] SecurityProfileLdapsUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).SecurityProfileLdapsUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).SecurityProfileLdapsUrl = value ?? null /* arrayOf */; }

        /// <summary>
        /// User assigned identity that has permissions to read and create cluster-related artifacts in the user's AADDS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string SecurityProfileMsiResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).SecurityProfileMsiResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).SecurityProfileMsiResourceId = value ?? null; }

        /// <summary>
        /// The organizational unit within the Active Directory to place the cluster and service accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string SecurityProfileOrganizationalUnitDn { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).SecurityProfileOrganizationalUnitDn; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).SecurityProfileOrganizationalUnitDn = value ?? null; }

        /// <summary>The state of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string State { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ClusterState; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ClusterState = value ?? null; }

        /// <summary>The list of storage accounts in the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IStorageAccount[] StorageProfileStorageaccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).StorageProfileStorageaccount; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).StorageProfileStorageaccount = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="SystemData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.ISystemData _systemData;

        /// <summary>Metadata pertaining to creation and last modification of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.ISystemData SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.SystemData()); }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.ISystemDataInternal)SystemData).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.ISystemDataInternal)SystemData).CreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.ISystemDataInternal)SystemData).CreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.ISystemDataInternal)SystemData).CreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.ISystemDataInternal)SystemData).CreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.ISystemDataInternal)SystemData).CreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.ISystemDataInternal)SystemData).LastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.ISystemDataInternal)SystemData).LastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.ISystemDataInternal)SystemData).LastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.ISystemDataInternal)SystemData).LastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.ISystemDataInternal)SystemData).LastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.ISystemDataInternal)SystemData).LastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.CreatedByType)""); }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>The cluster tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.Tier? Tier { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).Tier; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).Tier = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.Tier)""); }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.IResourceAutoGeneratedInternal)__trackedResource).Type; }

        /// <summary>The version of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Inlined)]
        public string Version { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ClusterVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetPropertiesInternal)Property).ClusterVersion = value ?? null; }

        /// <summary>Backing field for <see cref="Zone" /> property.</summary>
        private string[] _zone;

        /// <summary>The availability zones.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.PropertyOrigin.Owned)]
        public string[] Zone { get => this._zone; set => this._zone = value; }

        /// <summary>Creates an new <see cref="Cluster" /> instance.</summary>
        public Cluster()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// The HDInsight cluster.
    public partial interface ICluster :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.ITrackedResource
    {
        /// <summary>The AAD security group id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The AAD security group id.",
        SerializedName = @"groupId",
        PossibleTypes = new [] { typeof(string) })]
        string ClientGroupInfoGroupId { get; set; }
        /// <summary>The AAD security group name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The AAD security group name.",
        SerializedName = @"groupName",
        PossibleTypes = new [] { typeof(string) })]
        string ClientGroupInfoGroupName { get; set; }
        /// <summary>The cluster id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cluster id.",
        SerializedName = @"clusterId",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterId { get; set; }
        /// <summary>The flag indicates whether enable compute isolation or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The flag indicates whether enable compute isolation or not.",
        SerializedName = @"enableComputeIsolation",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ComputeIsolationPropertyEnableComputeIsolation { get; set; }
        /// <summary>The host sku.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The host sku.",
        SerializedName = @"hostSku",
        PossibleTypes = new [] { typeof(string) })]
        string ComputeIsolationPropertyHostSku { get; set; }
        /// <summary>The list of roles in the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of roles in the cluster.",
        SerializedName = @"roles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRole) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRole[] ComputeProfileRole { get; set; }
        /// <summary>The list of connectivity endpoints.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of connectivity endpoints.",
        SerializedName = @"connectivityEndpoints",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IConnectivityEndpoint) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IConnectivityEndpoint[] ConnectivityEndpoint { get; set; }
        /// <summary>The date on which the cluster was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The date on which the cluster was created.",
        SerializedName = @"createdDate",
        PossibleTypes = new [] { typeof(string) })]
        string CreatedDate { get; set; }
        /// <summary>The link to the blueprint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The link to the blueprint.",
        SerializedName = @"blueprint",
        PossibleTypes = new [] { typeof(string) })]
        string DefinitionBlueprint { get; set; }
        /// <summary>The versions of different services in the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The versions of different services in the cluster.",
        SerializedName = @"componentVersion",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterDefinitionComponentVersion) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterDefinitionComponentVersion DefinitionComponentVersion { get; set; }
        /// <summary>The cluster configurations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cluster configurations.",
        SerializedName = @"configurations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.IAny DefinitionConfiguration { get; set; }
        /// <summary>The type of cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of cluster.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(string) })]
        string DefinitionKind { get; set; }
        /// <summary>Algorithm identifier for encryption, default RSA-OAEP.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Algorithm identifier for encryption, default RSA-OAEP.",
        SerializedName = @"encryptionAlgorithm",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.JsonWebKeyEncryptionAlgorithm) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.JsonWebKeyEncryptionAlgorithm? DiskEncryptionPropertyEncryptionAlgorithm { get; set; }
        /// <summary>Indicates whether or not resource disk encryption is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether or not resource disk encryption is enabled.",
        SerializedName = @"encryptionAtHost",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DiskEncryptionPropertyEncryptionAtHost { get; set; }
        /// <summary>Key name that is used for enabling disk encryption.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key name that is used for enabling disk encryption.",
        SerializedName = @"keyName",
        PossibleTypes = new [] { typeof(string) })]
        string DiskEncryptionPropertyKeyName { get; set; }
        /// <summary>Specific key version that is used for enabling disk encryption.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specific key version that is used for enabling disk encryption.",
        SerializedName = @"keyVersion",
        PossibleTypes = new [] { typeof(string) })]
        string DiskEncryptionPropertyKeyVersion { get; set; }
        /// <summary>Resource ID of Managed Identity that is used to access the key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of Managed Identity that is used to access the key vault.",
        SerializedName = @"msiResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string DiskEncryptionPropertyMsiResourceId { get; set; }
        /// <summary>
        /// Base key vault URI where the customers key is located eg. https://myvault.vault.azure.net
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Base key vault URI where the customers key is located eg. https://myvault.vault.azure.net",
        SerializedName = @"vaultUri",
        PossibleTypes = new [] { typeof(string) })]
        string DiskEncryptionPropertyVaultUri { get; set; }
        /// <summary>
        /// Indicates whether or not inter cluster node communication is encrypted in transit.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether or not inter cluster node communication is encrypted in transit.",
        SerializedName = @"isEncryptionInTransitEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EncryptionInTransitPropertyIsEncryptionInTransitEnabled { get; set; }
        /// <summary>The list of errors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of errors.",
        SerializedName = @"errors",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IErrors) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IErrors[] Error { get; set; }
        /// <summary>The ETag for the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ETag for the resource",
        SerializedName = @"etag",
        PossibleTypes = new [] { typeof(string) })]
        string Etag { get; set; }
        /// <summary>The config id of excluded services.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The config id of excluded services.",
        SerializedName = @"excludedServicesConfigId",
        PossibleTypes = new [] { typeof(string) })]
        string ExcludedServiceConfigExcludedServicesConfigId { get; set; }
        /// <summary>The list of excluded services.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of excluded services.",
        SerializedName = @"excludedServicesList",
        PossibleTypes = new [] { typeof(string) })]
        string ExcludedServiceConfigExcludedServicesList { get; set; }
        /// <summary>The hdp version of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The hdp version of the cluster.",
        SerializedName = @"clusterHdpVersion",
        PossibleTypes = new [] { typeof(string) })]
        string HdpVersion { get; set; }
        /// <summary>
        /// The principal id of cluster identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The principal id of cluster identity. This property will only be provided for a system assigned identity.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }
        /// <summary>
        /// The tenant id associated with the cluster. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tenant id associated with the cluster. This property will only be provided for a system assigned identity.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }
        /// <summary>
        /// The type of identity used for the cluster. The type 'SystemAssigned, UserAssigned' includes both an implicitly created
        /// identity and a set of user assigned identities.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity used for the cluster. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.ResourceIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.ResourceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The list of user identities associated with the cluster. The user identity dictionary key references will be ARM resource
        /// ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of user identities associated with the cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterIdentityUserAssignedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterIdentityUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>The configurations that need to be overriden.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The configurations that need to be overriden.",
        SerializedName = @"configurationOverride",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IKafkaRestPropertiesConfigurationOverride) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IKafkaRestPropertiesConfigurationOverride KafkaRestPropertyConfigurationOverride { get; set; }
        /// <summary>The minimal supported tls version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minimal supported tls version.",
        SerializedName = @"minSupportedTlsVersion",
        PossibleTypes = new [] { typeof(string) })]
        string MinSupportedTlsVersion { get; set; }
        /// <summary>Indicates whether or not private link is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether or not private link is enabled.",
        SerializedName = @"privateLink",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.PrivateLink) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.PrivateLink? NetworkPropertyPrivateLink { get; set; }
        /// <summary>The direction for the resource provider connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The direction for the resource provider connection.",
        SerializedName = @"resourceProviderConnection",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.ResourceProviderConnection) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.ResourceProviderConnection? NetworkPropertyResourceProviderConnection { get; set; }
        /// <summary>The type of operating system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of operating system.",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.OSType) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.OSType? OSType { get; set; }
        /// <summary>The list of private endpoint connections.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of private endpoint connections.",
        SerializedName = @"privateEndpointConnections",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IPrivateEndpointConnection) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IPrivateEndpointConnection[] PrivateEndpointConnection { get;  }
        /// <summary>The private link configurations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The private link configurations.",
        SerializedName = @"privateLinkConfigurations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IPrivateLinkConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IPrivateLinkConfiguration[] PrivateLinkConfiguration { get; set; }
        /// <summary>The provisioning state, which only appears in the response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The provisioning state, which only appears in the response.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.HdInsightClusterProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.HdInsightClusterProvisioningState? ProvisioningState { get; set; }
        /// <summary>The cores used by the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cores used by the cluster.",
        SerializedName = @"coresUsed",
        PossibleTypes = new [] { typeof(int) })]
        int? QuotaInfoCoresUsed { get; set; }
        /// <summary>The resource ID of the user's Azure Active Directory Domain Service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the user's Azure Active Directory Domain Service.",
        SerializedName = @"aaddsResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string SecurityProfileAaddsResourceId { get; set; }
        /// <summary>Optional. The Distinguished Names for cluster user groups</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional. The Distinguished Names for cluster user groups",
        SerializedName = @"clusterUsersGroupDNs",
        PossibleTypes = new [] { typeof(string) })]
        string[] SecurityProfileClusterUsersGroupDN { get; set; }
        /// <summary>The directory type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The directory type.",
        SerializedName = @"directoryType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.DirectoryType) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.DirectoryType? SecurityProfileDirectoryType { get; set; }
        /// <summary>The organization's active directory domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The organization's active directory domain.",
        SerializedName = @"domain",
        PossibleTypes = new [] { typeof(string) })]
        string SecurityProfileDomain { get; set; }
        /// <summary>The domain admin password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The domain admin password.",
        SerializedName = @"domainUserPassword",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString SecurityProfileDomainUserPassword { get; set; }
        /// <summary>The domain user account that will have admin privileges on the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The domain user account that will have admin privileges on the cluster.",
        SerializedName = @"domainUsername",
        PossibleTypes = new [] { typeof(string) })]
        string SecurityProfileDomainUsername { get; set; }
        /// <summary>The LDAPS protocol URLs to communicate with the Active Directory.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The LDAPS protocol URLs to communicate with the Active Directory.",
        SerializedName = @"ldapsUrls",
        PossibleTypes = new [] { typeof(string) })]
        string[] SecurityProfileLdapsUrl { get; set; }
        /// <summary>
        /// User assigned identity that has permissions to read and create cluster-related artifacts in the user's AADDS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User assigned identity that has permissions to read and create cluster-related artifacts in the user's AADDS.",
        SerializedName = @"msiResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string SecurityProfileMsiResourceId { get; set; }
        /// <summary>
        /// The organizational unit within the Active Directory to place the cluster and service accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The organizational unit within the Active Directory to place the cluster and service accounts.",
        SerializedName = @"organizationalUnitDN",
        PossibleTypes = new [] { typeof(string) })]
        string SecurityProfileOrganizationalUnitDn { get; set; }
        /// <summary>The state of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The state of the cluster.",
        SerializedName = @"clusterState",
        PossibleTypes = new [] { typeof(string) })]
        string State { get; set; }
        /// <summary>The list of storage accounts in the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of storage accounts in the cluster.",
        SerializedName = @"storageaccounts",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IStorageAccount) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IStorageAccount[] StorageProfileStorageaccount { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource last modification (UTC)",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>The cluster tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cluster tier.",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.Tier) })]
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.Tier? Tier { get; set; }
        /// <summary>The version of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the cluster.",
        SerializedName = @"clusterVersion",
        PossibleTypes = new [] { typeof(string) })]
        string Version { get; set; }
        /// <summary>The availability zones.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The availability zones.",
        SerializedName = @"zones",
        PossibleTypes = new [] { typeof(string) })]
        string[] Zone { get; set; }

    }
    /// The HDInsight cluster.
    internal partial interface IClusterInternal :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.ITrackedResourceInternal
    {
        /// <summary>The AAD security group id.</summary>
        string ClientGroupInfoGroupId { get; set; }
        /// <summary>The AAD security group name.</summary>
        string ClientGroupInfoGroupName { get; set; }
        /// <summary>The cluster id.</summary>
        string ClusterId { get; set; }
        /// <summary>The compute isolation properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IComputeIsolationProperties ComputeIsolationProperty { get; set; }
        /// <summary>The flag indicates whether enable compute isolation or not.</summary>
        bool? ComputeIsolationPropertyEnableComputeIsolation { get; set; }
        /// <summary>The host sku.</summary>
        string ComputeIsolationPropertyHostSku { get; set; }
        /// <summary>The compute profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IComputeProfile ComputeProfile { get; set; }
        /// <summary>The list of roles in the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IRole[] ComputeProfileRole { get; set; }
        /// <summary>The list of connectivity endpoints.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IConnectivityEndpoint[] ConnectivityEndpoint { get; set; }
        /// <summary>The date on which the cluster was created.</summary>
        string CreatedDate { get; set; }
        /// <summary>The cluster definition.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterDefinition Definition { get; set; }
        /// <summary>The link to the blueprint.</summary>
        string DefinitionBlueprint { get; set; }
        /// <summary>The versions of different services in the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterDefinitionComponentVersion DefinitionComponentVersion { get; set; }
        /// <summary>The cluster configurations.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.IAny DefinitionConfiguration { get; set; }
        /// <summary>The type of cluster.</summary>
        string DefinitionKind { get; set; }
        /// <summary>The disk encryption properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IDiskEncryptionProperties DiskEncryptionProperty { get; set; }
        /// <summary>Algorithm identifier for encryption, default RSA-OAEP.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.JsonWebKeyEncryptionAlgorithm? DiskEncryptionPropertyEncryptionAlgorithm { get; set; }
        /// <summary>Indicates whether or not resource disk encryption is enabled.</summary>
        bool? DiskEncryptionPropertyEncryptionAtHost { get; set; }
        /// <summary>Key name that is used for enabling disk encryption.</summary>
        string DiskEncryptionPropertyKeyName { get; set; }
        /// <summary>Specific key version that is used for enabling disk encryption.</summary>
        string DiskEncryptionPropertyKeyVersion { get; set; }
        /// <summary>Resource ID of Managed Identity that is used to access the key vault.</summary>
        string DiskEncryptionPropertyMsiResourceId { get; set; }
        /// <summary>
        /// Base key vault URI where the customers key is located eg. https://myvault.vault.azure.net
        /// </summary>
        string DiskEncryptionPropertyVaultUri { get; set; }
        /// <summary>The encryption-in-transit properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IEncryptionInTransitProperties EncryptionInTransitProperty { get; set; }
        /// <summary>
        /// Indicates whether or not inter cluster node communication is encrypted in transit.
        /// </summary>
        bool? EncryptionInTransitPropertyIsEncryptionInTransitEnabled { get; set; }
        /// <summary>The list of errors.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IErrors[] Error { get; set; }
        /// <summary>The ETag for the resource</summary>
        string Etag { get; set; }
        /// <summary>The config id of excluded services.</summary>
        string ExcludedServiceConfigExcludedServicesConfigId { get; set; }
        /// <summary>The list of excluded services.</summary>
        string ExcludedServiceConfigExcludedServicesList { get; set; }
        /// <summary>The excluded services config.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IExcludedServicesConfig ExcludedServicesConfig { get; set; }
        /// <summary>The hdp version of the cluster.</summary>
        string HdpVersion { get; set; }
        /// <summary>The identity of the cluster, if configured.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterIdentity Identity { get; set; }
        /// <summary>
        /// The principal id of cluster identity. This property will only be provided for a system assigned identity.
        /// </summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>
        /// The tenant id associated with the cluster. This property will only be provided for a system assigned identity.
        /// </summary>
        string IdentityTenantId { get; set; }
        /// <summary>
        /// The type of identity used for the cluster. The type 'SystemAssigned, UserAssigned' includes both an implicitly created
        /// identity and a set of user assigned identities.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.ResourceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The list of user identities associated with the cluster. The user identity dictionary key references will be ARM resource
        /// ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterIdentityUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>The cluster kafka rest proxy configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IKafkaRestProperties KafkaRestProperty { get; set; }
        /// <summary>The information of AAD security group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClientGroupInfo KafkaRestPropertyClientGroupInfo { get; set; }
        /// <summary>The configurations that need to be overriden.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IKafkaRestPropertiesConfigurationOverride KafkaRestPropertyConfigurationOverride { get; set; }
        /// <summary>The minimal supported tls version.</summary>
        string MinSupportedTlsVersion { get; set; }
        /// <summary>The network properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.INetworkProperties NetworkProperty { get; set; }
        /// <summary>Indicates whether or not private link is enabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.PrivateLink? NetworkPropertyPrivateLink { get; set; }
        /// <summary>The direction for the resource provider connection.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.ResourceProviderConnection? NetworkPropertyResourceProviderConnection { get; set; }
        /// <summary>The type of operating system.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.OSType? OSType { get; set; }
        /// <summary>The list of private endpoint connections.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IPrivateEndpointConnection[] PrivateEndpointConnection { get; set; }
        /// <summary>The private link configurations.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IPrivateLinkConfiguration[] PrivateLinkConfiguration { get; set; }
        /// <summary>The properties of the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IClusterGetProperties Property { get; set; }
        /// <summary>The provisioning state, which only appears in the response.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.HdInsightClusterProvisioningState? ProvisioningState { get; set; }
        /// <summary>The quota information.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IQuotaInfo QuotaInfo { get; set; }
        /// <summary>The cores used by the cluster.</summary>
        int? QuotaInfoCoresUsed { get; set; }
        /// <summary>The security profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.ISecurityProfile SecurityProfile { get; set; }
        /// <summary>The resource ID of the user's Azure Active Directory Domain Service.</summary>
        string SecurityProfileAaddsResourceId { get; set; }
        /// <summary>Optional. The Distinguished Names for cluster user groups</summary>
        string[] SecurityProfileClusterUsersGroupDN { get; set; }
        /// <summary>The directory type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.DirectoryType? SecurityProfileDirectoryType { get; set; }
        /// <summary>The organization's active directory domain.</summary>
        string SecurityProfileDomain { get; set; }
        /// <summary>The domain admin password.</summary>
        System.Security.SecureString SecurityProfileDomainUserPassword { get; set; }
        /// <summary>The domain user account that will have admin privileges on the cluster.</summary>
        string SecurityProfileDomainUsername { get; set; }
        /// <summary>The LDAPS protocol URLs to communicate with the Active Directory.</summary>
        string[] SecurityProfileLdapsUrl { get; set; }
        /// <summary>
        /// User assigned identity that has permissions to read and create cluster-related artifacts in the user's AADDS.
        /// </summary>
        string SecurityProfileMsiResourceId { get; set; }
        /// <summary>
        /// The organizational unit within the Active Directory to place the cluster and service accounts.
        /// </summary>
        string SecurityProfileOrganizationalUnitDn { get; set; }
        /// <summary>The state of the cluster.</summary>
        string State { get; set; }
        /// <summary>The storage profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IStorageProfile StorageProfile { get; set; }
        /// <summary>The list of storage accounts in the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20210601.IStorageAccount[] StorageProfileStorageaccount { get; set; }
        /// <summary>Metadata pertaining to creation and last modification of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Models.Api20.ISystemData SystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>The cluster tier.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsight.Support.Tier? Tier { get; set; }
        /// <summary>The version of the cluster.</summary>
        string Version { get; set; }
        /// <summary>The availability zones.</summary>
        string[] Zone { get; set; }

    }
}