// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Extensions;

    /// <summary>ExecAction describes a "run in container" action.</summary>
    public partial class ExecAction :
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IExecAction,
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IExecActionInternal,
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeAction"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeAction __probeAction = new Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.ProbeAction();

        /// <summary>Backing field for <see cref="Command" /> property.</summary>
        private string[] _command;

        /// <summary>
        /// Command is the command line to execute inside the container, the working directory for the command is root ('/') in the
        /// container's filesystem. The command is not run inside a shell, so traditional shell instructions ('|', etc) won't work.
        /// To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero
        /// is unhealthy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Owned)]
        public string[] Command { get => this._command; set => this._command = value; }

        /// <summary>The type of the action to take to perform the health check.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Support.ProbeActionType Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeActionInternal)__probeAction).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeActionInternal)__probeAction).Type = value ; }

        /// <summary>Creates an new <see cref="ExecAction" /> instance.</summary>
        public ExecAction()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__probeAction), __probeAction);
            await eventListener.AssertObjectIsValid(nameof(__probeAction), __probeAction);
        }
    }
    /// ExecAction describes a "run in container" action.
    public partial interface IExecAction :
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeAction
    {
        /// <summary>
        /// Command is the command line to execute inside the container, the working directory for the command is root ('/') in the
        /// container's filesystem. The command is not run inside a shell, so traditional shell instructions ('|', etc) won't work.
        /// To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero
        /// is unhealthy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
        SerializedName = @"command",
        PossibleTypes = new [] { typeof(string) })]
        string[] Command { get; set; }

    }
    /// ExecAction describes a "run in container" action.
    internal partial interface IExecActionInternal :
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeActionInternal
    {
        /// <summary>
        /// Command is the command line to execute inside the container, the working directory for the command is root ('/') in the
        /// container's filesystem. The command is not run inside a shell, so traditional shell instructions ('|', etc) won't work.
        /// To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero
        /// is unhealthy.
        /// </summary>
        string[] Command { get; set; }

    }
}