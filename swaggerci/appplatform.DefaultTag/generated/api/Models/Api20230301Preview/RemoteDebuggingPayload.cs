// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Extensions;

    /// <summary>Remote debugging payload.</summary>
    public partial class RemoteDebuggingPayload :
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IRemoteDebuggingPayload,
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IRemoteDebuggingPayloadInternal
    {

        /// <summary>Backing field for <see cref="Port" /> property.</summary>
        private int? _port;

        /// <summary>Application debugging port.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Owned)]
        public int? Port { get => this._port; set => this._port = value; }

        /// <summary>Creates an new <see cref="RemoteDebuggingPayload" /> instance.</summary>
        public RemoteDebuggingPayload()
        {

        }
    }
    /// Remote debugging payload.
    public partial interface IRemoteDebuggingPayload :
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.IJsonSerializable
    {
        /// <summary>Application debugging port.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Application debugging port.",
        SerializedName = @"port",
        PossibleTypes = new [] { typeof(int) })]
        int? Port { get; set; }

    }
    /// Remote debugging payload.
    internal partial interface IRemoteDebuggingPayloadInternal

    {
        /// <summary>Application debugging port.</summary>
        int? Port { get; set; }

    }
}