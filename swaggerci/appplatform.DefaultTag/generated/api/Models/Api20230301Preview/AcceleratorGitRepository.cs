// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Extensions;

    public partial class AcceleratorGitRepository :
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IAcceleratorGitRepository,
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IAcceleratorGitRepositoryInternal
    {

        /// <summary>Backing field for <see cref="AuthSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IAcceleratorAuthSetting _authSetting;

        /// <summary>Properties of the auth setting payload.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IAcceleratorAuthSetting AuthSetting { get => (this._authSetting = this._authSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.AcceleratorAuthSetting()); set => this._authSetting = value; }

        /// <summary>The type of the auth setting.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public string AuthSettingAuthType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IAcceleratorAuthSettingInternal)AuthSetting).AuthType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IAcceleratorAuthSettingInternal)AuthSetting).AuthType = value ; }

        /// <summary>Backing field for <see cref="Branch" /> property.</summary>
        private string _branch;

        /// <summary>Git repository branch to be used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Owned)]
        public string Branch { get => this._branch; set => this._branch = value; }

        /// <summary>Backing field for <see cref="Commit" /> property.</summary>
        private string _commit;

        /// <summary>Git repository commit to be used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Owned)]
        public string Commit { get => this._commit; set => this._commit = value; }

        /// <summary>Backing field for <see cref="GitTag" /> property.</summary>
        private string _gitTag;

        /// <summary>Git repository tag to be used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Owned)]
        public string GitTag { get => this._gitTag; set => this._gitTag = value; }

        /// <summary>Backing field for <see cref="IntervalInSecond" /> property.</summary>
        private int? _intervalInSecond;

        /// <summary>Interval for checking for updates to Git or image repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Owned)]
        public int? IntervalInSecond { get => this._intervalInSecond; set => this._intervalInSecond = value; }

        /// <summary>Internal Acessors for AuthSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IAcceleratorAuthSetting Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IAcceleratorGitRepositoryInternal.AuthSetting { get => (this._authSetting = this._authSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.AcceleratorAuthSetting()); set { {_authSetting = value;} } }

        /// <summary>Backing field for <see cref="Url" /> property.</summary>
        private string _url;

        /// <summary>Git repository URL for the accelerator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Owned)]
        public string Url { get => this._url; set => this._url = value; }

        /// <summary>Creates an new <see cref="AcceleratorGitRepository" /> instance.</summary>
        public AcceleratorGitRepository()
        {

        }
    }
    public partial interface IAcceleratorGitRepository :
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.IJsonSerializable
    {
        /// <summary>The type of the auth setting.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The type of the auth setting.",
        SerializedName = @"authType",
        PossibleTypes = new [] { typeof(string) })]
        string AuthSettingAuthType { get; set; }
        /// <summary>Git repository branch to be used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Git repository branch to be used.",
        SerializedName = @"branch",
        PossibleTypes = new [] { typeof(string) })]
        string Branch { get; set; }
        /// <summary>Git repository commit to be used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Git repository commit to be used.",
        SerializedName = @"commit",
        PossibleTypes = new [] { typeof(string) })]
        string Commit { get; set; }
        /// <summary>Git repository tag to be used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Git repository tag to be used.",
        SerializedName = @"gitTag",
        PossibleTypes = new [] { typeof(string) })]
        string GitTag { get; set; }
        /// <summary>Interval for checking for updates to Git or image repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Interval for checking for updates to Git or image repository.",
        SerializedName = @"intervalInSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? IntervalInSecond { get; set; }
        /// <summary>Git repository URL for the accelerator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Git repository URL for the accelerator.",
        SerializedName = @"url",
        PossibleTypes = new [] { typeof(string) })]
        string Url { get; set; }

    }
    internal partial interface IAcceleratorGitRepositoryInternal

    {
        /// <summary>Properties of the auth setting payload.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IAcceleratorAuthSetting AuthSetting { get; set; }
        /// <summary>The type of the auth setting.</summary>
        string AuthSettingAuthType { get; set; }
        /// <summary>Git repository branch to be used.</summary>
        string Branch { get; set; }
        /// <summary>Git repository commit to be used.</summary>
        string Commit { get; set; }
        /// <summary>Git repository tag to be used.</summary>
        string GitTag { get; set; }
        /// <summary>Interval for checking for updates to Git or image repository.</summary>
        int? IntervalInSecond { get; set; }
        /// <summary>Git repository URL for the accelerator.</summary>
        string Url { get; set; }

    }
}