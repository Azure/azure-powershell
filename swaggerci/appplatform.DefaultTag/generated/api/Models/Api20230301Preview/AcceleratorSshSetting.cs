// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Extensions;

    /// <summary>Auth setting for SSH auth.</summary>
    public partial class AcceleratorSshSetting :
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IAcceleratorSshSetting,
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IAcceleratorSshSettingInternal,
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IAcceleratorAuthSetting"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IAcceleratorAuthSetting __acceleratorAuthSetting = new Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.AcceleratorAuthSetting();

        /// <summary>The type of the auth setting.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inherited)]
        public string AuthType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IAcceleratorAuthSettingInternal)__acceleratorAuthSetting).AuthType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IAcceleratorAuthSettingInternal)__acceleratorAuthSetting).AuthType = value ; }

        /// <summary>Backing field for <see cref="HostKey" /> property.</summary>
        private string _hostKey;

        /// <summary>Public SSH Key of git repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Owned)]
        public string HostKey { get => this._hostKey; set => this._hostKey = value; }

        /// <summary>Backing field for <see cref="HostKeyAlgorithm" /> property.</summary>
        private string _hostKeyAlgorithm;

        /// <summary>SSH Key algorithm of git repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Owned)]
        public string HostKeyAlgorithm { get => this._hostKeyAlgorithm; set => this._hostKeyAlgorithm = value; }

        /// <summary>Backing field for <see cref="PrivateKey" /> property.</summary>
        private string _privateKey;

        /// <summary>Private SSH Key algorithm of git repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Owned)]
        public string PrivateKey { get => this._privateKey; set => this._privateKey = value; }

        /// <summary>Creates an new <see cref="AcceleratorSshSetting" /> instance.</summary>
        public AcceleratorSshSetting()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__acceleratorAuthSetting), __acceleratorAuthSetting);
            await eventListener.AssertObjectIsValid(nameof(__acceleratorAuthSetting), __acceleratorAuthSetting);
        }
    }
    /// Auth setting for SSH auth.
    public partial interface IAcceleratorSshSetting :
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IAcceleratorAuthSetting
    {
        /// <summary>Public SSH Key of git repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public SSH Key of git repository.",
        SerializedName = @"hostKey",
        PossibleTypes = new [] { typeof(string) })]
        string HostKey { get; set; }
        /// <summary>SSH Key algorithm of git repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SSH Key algorithm of git repository.",
        SerializedName = @"hostKeyAlgorithm",
        PossibleTypes = new [] { typeof(string) })]
        string HostKeyAlgorithm { get; set; }
        /// <summary>Private SSH Key algorithm of git repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Private SSH Key algorithm of git repository.",
        SerializedName = @"privateKey",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateKey { get; set; }

    }
    /// Auth setting for SSH auth.
    internal partial interface IAcceleratorSshSettingInternal :
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IAcceleratorAuthSettingInternal
    {
        /// <summary>Public SSH Key of git repository.</summary>
        string HostKey { get; set; }
        /// <summary>SSH Key algorithm of git repository.</summary>
        string HostKeyAlgorithm { get; set; }
        /// <summary>Private SSH Key algorithm of git repository.</summary>
        string PrivateKey { get; set; }

    }
}