// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Extensions;

    /// <summary>Deployment settings payload</summary>
    public partial class DeploymentSettings :
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IDeploymentSettings,
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IDeploymentSettingsInternal
    {

        /// <summary>Backing field for <see cref="AddonConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IDeploymentSettingsAddonConfigs _addonConfig;

        /// <summary>Collection of addons</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IDeploymentSettingsAddonConfigs AddonConfig { get => (this._addonConfig = this._addonConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.DeploymentSettingsAddonConfigs()); set => this._addonConfig = value; }

        /// <summary>Backing field for <see cref="ContainerProbeSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IContainerProbeSettings _containerProbeSetting;

        /// <summary>Container liveness and readiness probe settings</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IContainerProbeSettings ContainerProbeSetting { get => (this._containerProbeSetting = this._containerProbeSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.ContainerProbeSettings()); set => this._containerProbeSetting = value; }

        /// <summary>Indicates whether disable the liveness and readiness probe</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public bool? ContainerProbeSettingDisableProbe { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IContainerProbeSettingsInternal)ContainerProbeSetting).DisableProbe; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IContainerProbeSettingsInternal)ContainerProbeSetting).DisableProbe = value ?? default(bool); }

        /// <summary>Backing field for <see cref="EnvironmentVariable" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IDeploymentSettingsEnvironmentVariables _environmentVariable;

        /// <summary>Collection of environment variables</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IDeploymentSettingsEnvironmentVariables EnvironmentVariable { get => (this._environmentVariable = this._environmentVariable ?? new Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.DeploymentSettingsEnvironmentVariables()); set => this._environmentVariable = value; }

        /// <summary>Backing field for <see cref="LivenessProbe" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbe _livenessProbe;

        /// <summary>
        /// Periodic probe of App Instance liveness. App Instance will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbe LivenessProbe { get => (this._livenessProbe = this._livenessProbe ?? new Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.Probe()); set => this._livenessProbe = value; }

        /// <summary>The type of the action to take to perform the health check.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Support.ProbeActionType? LivenessProbeActionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)LivenessProbe).ActionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)LivenessProbe).ActionType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Support.ProbeActionType)""); }

        /// <summary>Indicate whether the probe is disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public bool? LivenessProbeDisableProbe { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)LivenessProbe).DisableProbe; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)LivenessProbe).DisableProbe = value ?? default(bool); }

        /// <summary>
        /// Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public int? LivenessProbeFailureThreshold { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)LivenessProbe).FailureThreshold; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)LivenessProbe).FailureThreshold = value ?? default(int); }

        /// <summary>
        /// Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public int? LivenessProbeInitialDelaySecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)LivenessProbe).InitialDelaySecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)LivenessProbe).InitialDelaySecond = value ?? default(int); }

        /// <summary>How often (in seconds) to perform the probe. Minimum value is 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public int? LivenessProbePeriodSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)LivenessProbe).PeriodSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)LivenessProbe).PeriodSecond = value ?? default(int); }

        /// <summary>
        /// Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and
        /// startup. Minimum value is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public int? LivenessProbeSuccessThreshold { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)LivenessProbe).SuccessThreshold; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)LivenessProbe).SuccessThreshold = value ?? default(int); }

        /// <summary>Number of seconds after which the probe times out. Minimum value is 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public int? LivenessProbeTimeoutSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)LivenessProbe).TimeoutSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)LivenessProbe).TimeoutSecond = value ?? default(int); }

        /// <summary>Internal Acessors for ContainerProbeSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IContainerProbeSettings Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IDeploymentSettingsInternal.ContainerProbeSetting { get => (this._containerProbeSetting = this._containerProbeSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.ContainerProbeSettings()); set { {_containerProbeSetting = value;} } }

        /// <summary>Internal Acessors for LivenessProbe</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbe Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IDeploymentSettingsInternal.LivenessProbe { get => (this._livenessProbe = this._livenessProbe ?? new Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.Probe()); set { {_livenessProbe = value;} } }

        /// <summary>Internal Acessors for LivenessProbeAction</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeAction Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IDeploymentSettingsInternal.LivenessProbeAction { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)LivenessProbe).Action; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)LivenessProbe).Action = value; }

        /// <summary>Internal Acessors for ReadinessProbe</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbe Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IDeploymentSettingsInternal.ReadinessProbe { get => (this._readinessProbe = this._readinessProbe ?? new Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.Probe()); set { {_readinessProbe = value;} } }

        /// <summary>Internal Acessors for ReadinessProbeAction</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeAction Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IDeploymentSettingsInternal.ReadinessProbeAction { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)ReadinessProbe).Action; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)ReadinessProbe).Action = value; }

        /// <summary>Internal Acessors for ResourceRequest</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IResourceRequests Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IDeploymentSettingsInternal.ResourceRequest { get => (this._resourceRequest = this._resourceRequest ?? new Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.ResourceRequests()); set { {_resourceRequest = value;} } }

        /// <summary>Internal Acessors for Scale</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IScale Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IDeploymentSettingsInternal.Scale { get => (this._scale = this._scale ?? new Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.Scale()); set { {_scale = value;} } }

        /// <summary>Internal Acessors for StartupProbe</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbe Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IDeploymentSettingsInternal.StartupProbe { get => (this._startupProbe = this._startupProbe ?? new Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.Probe()); set { {_startupProbe = value;} } }

        /// <summary>Internal Acessors for StartupProbeAction</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeAction Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IDeploymentSettingsInternal.StartupProbeAction { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)StartupProbe).Action; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)StartupProbe).Action = value; }

        /// <summary>Backing field for <see cref="ReadinessProbe" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbe _readinessProbe;

        /// <summary>
        /// Periodic probe of App Instance service readiness. App Instance will be removed from service endpoints if the probe fails.
        /// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbe ReadinessProbe { get => (this._readinessProbe = this._readinessProbe ?? new Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.Probe()); set => this._readinessProbe = value; }

        /// <summary>The type of the action to take to perform the health check.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Support.ProbeActionType? ReadinessProbeActionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)ReadinessProbe).ActionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)ReadinessProbe).ActionType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Support.ProbeActionType)""); }

        /// <summary>Indicate whether the probe is disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public bool? ReadinessProbeDisableProbe { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)ReadinessProbe).DisableProbe; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)ReadinessProbe).DisableProbe = value ?? default(bool); }

        /// <summary>
        /// Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public int? ReadinessProbeFailureThreshold { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)ReadinessProbe).FailureThreshold; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)ReadinessProbe).FailureThreshold = value ?? default(int); }

        /// <summary>
        /// Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public int? ReadinessProbeInitialDelaySecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)ReadinessProbe).InitialDelaySecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)ReadinessProbe).InitialDelaySecond = value ?? default(int); }

        /// <summary>How often (in seconds) to perform the probe. Minimum value is 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public int? ReadinessProbePeriodSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)ReadinessProbe).PeriodSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)ReadinessProbe).PeriodSecond = value ?? default(int); }

        /// <summary>
        /// Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and
        /// startup. Minimum value is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public int? ReadinessProbeSuccessThreshold { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)ReadinessProbe).SuccessThreshold; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)ReadinessProbe).SuccessThreshold = value ?? default(int); }

        /// <summary>Number of seconds after which the probe times out. Minimum value is 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public int? ReadinessProbeTimeoutSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)ReadinessProbe).TimeoutSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)ReadinessProbe).TimeoutSecond = value ?? default(int); }

        /// <summary>Backing field for <see cref="ResourceRequest" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IResourceRequests _resourceRequest;

        /// <summary>
        /// The requested resource quantity for required CPU and Memory. It is recommended that using this field to represent the
        /// required CPU and Memory, the old field cpu and memoryInGB will be deprecated later.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IResourceRequests ResourceRequest { get => (this._resourceRequest = this._resourceRequest ?? new Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.ResourceRequests()); set => this._resourceRequest = value; }

        /// <summary>
        /// Required CPU. 1 core can be represented by 1 or 1000m. This should be 500m or 1 for Basic tier, and {500m, 1, 2, 3, 4}
        /// for Standard tier.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public string ResourceRequestCpu { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IResourceRequestsInternal)ResourceRequest).Cpu; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IResourceRequestsInternal)ResourceRequest).Cpu = value ?? null; }

        /// <summary>
        /// Required memory. 1 GB can be represented by 1Gi or 1024Mi. This should be {512Mi, 1Gi, 2Gi} for Basic tier, and {512Mi,
        /// 1Gi, 2Gi, ..., 8Gi} for Standard tier.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public string ResourceRequestMemory { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IResourceRequestsInternal)ResourceRequest).Memory; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IResourceRequestsInternal)ResourceRequest).Memory = value ?? null; }

        /// <summary>Backing field for <see cref="Scale" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IScale _scale;

        /// <summary>Scaling properties for the Azure Spring Apps App Instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IScale Scale { get => (this._scale = this._scale ?? new Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.Scale()); set => this._scale = value; }

        /// <summary>Optional. Maximum number of container replicas. Defaults to 10 if not set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public int? ScaleMaxReplica { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IScaleInternal)Scale).MaxReplica; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IScaleInternal)Scale).MaxReplica = value ?? default(int); }

        /// <summary>Optional. Minimum number of container replicas.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public int? ScaleMinReplica { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IScaleInternal)Scale).MinReplica; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IScaleInternal)Scale).MinReplica = value ?? default(int); }

        /// <summary>Scaling rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IScaleRule[] ScaleRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IScaleInternal)Scale).Rule; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IScaleInternal)Scale).Rule = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="StartupProbe" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbe _startupProbe;

        /// <summary>
        /// StartupProbe indicates that the App Instance has successfully initialized. If specified, no other probes are executed
        /// until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
        /// This can be used to provide different probe parameters at the beginning of a App Instance's lifecycle, when it might take
        /// a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbe StartupProbe { get => (this._startupProbe = this._startupProbe ?? new Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.Probe()); set => this._startupProbe = value; }

        /// <summary>The type of the action to take to perform the health check.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Support.ProbeActionType? StartupProbeActionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)StartupProbe).ActionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)StartupProbe).ActionType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Support.ProbeActionType)""); }

        /// <summary>Indicate whether the probe is disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public bool? StartupProbeDisableProbe { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)StartupProbe).DisableProbe; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)StartupProbe).DisableProbe = value ?? default(bool); }

        /// <summary>
        /// Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public int? StartupProbeFailureThreshold { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)StartupProbe).FailureThreshold; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)StartupProbe).FailureThreshold = value ?? default(int); }

        /// <summary>
        /// Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public int? StartupProbeInitialDelaySecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)StartupProbe).InitialDelaySecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)StartupProbe).InitialDelaySecond = value ?? default(int); }

        /// <summary>How often (in seconds) to perform the probe. Minimum value is 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public int? StartupProbePeriodSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)StartupProbe).PeriodSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)StartupProbe).PeriodSecond = value ?? default(int); }

        /// <summary>
        /// Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and
        /// startup. Minimum value is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public int? StartupProbeSuccessThreshold { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)StartupProbe).SuccessThreshold; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)StartupProbe).SuccessThreshold = value ?? default(int); }

        /// <summary>Number of seconds after which the probe times out. Minimum value is 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public int? StartupProbeTimeoutSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)StartupProbe).TimeoutSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeInternal)StartupProbe).TimeoutSecond = value ?? default(int); }

        /// <summary>Backing field for <see cref="TerminationGracePeriodSecond" /> property.</summary>
        private int? _terminationGracePeriodSecond;

        /// <summary>
        /// Optional duration in seconds the App Instance needs to terminate gracefully. May be decreased in delete request. Value
        /// must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down).
        /// If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after
        /// the processes running in the App Instance are sent a termination signal and the time when the processes are forcibly halted
        /// with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 90 seconds.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Owned)]
        public int? TerminationGracePeriodSecond { get => this._terminationGracePeriodSecond; set => this._terminationGracePeriodSecond = value; }

        /// <summary>Creates an new <see cref="DeploymentSettings" /> instance.</summary>
        public DeploymentSettings()
        {

        }
    }
    /// Deployment settings payload
    public partial interface IDeploymentSettings :
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.IJsonSerializable
    {
        /// <summary>Collection of addons</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Collection of addons",
        SerializedName = @"addonConfigs",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IDeploymentSettingsAddonConfigs) })]
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IDeploymentSettingsAddonConfigs AddonConfig { get; set; }
        /// <summary>Indicates whether disable the liveness and readiness probe</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether disable the liveness and readiness probe",
        SerializedName = @"disableProbe",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ContainerProbeSettingDisableProbe { get; set; }
        /// <summary>Collection of environment variables</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Collection of environment variables",
        SerializedName = @"environmentVariables",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IDeploymentSettingsEnvironmentVariables) })]
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IDeploymentSettingsEnvironmentVariables EnvironmentVariable { get; set; }
        /// <summary>The type of the action to take to perform the health check.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of the action to take to perform the health check.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Support.ProbeActionType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Support.ProbeActionType? LivenessProbeActionType { get; set; }
        /// <summary>Indicate whether the probe is disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicate whether the probe is disabled.",
        SerializedName = @"disableProbe",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LivenessProbeDisableProbe { get; set; }
        /// <summary>
        /// Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
        SerializedName = @"failureThreshold",
        PossibleTypes = new [] { typeof(int) })]
        int? LivenessProbeFailureThreshold { get; set; }
        /// <summary>
        /// Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
        SerializedName = @"initialDelaySeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? LivenessProbeInitialDelaySecond { get; set; }
        /// <summary>How often (in seconds) to perform the probe. Minimum value is 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"How often (in seconds) to perform the probe. Minimum value is 1.",
        SerializedName = @"periodSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? LivenessProbePeriodSecond { get; set; }
        /// <summary>
        /// Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and
        /// startup. Minimum value is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
        SerializedName = @"successThreshold",
        PossibleTypes = new [] { typeof(int) })]
        int? LivenessProbeSuccessThreshold { get; set; }
        /// <summary>Number of seconds after which the probe times out. Minimum value is 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of seconds after which the probe times out. Minimum value is 1.",
        SerializedName = @"timeoutSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? LivenessProbeTimeoutSecond { get; set; }
        /// <summary>The type of the action to take to perform the health check.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of the action to take to perform the health check.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Support.ProbeActionType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Support.ProbeActionType? ReadinessProbeActionType { get; set; }
        /// <summary>Indicate whether the probe is disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicate whether the probe is disabled.",
        SerializedName = @"disableProbe",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ReadinessProbeDisableProbe { get; set; }
        /// <summary>
        /// Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
        SerializedName = @"failureThreshold",
        PossibleTypes = new [] { typeof(int) })]
        int? ReadinessProbeFailureThreshold { get; set; }
        /// <summary>
        /// Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
        SerializedName = @"initialDelaySeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? ReadinessProbeInitialDelaySecond { get; set; }
        /// <summary>How often (in seconds) to perform the probe. Minimum value is 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"How often (in seconds) to perform the probe. Minimum value is 1.",
        SerializedName = @"periodSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? ReadinessProbePeriodSecond { get; set; }
        /// <summary>
        /// Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and
        /// startup. Minimum value is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
        SerializedName = @"successThreshold",
        PossibleTypes = new [] { typeof(int) })]
        int? ReadinessProbeSuccessThreshold { get; set; }
        /// <summary>Number of seconds after which the probe times out. Minimum value is 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of seconds after which the probe times out. Minimum value is 1.",
        SerializedName = @"timeoutSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? ReadinessProbeTimeoutSecond { get; set; }
        /// <summary>
        /// Required CPU. 1 core can be represented by 1 or 1000m. This should be 500m or 1 for Basic tier, and {500m, 1, 2, 3, 4}
        /// for Standard tier.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Required CPU. 1 core can be represented by 1 or 1000m. This should be 500m or 1 for Basic tier, and {500m, 1, 2, 3, 4} for Standard tier.",
        SerializedName = @"cpu",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceRequestCpu { get; set; }
        /// <summary>
        /// Required memory. 1 GB can be represented by 1Gi or 1024Mi. This should be {512Mi, 1Gi, 2Gi} for Basic tier, and {512Mi,
        /// 1Gi, 2Gi, ..., 8Gi} for Standard tier.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Required memory. 1 GB can be represented by 1Gi or 1024Mi. This should be {512Mi, 1Gi, 2Gi} for Basic tier, and {512Mi, 1Gi, 2Gi, ..., 8Gi} for Standard tier.",
        SerializedName = @"memory",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceRequestMemory { get; set; }
        /// <summary>Optional. Maximum number of container replicas. Defaults to 10 if not set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional. Maximum number of container replicas. Defaults to 10 if not set.",
        SerializedName = @"maxReplicas",
        PossibleTypes = new [] { typeof(int) })]
        int? ScaleMaxReplica { get; set; }
        /// <summary>Optional. Minimum number of container replicas.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional. Minimum number of container replicas.",
        SerializedName = @"minReplicas",
        PossibleTypes = new [] { typeof(int) })]
        int? ScaleMinReplica { get; set; }
        /// <summary>Scaling rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Scaling rules.",
        SerializedName = @"rules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IScaleRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IScaleRule[] ScaleRule { get; set; }
        /// <summary>The type of the action to take to perform the health check.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of the action to take to perform the health check.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Support.ProbeActionType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Support.ProbeActionType? StartupProbeActionType { get; set; }
        /// <summary>Indicate whether the probe is disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicate whether the probe is disabled.",
        SerializedName = @"disableProbe",
        PossibleTypes = new [] { typeof(bool) })]
        bool? StartupProbeDisableProbe { get; set; }
        /// <summary>
        /// Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
        SerializedName = @"failureThreshold",
        PossibleTypes = new [] { typeof(int) })]
        int? StartupProbeFailureThreshold { get; set; }
        /// <summary>
        /// Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
        SerializedName = @"initialDelaySeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? StartupProbeInitialDelaySecond { get; set; }
        /// <summary>How often (in seconds) to perform the probe. Minimum value is 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"How often (in seconds) to perform the probe. Minimum value is 1.",
        SerializedName = @"periodSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? StartupProbePeriodSecond { get; set; }
        /// <summary>
        /// Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and
        /// startup. Minimum value is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
        SerializedName = @"successThreshold",
        PossibleTypes = new [] { typeof(int) })]
        int? StartupProbeSuccessThreshold { get; set; }
        /// <summary>Number of seconds after which the probe times out. Minimum value is 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of seconds after which the probe times out. Minimum value is 1.",
        SerializedName = @"timeoutSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? StartupProbeTimeoutSecond { get; set; }
        /// <summary>
        /// Optional duration in seconds the App Instance needs to terminate gracefully. May be decreased in delete request. Value
        /// must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down).
        /// If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after
        /// the processes running in the App Instance are sent a termination signal and the time when the processes are forcibly halted
        /// with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 90 seconds.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional duration in seconds the App Instance needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the App Instance are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 90 seconds.",
        SerializedName = @"terminationGracePeriodSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? TerminationGracePeriodSecond { get; set; }

    }
    /// Deployment settings payload
    internal partial interface IDeploymentSettingsInternal

    {
        /// <summary>Collection of addons</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IDeploymentSettingsAddonConfigs AddonConfig { get; set; }
        /// <summary>Container liveness and readiness probe settings</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IContainerProbeSettings ContainerProbeSetting { get; set; }
        /// <summary>Indicates whether disable the liveness and readiness probe</summary>
        bool? ContainerProbeSettingDisableProbe { get; set; }
        /// <summary>Collection of environment variables</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IDeploymentSettingsEnvironmentVariables EnvironmentVariable { get; set; }
        /// <summary>
        /// Periodic probe of App Instance liveness. App Instance will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbe LivenessProbe { get; set; }
        /// <summary>The action of the probe.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeAction LivenessProbeAction { get; set; }
        /// <summary>The type of the action to take to perform the health check.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Support.ProbeActionType? LivenessProbeActionType { get; set; }
        /// <summary>Indicate whether the probe is disabled.</summary>
        bool? LivenessProbeDisableProbe { get; set; }
        /// <summary>
        /// Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.
        /// </summary>
        int? LivenessProbeFailureThreshold { get; set; }
        /// <summary>
        /// Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
        /// </summary>
        int? LivenessProbeInitialDelaySecond { get; set; }
        /// <summary>How often (in seconds) to perform the probe. Minimum value is 1.</summary>
        int? LivenessProbePeriodSecond { get; set; }
        /// <summary>
        /// Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and
        /// startup. Minimum value is 1.
        /// </summary>
        int? LivenessProbeSuccessThreshold { get; set; }
        /// <summary>Number of seconds after which the probe times out. Minimum value is 1.</summary>
        int? LivenessProbeTimeoutSecond { get; set; }
        /// <summary>
        /// Periodic probe of App Instance service readiness. App Instance will be removed from service endpoints if the probe fails.
        /// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbe ReadinessProbe { get; set; }
        /// <summary>The action of the probe.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeAction ReadinessProbeAction { get; set; }
        /// <summary>The type of the action to take to perform the health check.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Support.ProbeActionType? ReadinessProbeActionType { get; set; }
        /// <summary>Indicate whether the probe is disabled.</summary>
        bool? ReadinessProbeDisableProbe { get; set; }
        /// <summary>
        /// Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.
        /// </summary>
        int? ReadinessProbeFailureThreshold { get; set; }
        /// <summary>
        /// Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
        /// </summary>
        int? ReadinessProbeInitialDelaySecond { get; set; }
        /// <summary>How often (in seconds) to perform the probe. Minimum value is 1.</summary>
        int? ReadinessProbePeriodSecond { get; set; }
        /// <summary>
        /// Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and
        /// startup. Minimum value is 1.
        /// </summary>
        int? ReadinessProbeSuccessThreshold { get; set; }
        /// <summary>Number of seconds after which the probe times out. Minimum value is 1.</summary>
        int? ReadinessProbeTimeoutSecond { get; set; }
        /// <summary>
        /// The requested resource quantity for required CPU and Memory. It is recommended that using this field to represent the
        /// required CPU and Memory, the old field cpu and memoryInGB will be deprecated later.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IResourceRequests ResourceRequest { get; set; }
        /// <summary>
        /// Required CPU. 1 core can be represented by 1 or 1000m. This should be 500m or 1 for Basic tier, and {500m, 1, 2, 3, 4}
        /// for Standard tier.
        /// </summary>
        string ResourceRequestCpu { get; set; }
        /// <summary>
        /// Required memory. 1 GB can be represented by 1Gi or 1024Mi. This should be {512Mi, 1Gi, 2Gi} for Basic tier, and {512Mi,
        /// 1Gi, 2Gi, ..., 8Gi} for Standard tier.
        /// </summary>
        string ResourceRequestMemory { get; set; }
        /// <summary>Scaling properties for the Azure Spring Apps App Instance.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IScale Scale { get; set; }
        /// <summary>Optional. Maximum number of container replicas. Defaults to 10 if not set.</summary>
        int? ScaleMaxReplica { get; set; }
        /// <summary>Optional. Minimum number of container replicas.</summary>
        int? ScaleMinReplica { get; set; }
        /// <summary>Scaling rules.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IScaleRule[] ScaleRule { get; set; }
        /// <summary>
        /// StartupProbe indicates that the App Instance has successfully initialized. If specified, no other probes are executed
        /// until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
        /// This can be used to provide different probe parameters at the beginning of a App Instance's lifecycle, when it might take
        /// a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbe StartupProbe { get; set; }
        /// <summary>The action of the probe.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api20230301Preview.IProbeAction StartupProbeAction { get; set; }
        /// <summary>The type of the action to take to perform the health check.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Support.ProbeActionType? StartupProbeActionType { get; set; }
        /// <summary>Indicate whether the probe is disabled.</summary>
        bool? StartupProbeDisableProbe { get; set; }
        /// <summary>
        /// Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.
        /// </summary>
        int? StartupProbeFailureThreshold { get; set; }
        /// <summary>
        /// Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
        /// </summary>
        int? StartupProbeInitialDelaySecond { get; set; }
        /// <summary>How often (in seconds) to perform the probe. Minimum value is 1.</summary>
        int? StartupProbePeriodSecond { get; set; }
        /// <summary>
        /// Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and
        /// startup. Minimum value is 1.
        /// </summary>
        int? StartupProbeSuccessThreshold { get; set; }
        /// <summary>Number of seconds after which the probe times out. Minimum value is 1.</summary>
        int? StartupProbeTimeoutSecond { get; set; }
        /// <summary>
        /// Optional duration in seconds the App Instance needs to terminate gracefully. May be decreased in delete request. Value
        /// must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down).
        /// If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after
        /// the processes running in the App Instance are sent a termination signal and the time when the processes are forcibly halted
        /// with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 90 seconds.
        /// </summary>
        int? TerminationGracePeriodSecond { get; set; }

    }
}