#
# Module manifest for module 'PSGet_AzureRM'
#
# Generated by: Microsoft Corporation
#
# Generated on: 10/31/2016
#

@{

# Script module or binary module file associated with this manifest.
RootModule = '.\AzureRM.psm1'

# Version number of this module.
ModuleVersion = '3.1.0'

# Supported PSEditions
# CompatiblePSEditions = @()

# ID used to uniquely identify this module
GUID = 'b433e830-b479-4f7f-9c80-9cc6c28e1b51'

# Author of this module
Author = 'Microsoft Corporation'

# Company or vendor of this module
CompanyName = 'Microsoft Corporation'

# Copyright statement for this module
Copyright = 'Microsoft Corporation. All rights reserved.'

# Description of the functionality provided by this module
Description = 'Azure Resource Manager Module'

# Minimum version of the Windows PowerShell engine required by this module
PowerShellVersion = '3.0'

# Name of the Windows PowerShell host required by this module
# PowerShellHostName = ''

# Minimum version of the Windows PowerShell host required by this module
# PowerShellHostVersion = ''

# Minimum version of Microsoft .NET Framework required by this module. This prerequisite is valid for the PowerShell Desktop edition only.
DotNetFrameworkVersion = '4.0'

# Minimum version of the common language runtime (CLR) required by this module. This prerequisite is valid for the PowerShell Desktop edition only.
CLRVersion = '4.0'

# Processor architecture (None, X86, Amd64) required by this module
# ProcessorArchitecture = ''

# Modules that must be imported into the global environment prior to importing this module
RequiredModules = @(@{ModuleName = 'AzureRM.Profile'; RequiredVersion = '2.3.0'; }, 
               @{ModuleName = 'Azure.Storage'; RequiredVersion = '2.3.0'; }, 
               @{ModuleName = 'AzureRM.AnalysisServices'; RequiredVersion = '0.0.1'}, 
               @{ModuleName = 'AzureRM.ApiManagement'; RequiredVersion = '3.1.0'; }, 
               @{ModuleName = 'AzureRM.Automation'; RequiredVersion = '2.3.0'; }, 
               @{ModuleName = 'AzureRM.Backup'; RequiredVersion = '2.3.0'; }, 
               @{ModuleName = 'AzureRM.Batch'; RequiredVersion = '2.3.0'; }, 
               @{ModuleName = 'AzureRM.Cdn'; RequiredVersion = '2.3.0'; }, 
               @{ModuleName = 'AzureRM.CognitiveServices'; RequiredVersion = '0.4.1'; }, 
               @{ModuleName = 'AzureRM.Compute'; RequiredVersion = '2.3.0'; }, 
               @{ModuleName = 'AzureRM.DataFactories'; RequiredVersion = '2.3.0'; }, 
               @{ModuleName = 'AzureRM.DataLakeAnalytics'; RequiredVersion = '2.3.0'; }, 
               @{ModuleName = 'AzureRM.DataLakeStore'; RequiredVersion = '3.1.0'; }, 
               @{ModuleName = 'AzureRM.DevTestLabs'; RequiredVersion = '2.3.0'; }, 
               @{ModuleName = 'AzureRM.Dns'; RequiredVersion = '2.3.0'; }, 
               @{ModuleName = 'AzureRM.HDInsight'; RequiredVersion = '2.3.0'; }, 
               @{ModuleName = 'AzureRM.Insights'; RequiredVersion = '2.3.0'; }, 
               @{ModuleName = 'AzureRM.KeyVault'; RequiredVersion = '2.3.0'; }, 
               @{ModuleName = 'AzureRM.LogicApp'; RequiredVersion = '2.3.0'; }, 
               @{ModuleName = 'AzureRM.MachineLearning'; RequiredVersion = '0.11.1'; }, 
               @{ModuleName = 'AzureRM.Media'; RequiredVersion = '0.3.1'; }, 
               @{ModuleName = 'AzureRM.Network'; RequiredVersion = '3.1.0'; }, 
               @{ModuleName = 'AzureRM.NotificationHubs'; RequiredVersion = '2.3.0'; }, 
               @{ModuleName = 'AzureRM.OperationalInsights'; RequiredVersion = '2.3.0'; }, 
               @{ModuleName = 'AzureRM.PowerBIEmbedded'; RequiredVersion = '2.3.0'; }, 
               @{ModuleName = 'AzureRM.RecoveryServices'; RequiredVersion = '2.3.0'; }, 
               @{ModuleName = 'AzureRM.RecoveryServices.Backup'; RequiredVersion = '2.3.0'; }, 
               @{ModuleName = 'AzureRM.RedisCache'; RequiredVersion = '2.3.0'; }, 
               @{ModuleName = 'AzureRM.Resources'; RequiredVersion = '3.3.0'; }, 
               @{ModuleName = 'AzureRM.Scheduler'; RequiredVersion = '0.11.1'; }, 
               @{ModuleName = 'AzureRM.ServerManagement'; RequiredVersion = '2.3.0'; }, 
               @{ModuleName = 'AzureRM.SiteRecovery'; RequiredVersion = '3.2.0'; }, 
               @{ModuleName = 'AzureRM.Sql'; RequiredVersion = '2.3.0'; }, 
               @{ModuleName = 'AzureRM.Storage'; RequiredVersion = '2.3.0'; }, 
               @{ModuleName = 'AzureRM.StreamAnalytics'; RequiredVersion = '2.3.0'; }, 
               @{ModuleName = 'AzureRM.Tags'; RequiredVersion = '2.3.0'; }, 
               @{ModuleName = 'AzureRM.TrafficManager'; RequiredVersion = '2.3.0'; }, 
               @{ModuleName = 'AzureRM.UsageAggregates'; RequiredVersion = '2.3.0'; }, 
               @{ModuleName = 'AzureRM.Websites'; RequiredVersion = '2.3.0'; })

# Assemblies that must be loaded prior to importing this module
# RequiredAssemblies = @()

# Script files (.ps1) that are run in the caller's environment prior to importing this module.
# ScriptsToProcess = @()

# Type files (.ps1xml) to be loaded when importing this module
# TypesToProcess = @()

# Format files (.ps1xml) to be loaded when importing this module
# FormatsToProcess = @()

# Modules to import as nested modules of the module specified in RootModule/ModuleToProcess
# NestedModules = @()

# Functions to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no functions to export.
FunctionsToExport = 'Update-AzureRM', 'Import-AzureRM', 'Uninstall-AzureRM'

# Cmdlets to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no cmdlets to export.
CmdletsToExport = @()

# Variables to export from this module
# VariablesToExport = @()

# Aliases to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no aliases to export.
AliasesToExport = 'Install-AzureRM'

# DSC resources to export from this module
# DscResourcesToExport = @()

# List of all modules packaged with this module
# ModuleList = @()

# List of all files packaged with this module
# FileList = @()

# Private data to pass to the module specified in RootModule/ModuleToProcess. This may also contain a PSData hashtable with additional module metadata used by PowerShell.
PrivateData = @{

    PSData = @{

        # Tags applied to this module. These help with module discovery in online galleries.
        # Tags = @()

        # A URL to the license for this module.
        LicenseUri = 'https://raw.githubusercontent.com/Azure/azure-powershell/dev/LICENSE.txt'

        # A URL to the main website for this project.
        ProjectUri = 'https://github.com/Azure/azure-powershell'

        # A URL to an icon representing this module.
        # IconUri = ''

        # ReleaseNotes of this module
        ReleaseNotes = '2016.11.02 - Version 3.1.0
* ApiManagement
    * Fixed cmdlet Import-AzureRmApiManagementApi when importing Api by SpecificationByUrl parameter
    * New-AzureRmApiManagement supports creating an ApiManagement service in a VirtualNetwork and with additional regions
* AzureBatch
    * Rename cmdlet Get-AzureRmBatchSubscriptionQuotas to Get-AzureRmBatchLocationsQuotas (an alias for the old command was created)
        - Rename return type PSBatchSubscriptionQuotas to PSBatchLocationQuotas (no property changes)
* Compute
    * Update formats for list of VMs, VMScaleSets and ContainerService
        - The default format of Get-AzureRmVM, Get-AzureRmVmss and Get-AzureRmContainerService is not table format when these cmdlets call List Operation
    * Fix overprovision issue for VMScaleSet
        - Because of the bug in Compute client library (and Swagger spec) regarding overprovision property of VMScaleSet, this property did not show up correctly.
    * Better piping scenario for VMScaleSets and ContainerService cmdlets
        - VMScaleSet and ContainerService now have "ResourceGroupName" property, so when piping Get command to Delete/Update command, -ResourceGroupName is not required.
    * Separate paremater sets for Set-AzureRmVM with Generalized and Redeploy parameter
    * Reduce time taken by Get-AzureRmVMDiskEncryptionStatus cmdlet from two minutes to under five seconds
    * Allow Set-AzureRmVMDiskEncryptionStatus to be used with VHDs residing in multiple resource groups
# DataLakeAnalytics
    * Addition of Catalog CRUD cmdlets:
        - The following cmdlets are replacing Secret CRUD cmdlets. In the next release Secret CRUD cmdlets will be removed.
        - New-AzureRMDataLakeAnalyticsCatalogCredential
        - Set-AzureRMDataLakeAnalyticsCatalogCredential
        - Remove-AzureRMDataLakeAnalyticsCatalogCredential
    * Fixes for Get-AzureRMDataLakeAnalyticsCatalogItem
        - Better error messaging and support for invalid input
    * General help improvements
        - Clearer help for job operations
        - Fixed typos and incorrect examples
* DataLakeStore
    * Improvements to import and export data cmdlets
        - Drastically increased performance for distributed download scenarios, where multiple sessions are running across many clients targeting the same ADLS account.
        - Better error handling and messaging for both upload and download scenarios.
    * Full Firewall rules management CRUD
        - The below cmdlets can be used to manage firewall rules for an ADLS account:
        - Add-AzureRMDataLakeStoreFirewallRule
        - Set-AzureRMDataLakeStoreFirewallRule
        - Get-AzureRMDataLakeStoreFirewallRule
        - Remove-AzureRMDataLakeStoreFirewallRule
    * Full Trusted ID provider management CRUD
        - The below cmdlets can be used to manage trusted identity providers for an ADLS account:
        - Add-AzureRMDataLakeStoreTrustedIdProvider
        - Set-AzureRMDataLakeStoreTrustedIdProvider
        - Get-AzureRMDataLakeStoreTrustedIdProvider
        - Remove-AzureRMDataLakeStoreTrustedIdProvider
    * Account Encryption Support
        - You can now encrypt newly created ADLS accounts as well as enable encryption on existing ADLS accounts using the New-AzureRMDataLakeStoreAccount and Set-AzureRMDataLakeStoreAccount cmdlets, respectively.
* HDInsight
    * Add support to create HDInsight Spark 2.0 cluster using new cmdlet Add-AzureRmHDInsightComponentVersion to specify the component version of Spark
    * Get-AzureRmHDInsightCluster now returns the component version in a Spark 2.0 cluster
    * New cmdlet
        - Add-AzureRmHDInsightSecurityProfile
* Insights
    * Add several warning/deprecation messages about future changes to cmdlets
        - Add-AzureRmAutoscaleSetting
        - Get-AzureRmMetric
        - Get-AzureRmMetricDefinition
        - New-AzureRmAutoscaleRule
        - Remove-AzureRmAlertRule
        - Remove-AzureRmAutoscaleSetting
        - Remove-AzureRmLogProfile
    * Add new parameter to Set-AzureRmDiagnosticSetting
        - Parameter WorkspaceId is the OMS workspace Id
* MachineLearning
    * Add support for Azure Machine Learning Committment Plans
        - Get-AzureRmMLCommitmentAssociation
        - Get-AzureRmMLCommitmentPlan
        - Get-AzureRmMLCommitmentPlanUsageHistory
        - Move-AzureRmMLCommitmentAssociation
        - New-AzureRmMLCommitmentPlan
        - Remove-AzureRmMLCommitmentPlan
        - Update-AzureRmMLCommitmentPlan
* Network
    * Add-AzureRmVirtualNetworkPeering
        - Parameter AlloowGatewayTransit renamed to AllowGatewayTransit (an alias for the old parameter was created)
        - Fixed issue where UseRemoteGateway property was not being populated in the request to the server
    * Get-AzureRmEffectiveNetworkSecurityGroup
        - Add warning if there is no response from GetEffectiveNSG
    * Add Source property to EffectiveRoute
* NotificationHubs
    * New cmdlets
        - New-AzureRmNotificationHubKey
        - New-AzureRmNotificationHubsNamespaceKey
* OperationalInsights
    * Add new parameter to cmdlet New-AzureRmOperationalInsightsWindowsPerformanceCounterDataSource
        - UseLegacyCollector (switch parameter) will enable collection of 32-bit legacy performance counters on 64-bit machines
    * Rename New-AzureRmOperationalInsightsAzureAuditDataSource to New-AzureRmOperationalInsightsAzureActivityLogDataSource (an alias for the old command was created)
    * Get-AzureRmOperationalInsightsDataSource returns null instead of throwing an exception if not found
    * New-AzureRmOperationalInsightsComputerGroup now supports defining a group simply by separating computer names with commas
* Profile
    * Add-AzureRmAccount
        - Add position for Credential parameter so the following command is allowed: Add-AzureRmAccount (Get-Credential)
        - Updated parameter sets so the SubscriptionId and SubscriptionName are mutually exclusive
* Resources
    * Lookup of AAD group by Id now uses GetObjectsByObjectId AAD Graph call instead of Groups/<id>
        - This will enable Groups lookup in CSP scenario
    * Remove unnecessary AAD graph call in Get role assignments logic
        - Only make call when needed instead of always
    * Fixed issue where Remove-AzureRmResource would throw an exception if one of the resources passed through the pipeline failed to be removed
        - If cmdlet fails to remove one of the resources, the result will not have an effect on the removal of other resources'

        # External dependent modules of this module
        # ExternalModuleDependencies = ''

    } # End of PSData hashtable
    
 } # End of PrivateData hashtable

# HelpInfo URI of this module
# HelpInfoURI = ''

# Default prefix for commands exported from this module. Override the default prefix using Import-Module -Prefix.
# DefaultCommandPrefix = ''

}
