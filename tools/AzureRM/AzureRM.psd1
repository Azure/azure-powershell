#
# Module manifest for module 'PSGet_AzureRM'
#
# Generated by: Microsoft Corporation
#
# Generated on: 2/21/2017
#

@{

# Script module or binary module file associated with this manifest.
RootModule = '.\AzureRM.psm1'

# Version number of this module.
ModuleVersion = '3.6.0'

# Supported PSEditions
# CompatiblePSEditions = @()

# ID used to uniquely identify this module
GUID = 'b433e830-b479-4f7f-9c80-9cc6c28e1b51'

# Author of this module
Author = 'Microsoft Corporation'

# Company or vendor of this module
CompanyName = 'Microsoft Corporation'

# Copyright statement for this module
Copyright = 'Microsoft Corporation. All rights reserved.'

# Description of the functionality provided by this module
Description = 'Azure Resource Manager Module'

# Minimum version of the Windows PowerShell engine required by this module
PowerShellVersion = '3.0'

# Name of the Windows PowerShell host required by this module
# PowerShellHostName = ''

# Minimum version of the Windows PowerShell host required by this module
# PowerShellHostVersion = ''

# Minimum version of Microsoft .NET Framework required by this module. This prerequisite is valid for the PowerShell Desktop edition only.
DotNetFrameworkVersion = '4.0'

# Minimum version of the common language runtime (CLR) required by this module. This prerequisite is valid for the PowerShell Desktop edition only.
CLRVersion = '4.0'

# Processor architecture (None, X86, Amd64) required by this module
# ProcessorArchitecture = ''

# Modules that must be imported into the global environment prior to importing this module
RequiredModules = @(@{ModuleName = 'AzureRM.Profile'; RequiredVersion = '2.6.0'; }, 
               @{ModuleName = 'Azure.Storage'; RequiredVersion = '2.6.0'; }, 
               @{ModuleName = 'AzureRM.AnalysisServices'; RequiredVersion = '0.0.4'; }, 
               @{ModuleName = 'Azure.AnalysisServices'; RequiredVersion = '0.0.2'; }, 
               @{ModuleName = 'AzureRM.ApiManagement'; RequiredVersion = '3.4.0'; }, 
               @{ModuleName = 'AzureRM.Automation'; RequiredVersion = '2.6.0'; }, 
               @{ModuleName = 'AzureRM.Backup'; RequiredVersion = '2.6.0'; }, 
               @{ModuleName = 'AzureRM.Batch'; RequiredVersion = '2.6.0'; }, 
               @{ModuleName = 'AzureRM.Cdn'; RequiredVersion = '2.6.0'; }, 
               @{ModuleName = 'AzureRM.CognitiveServices'; RequiredVersion = '0.4.4'; }, 
               @{ModuleName = 'AzureRM.Compute'; RequiredVersion = '2.7.0'; }, 
               @{ModuleName = 'AzureRM.DataFactories'; RequiredVersion = '2.6.0'; }, 
               @{ModuleName = 'AzureRM.DataLakeAnalytics'; RequiredVersion = '2.6.0'; }, 
               @{ModuleName = 'AzureRM.DataLakeStore'; RequiredVersion = '3.4.0'; }, 
               @{ModuleName = 'AzureRM.DevTestLabs'; RequiredVersion = '2.6.0'; }, 
               @{ModuleName = 'AzureRM.Dns'; RequiredVersion = '2.6.0'; }, 
               @{ModuleName = 'AzureRM.EventHub'; RequiredVersion = '0.0.3'; }, 
               @{ModuleName = 'AzureRM.HDInsight'; RequiredVersion = '2.6.0'; }, 
               @{ModuleName = 'AzureRM.Insights'; RequiredVersion = '2.6.0'; }, 
               @{ModuleName = 'AzureRM.IoTHub'; RequiredVersion = '1.2.0'; }, 
               @{ModuleName = 'AzureRM.KeyVault'; RequiredVersion = '2.6.0'; }, 
               @{ModuleName = 'AzureRM.LogicApp'; RequiredVersion = '2.6.0'; }, 
               @{ModuleName = 'AzureRM.MachineLearning'; RequiredVersion = '0.11.4'; }, 
               @{ModuleName = 'AzureRM.Media'; RequiredVersion = '0.3.4'; }, 
               @{ModuleName = 'AzureRM.Network'; RequiredVersion = '3.5.0'; }, 
               @{ModuleName = 'AzureRM.NotificationHubs'; RequiredVersion = '2.6.0'; }, 
               @{ModuleName = 'AzureRM.OperationalInsights'; RequiredVersion = '2.6.0'; }, 
               @{ModuleName = 'AzureRM.PowerBIEmbedded'; RequiredVersion = '2.6.0'; }, 
               @{ModuleName = 'AzureRM.RecoveryServices'; RequiredVersion = '2.6.0'; }, 
               @{ModuleName = 'AzureRM.RecoveryServices.Backup'; RequiredVersion = '2.6.0'; }, 
               @{ModuleName = 'AzureRM.RedisCache'; RequiredVersion = '2.6.0'; }, 
               @{ModuleName = 'AzureRM.Resources'; RequiredVersion = '3.6.0'; }, 
               @{ModuleName = 'AzureRM.Scheduler'; RequiredVersion = '0.11.4'; }, 
               @{ModuleName = 'AzureRM.ServerManagement'; RequiredVersion = '2.6.0'; }, 
               @{ModuleName = 'AzureRM.ServiceBus'; RequiredVersion = '0.0.3'; }, 
               @{ModuleName = 'AzureRM.SiteRecovery'; RequiredVersion = '3.5.0'; }, 
               @{ModuleName = 'AzureRM.Sql'; RequiredVersion = '2.6.0'; }, 
               @{ModuleName = 'AzureRM.Storage'; RequiredVersion = '2.6.0'; }, 
               @{ModuleName = 'AzureRM.StreamAnalytics'; RequiredVersion = '2.6.0'; }, 
               @{ModuleName = 'AzureRM.Tags'; RequiredVersion = '2.6.0'; }, 
               @{ModuleName = 'AzureRM.TrafficManager'; RequiredVersion = '2.6.0'; }, 
               @{ModuleName = 'AzureRM.UsageAggregates'; RequiredVersion = '2.6.0'; }, 
               @{ModuleName = 'AzureRM.Websites'; RequiredVersion = '2.6.0'; })

# Assemblies that must be loaded prior to importing this module
# RequiredAssemblies = @()

# Script files (.ps1) that are run in the caller's environment prior to importing this module.
# ScriptsToProcess = @()

# Type files (.ps1xml) to be loaded when importing this module
# TypesToProcess = @()

# Format files (.ps1xml) to be loaded when importing this module
# FormatsToProcess = @()

# Modules to import as nested modules of the module specified in RootModule/ModuleToProcess
# NestedModules = @()

# Functions to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no functions to export.
FunctionsToExport = 'Update-AzureRM', 'Import-AzureRM', 'Uninstall-AzureRM'

# Cmdlets to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no cmdlets to export.
CmdletsToExport = @()

# Variables to export from this module
# VariablesToExport = @()

# Aliases to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no aliases to export.
AliasesToExport = 'Install-AzureRM'

# DSC resources to export from this module
# DscResourcesToExport = @()

# List of all modules packaged with this module
# ModuleList = @()

# List of all files packaged with this module
# FileList = @()

# Private data to pass to the module specified in RootModule/ModuleToProcess. This may also contain a PSData hashtable with additional module metadata used by PowerShell.
PrivateData = @{

    PSData = @{

        # Tags applied to this module. These help with module discovery in online galleries.
        # Tags = @()

        # A URL to the license for this module.
        LicenseUri = 'https://raw.githubusercontent.com/Azure/azure-powershell/dev/LICENSE.txt'

        # A URL to the main website for this project.
        ProjectUri = 'https://github.com/Azure/azure-powershell'

        # A URL to an icon representing this module.
        # IconUri = ''

        # ReleaseNotes of this module
        ReleaseNotes = '## 2017.02.22 - Version 3.6.0
* AnalysisServices
    * Added State property in additional to ProvisioningState
        - All the cmdlet returning AnalysisService would have a new property ''State'' used outside of provisioing.
        - The ''State'' is intended to check status outside of provisioning, while ''ProvisioningState'' is intended to check status related to Provisioning.
        - ProvisioningState and State are same in service side at this moment, the service side would differenciate ProvisioningState and State in future
* CognitiveServices
    * Integrate with Cognitive Services Management SDK 0.2.1 to support more Cognitive Services API Types and SKUs.
    * Remove the validation against “Type” and “SkuName” of Cognitive Services Account, this will allow the script to support new APIs/SKUs without changes.
* Compute
    * Updated Set-AzureRmVMDscExtension cmdlet WmfVersion parameter to support "5.1"
    * Updated Set-AzureRmVMChefExtension cmdlet to add following new options :
      - Daemon: Configures the chef-client service for unattended execution. e.g. -Daemon ''none'' or e.g. -Daemon ''service''."
      - Secret: The encryption key used to encrypt and decrypt the data bag item values.
      - SecretFile: The path to the file that contains the encryption key used to encrypt and decrypt the data bag item values.
    * Fix for Get-AzureRmVM: Get-AzureRmVM did not display anything when the output includes availability set property.
    * New cmdlets:
        - Update-AzureRmAvailabilitySet: can update an unmanaged availability set to a managed availability set.
        - Add-AzureRmVmssDataDisk, Remove-AzureRmVmssDataDisk
    * New parameter, SkipVmBackup, for cmdlet Set-AzureRmVMDiskEncryptionExtension to allow user to skip backup creation for Linux VMs
* DataFactories
    * Fixed Get-AzureRmDataFactoryActivityWindow so it works for named pipeline and activity
* DataLakeAnalytics
    * Add Firewall Rule support to Data Lake Analytics:
        - Add-AzureRMDataLakeAnalyticsFirewallRule
        - Get-AzureRMDataLakeAnalyticsFirewallRule
        - Set-AzureRMDataLakeAnalyticsFirewallRule
        - Remove-AzureRMDataLakeAnalyticsFirewallRule
        - Set-AzureRMDataLakeAnalyticsAccount supports enabling/disabling the firewall and allowing/blocking Azure originating IPs through the firewall
        - Warnings will be raised if updating firewall rules when the firewall is disabled
    * Fix Get-AzureRMDataLakeAnalyticsJob functionality:
        - Top now correctly returns the number of jobs specified. The default number of jobs to return is 500. The more jobs requested the longer the command will take.
    * Remove explicit restrictions on resource locations. If Data Lake Analytics is not supported in a region, we will surface an error from the service.
* DataLakeStore
    * Update Upload and Download commands to use the new and improved Upload/Download helpers in the new DataLake.Store clients. This also gives better diagnostic logging, if enabled.
    * Default thread counts for Upload and download are now computed on a best effort basis based on the data being uploaded or downloaded. This should allow for good performance without specifying a thread count.
    * Update to Set-AzureRMDataLakeStoreAccount to allow for enabling and disabling Azure originating IPs through the firewall
    * Add warnings to Add and Set-AzureRMDataLakeStoreFirewallRule and AzureRMDataLakeStoreTrustedIdProvider if they are disabled
    * Remove explicit restrictions on resource locations. If Data Lake Store is not supported in a region, we will surface an error from the service.
* EventHub
    * Future Breaking Change Notification: We''ve added a warning about removing property ''ResourceGroupName'' from the returned NamespceAttributes from cmdlets New-AzureRmEventHubNamespace, Get-AzureRmEvnetHubNamespace and Set-AzureRmEvnetHubNamespace
* Insights
    * Allow users to unselect data sinks for Set-AzureRmDiagnosticSettings
* Network
    * Added support for network Watcher APIs
        - New-AzureRmNetworkWatcher
        - Get-AzureRmNetworkWatcher
        - Remove-AzureRmNetworkWatcher
        - New-AzureRmPacketCaptureFilterConfig
        - New-AzureRmNetworkWatcherPacketCapture
        - Get-AzureRmNetworkWatcherPacketCapture
        - Stop-AzureRmNetworkWatcherPacketCapture
        - Remove-AzureRmNetworkWatcherPacketCapture
        - Get-AzureRmNetworkWatcherFlowLogSatus
        - Get-AzureRmNetworkWatcherNextHop
        - Get-AzureRmNetworkWatcherSecurityGroupView
        - Get-AzureRmNetworkWatcherTopology
        - Get-AzureRmNetworkWatcherTroubleshootingResult
        - Set-AzureRmNetworkWatcherConfigFlowLog
        - Start-AzureRmNetworkWatcherResourceTroubleshooting
        - Test-AzureRmNetworkWatcherIPFlow
    * Add-AzureRmExpressRouteCircuitPeeringConfig
        - Added new param :-RouteFilter
        - Added new param :-RouteFilterId
    * New-AzureRmExpressRouteCircuitPeeringConfig
        - Added new param :-RouteFilter
        - Added new param :-RouteFilterId
    * Set-AzureRmExpressRouteCircuitPeeringConfig
        - Added new param :-RouteFilter
        - Added new param :-RouteFilterId
    * New cmdlets for selective service feature 
        - Get-AzureRmRouteFilter
        - New-AzureRmRouteFilter
        - Set-AzureRmRouteFilter
        - Remove-AzureRmRouteFilter
        - Add-AzureRmRouteFilterRuleConfig
        - Get-AzureRmRouteFilterRuleConfigobject
        - New-AzureRmRouteFilterRuleConfig
        - Set-AzureRmRouteFilterRuleConfig
        - Remove-AzureRmRouteFilterRuleConfig
* Resources
    * Support policy parameters for New-AzureRmPolicyDefinition and New-AzureRmPolicyAssignment
        - Users can now use Parameter parameter with New-AzureRmPolicyDefinition. This accepts both JSON string and file path.
        - Users can now provide policy parameter values in New-AzureRmPolicyAssignment in a couple of ways, including JSON string, file path, PS object, and through PowerShell parameters. 
* Scheduler
    * Fixed issue to properly encode HTTP jobs'' callback Uri in Scheduler PowerShell cmdlet
* Sql
    * Adding new cmdlets for support for Azure SQL feature Transparent Data Encryption (TDE) with Bring Your Own Key (BYOK) Support
    	- TDE with BYOK support is a new feature in Azure SQL, which allows users to encrypt their database with a key from Azure Key Vault. This feature is currently in private preview.
    	- Get-AzureRmSqlServerKeyVaultKey : This cmdlet returns a list of Azure Key Vault keys added to a Sql Server.
    	- Add-AzureRmSqlServerKeyVaultKey : This cmdlet adds an Azure Key Vault key to a Sql Server.
    	- Remove-AzureRmSqlServerKeyVaultKey : This cmdlet removes an Azure Key Vault key from a Sql Server.
    	- Get-AzureRmSqlServerTransparentDataEncryptionProtector : This cmdlet returns the current encryption protector for a Sql Server.
    	- Set-AzureRmSqlServerTransparentDataEncryptionProtector : This cmdlet sets the encryption protector for a Sql Server. The encryption protector can be set to a key from Azure Key Vault or a key that is managed by Azure Sql.
    * New feature: Set--AzureRmSqlDatabaseAuditing  and Set-AzureRmSqlDatabaseServerAuditingPolicy supports setting secondary storage key for AuditType Blob 
    * Bug fix: Remove-AzureRmSqlDatabaseAuditing should set the UseServerDefault value to disabled 
    * Bug fix: Fixing an issue of selecting classic storage account when creating / updating Auditing or Threat Detection policies
    * Bug fix: Set-AzureRmSqlDatabaseAuditing and Set-AzureRmSqlDatabaseServerAuditingPolicy commands use the AuditType value that was previously defined in case it has not been configured by the user.
    * Bug fix: In case Blob Auditing is defined, Remove-AzureRmSqlDatabaseAuditing and Remove-AzureRmSqlDatabaseServerAuditingPolicy commands disable the Auditing settings.
    * Adding new cmdlets for support for Azure SQL feature AutoDR:
      -This is a new feature in Azure SQL that supports failover of multiple Azure Sql Databases to the partner server at the same time during disaster and allows automatic failover
      - Add-AzureRmSqlDatabaseToFailoverGroup add Azure Sql Databases into a Failover Group
      - Get-AzureRmSqlDatabaseFailoverGroup get the Failover Group entity
      - New-AzureRmSqlDatabaseFailoverGroup creates a new Failover Group
      - Remove-AzureRmSqlDatabaseFromFailoverGroup removes Azure Sql Databases from a Failover Group
      - Remove-AzureRmSqlDatabaseFailoverGroup Failover Group deletes the Failover Group
      - Set-AzureRmSqlDatabaseFailoverGroup set Azure Sql Database Failover Policy and Grace Period entities of the Failover Group
      - Switch-AzureRmSqlDatabaseFailoverGroup issues the failover operation with data loss or without data loss  
* Storage
    * Upgrade Microsoft.Azure.Management.Storage to version 6.1.0-preview
    * Add File Encryption features support to resource mode storage account cmdlets
        - New-AzureRmStorageAccount
        - Set-AzureRmStorageAccount
'

        # External dependent modules of this module
        # ExternalModuleDependencies = ''

    } # End of PSData hashtable
    
 } # End of PrivateData hashtable

# HelpInfo URI of this module
# HelpInfoURI = ''

# Default prefix for commands exported from this module. Override the default prefix using Import-Module -Prefix.
# DefaultCommandPrefix = ''

}

