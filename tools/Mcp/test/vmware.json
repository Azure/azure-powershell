{
  "swagger": "2.0",
  "info": {
    "title": "Azure VMware Solution API",
    "version": "2023-09-01",
    "description": "Azure VMware Solution API",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Locations"
    },
    {
      "name": "PrivateClouds"
    },
    {
      "name": "Clusters"
    },
    {
      "name": "Datastores"
    },
    {
      "name": "HcxEnterpriseSites"
    },
    {
      "name": "Authorizations"
    },
    {
      "name": "GlobalReachConnections"
    },
    {
      "name": "WorkloadNetworks"
    },
    {
      "name": "WorkloadNetworkSegments"
    },
    {
      "name": "WorkloadNetworkGateways"
    },
    {
      "name": "WorkloadNetworkVirtualMachines"
    },
    {
      "name": "CloudLinks"
    },
    {
      "name": "Addons"
    },
    {
      "name": "VirtualMachines"
    },
    {
      "name": "PlacementPolicies"
    },
    {
      "name": "ScriptPackages"
    },
    {
      "name": "ScriptCmdlets"
    },
    {
      "name": "ScriptExecutions"
    },
    {
      "name": "IscsiPaths"
    }
  ],
  "paths": {
    "/providers/Microsoft.AVS/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AVS/locations/{location}/checkQuotaAvailability": {
      "post": {
        "operationId": "Locations_CheckQuotaAvailability",
        "tags": [
          "Locations"
        ],
        "description": "Return quota for subscription by region",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Quota"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Locations_CheckQuotaAvailability": {
            "$ref": "./examples/Locations_CheckQuotaAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AVS/locations/{location}/checkTrialAvailability": {
      "post": {
        "operationId": "Locations_CheckTrialAvailability",
        "tags": [
          "Locations"
        ],
        "description": "Return trial status for subscription by region",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "sku",
            "in": "body",
            "description": "Optionally, check for a specific SKU",
            "required": false,
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Sku"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Trial"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Locations_CheckTrialAvailability": {
            "$ref": "./examples/Locations_CheckTrialAvailability.json"
          },
          "Locations_CheckTrialAvailabilityWithSku": {
            "$ref": "./examples/Locations_CheckTrialAvailabilityWithSku.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AVS/privateClouds": {
      "get": {
        "operationId": "PrivateClouds_ListInSubscription",
        "tags": [
          "PrivateClouds"
        ],
        "description": "List PrivateCloud resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateCloudList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateClouds_ListInSubscription": {
            "$ref": "./examples/PrivateClouds_ListInSubscription.json"
          },
          "PrivateClouds_ListInSubscription_Stretched": {
            "$ref": "./examples/PrivateClouds_ListInSubscription_Stretched.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds": {
      "get": {
        "operationId": "PrivateClouds_List",
        "tags": [
          "PrivateClouds"
        ],
        "description": "List PrivateCloud resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateCloudList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateClouds_List": {
            "$ref": "./examples/PrivateClouds_List.json"
          },
          "PrivateClouds_List_Stretched": {
            "$ref": "./examples/PrivateClouds_List_Stretched.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}": {
      "get": {
        "operationId": "PrivateClouds_Get",
        "tags": [
          "PrivateClouds"
        ],
        "description": "Get a PrivateCloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateCloud"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateClouds_Get": {
            "$ref": "./examples/PrivateClouds_Get.json"
          },
          "PrivateClouds_Get_Stretched": {
            "$ref": "./examples/PrivateClouds_Get_Stretched.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateClouds_CreateOrUpdate",
        "tags": [
          "PrivateClouds"
        ],
        "description": "Create a PrivateCloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "privateCloud",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateCloud"
            },
            "x-ms-client-name": "privateCloud"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PrivateCloud' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateCloud"
            }
          },
          "201": {
            "description": "Resource 'PrivateCloud' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateCloud"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateClouds_CreateOrUpdate": {
            "$ref": "./examples/PrivateClouds_CreateOrUpdate.json"
          },
          "PrivateClouds_CreateOrUpdate_Stretched": {
            "$ref": "./examples/PrivateClouds_CreateOrUpdate_Stretched.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "PrivateClouds_Update",
        "tags": [
          "PrivateClouds"
        ],
        "description": "Update a PrivateCloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "privateCloudUpdate",
            "in": "body",
            "description": "The private cloud properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateCloudUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateCloud"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/PrivateCloud"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateClouds_Update": {
            "$ref": "./examples/PrivateClouds_Update.json"
          },
          "PrivateClouds_Update_Stretched": {
            "$ref": "./examples/PrivateClouds_Update_Stretched.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "PrivateClouds_Delete",
        "tags": [
          "PrivateClouds"
        ],
        "description": "Delete a PrivateCloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateClouds_Delete": {
            "$ref": "./examples/PrivateClouds_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/addons": {
      "get": {
        "operationId": "Addons_List",
        "tags": [
          "Addons"
        ],
        "description": "List Addon resources by PrivateCloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AddonList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Addons_List": {
            "$ref": "./examples/Addons_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/addons/{addonName}": {
      "get": {
        "operationId": "Addons_Get",
        "tags": [
          "Addons"
        ],
        "description": "Get a Addon",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "addonName",
            "in": "path",
            "description": "Name of the addon.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Addon"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Addons_Get_ArcReg": {
            "$ref": "./examples/Addons_Get_ArcReg.json"
          },
          "Addons_Get_HCX": {
            "$ref": "./examples/Addons_Get_HCX.json"
          },
          "Addons_Get_SRM": {
            "$ref": "./examples/Addons_Get_SRM.json"
          },
          "Addons_Get_VR": {
            "$ref": "./examples/Addons_Get_VR.json"
          }
        }
      },
      "put": {
        "operationId": "Addons_CreateOrUpdate",
        "tags": [
          "Addons"
        ],
        "description": "Create a Addon",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "addonName",
            "in": "path",
            "description": "Name of the addon.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "addon",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Addon"
            },
            "x-ms-client-name": "addon"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Addon' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Addon"
            }
          },
          "201": {
            "description": "Resource 'Addon' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Addon"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Addons_CreateOrUpdate_ArcReg": {
            "$ref": "./examples/Addons_CreateOrUpdate_ArcReg.json"
          },
          "Addons_CreateOrUpdate_HCX": {
            "$ref": "./examples/Addons_CreateOrUpdate_HCX.json"
          },
          "Addons_CreateOrUpdate_SRM": {
            "$ref": "./examples/Addons_CreateOrUpdate_SRM.json"
          },
          "Addons_CreateOrUpdate_VR": {
            "$ref": "./examples/Addons_CreateOrUpdate_VR.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Addons_Delete",
        "tags": [
          "Addons"
        ],
        "description": "Delete a Addon",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "addonName",
            "in": "path",
            "description": "Name of the addon.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Addons_Delete": {
            "$ref": "./examples/Addons_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/authorizations": {
      "get": {
        "operationId": "Authorizations_List",
        "tags": [
          "Authorizations"
        ],
        "description": "List ExpressRouteAuthorization resources by PrivateCloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteAuthorizationList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Authorizations_List": {
            "$ref": "./examples/Authorizations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/authorizations/{authorizationName}": {
      "get": {
        "operationId": "Authorizations_Get",
        "tags": [
          "Authorizations"
        ],
        "description": "Get a ExpressRouteAuthorization",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "authorizationName",
            "in": "path",
            "description": "Name of the ExpressRoute Circuit Authorization",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteAuthorization"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Authorizations_Get": {
            "$ref": "./examples/Authorizations_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Authorizations_CreateOrUpdate",
        "tags": [
          "Authorizations"
        ],
        "description": "Create a ExpressRouteAuthorization",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "authorizationName",
            "in": "path",
            "description": "Name of the ExpressRoute Circuit Authorization",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "authorization",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpressRouteAuthorization"
            },
            "x-ms-client-name": "authorization"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ExpressRouteAuthorization' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ExpressRouteAuthorization"
            }
          },
          "201": {
            "description": "Resource 'ExpressRouteAuthorization' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ExpressRouteAuthorization"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Authorizations_CreateOrUpdate": {
            "$ref": "./examples/Authorizations_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Authorizations_Delete",
        "tags": [
          "Authorizations"
        ],
        "description": "Delete a ExpressRouteAuthorization",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "authorizationName",
            "in": "path",
            "description": "Name of the ExpressRoute Circuit Authorization",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Authorizations_Delete": {
            "$ref": "./examples/Authorizations_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/cloudLinks": {
      "get": {
        "operationId": "CloudLinks_List",
        "tags": [
          "CloudLinks"
        ],
        "description": "List CloudLink resources by PrivateCloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudLinkList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CloudLinks_List": {
            "$ref": "./examples/CloudLinks_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/cloudLinks/{cloudLinkName}": {
      "get": {
        "operationId": "CloudLinks_Get",
        "tags": [
          "CloudLinks"
        ],
        "description": "Get a CloudLink",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "cloudLinkName",
            "in": "path",
            "description": "Name of the cloud link.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudLink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CloudLinks_Get": {
            "$ref": "./examples/CloudLinks_Get.json"
          }
        }
      },
      "put": {
        "operationId": "CloudLinks_CreateOrUpdate",
        "tags": [
          "CloudLinks"
        ],
        "description": "Create a CloudLink",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "cloudLinkName",
            "in": "path",
            "description": "Name of the cloud link.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "cloudLink",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudLink"
            },
            "x-ms-client-name": "cloudLink"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CloudLink' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/CloudLink"
            }
          },
          "201": {
            "description": "Resource 'CloudLink' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/CloudLink"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CloudLinks_CreateOrUpdate": {
            "$ref": "./examples/CloudLinks_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "CloudLinks_Delete",
        "tags": [
          "CloudLinks"
        ],
        "description": "Delete a CloudLink",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "cloudLinkName",
            "in": "path",
            "description": "Name of the cloud link.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CloudLinks_Delete": {
            "$ref": "./examples/CloudLinks_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters": {
      "get": {
        "operationId": "Clusters_List",
        "tags": [
          "Clusters"
        ],
        "description": "List Cluster resources by PrivateCloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ClusterList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Clusters_List": {
            "$ref": "./examples/Clusters_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}": {
      "get": {
        "operationId": "Clusters_Get",
        "tags": [
          "Clusters"
        ],
        "description": "Get a Cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Clusters_Get": {
            "$ref": "./examples/Clusters_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Clusters_CreateOrUpdate",
        "tags": [
          "Clusters"
        ],
        "description": "Create a Cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "cluster",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cluster"
            },
            "x-ms-client-name": "cluster"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Cluster' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "201": {
            "description": "Resource 'Cluster' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Cluster"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Clusters_CreateOrUpdate": {
            "$ref": "./examples/Clusters_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Clusters_Update",
        "tags": [
          "Clusters"
        ],
        "description": "Update a Cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterUpdate",
            "in": "body",
            "description": "The cluster properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/Cluster"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Clusters_Update": {
            "$ref": "./examples/Clusters_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Clusters_Delete",
        "tags": [
          "Clusters"
        ],
        "description": "Delete a Cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Clusters_Delete": {
            "$ref": "./examples/Clusters_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/datastores": {
      "get": {
        "operationId": "Datastores_List",
        "tags": [
          "Datastores"
        ],
        "description": "List Datastore resources by Cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DatastoreList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Datastores_List": {
            "$ref": "./examples/Datastores_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/datastores/{datastoreName}": {
      "get": {
        "operationId": "Datastores_Get",
        "tags": [
          "Datastores"
        ],
        "description": "Get a Datastore",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "datastoreName",
            "in": "path",
            "description": "Name of the datastore",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Datastore"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Datastores_Get": {
            "$ref": "./examples/Datastores_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Datastores_CreateOrUpdate",
        "tags": [
          "Datastores"
        ],
        "description": "Create a Datastore",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "datastoreName",
            "in": "path",
            "description": "Name of the datastore",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "datastore",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Datastore"
            },
            "x-ms-client-name": "datastore"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Datastore' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Datastore"
            }
          },
          "201": {
            "description": "Resource 'Datastore' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Datastore"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Datastores_CreateOrUpdate": {
            "$ref": "./examples/Datastores_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Datastores_Delete",
        "tags": [
          "Datastores"
        ],
        "description": "Delete a Datastore",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "datastoreName",
            "in": "path",
            "description": "Name of the datastore",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Datastores_Delete": {
            "$ref": "./examples/Datastores_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/listZones": {
      "post": {
        "operationId": "Clusters_ListZones",
        "tags": [
          "Clusters"
        ],
        "description": "List hosts by zone in a cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ClusterZoneList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Clusters_ListZones": {
            "$ref": "./examples/Clusters_ListZones.json"
          },
          "Clusters_ListZones_Stretched": {
            "$ref": "./examples/Clusters_ListZones_Stretched.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/placementPolicies": {
      "get": {
        "operationId": "PlacementPolicies_List",
        "tags": [
          "PlacementPolicies"
        ],
        "description": "List PlacementPolicy resources by Cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PlacementPoliciesList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PlacementPolicies_List": {
            "$ref": "./examples/PlacementPolicies_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/placementPolicies/{placementPolicyName}": {
      "get": {
        "operationId": "PlacementPolicies_Get",
        "tags": [
          "PlacementPolicies"
        ],
        "description": "Get a PlacementPolicy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "placementPolicyName",
            "in": "path",
            "description": "Name of the placement policy.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PlacementPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PlacementPolicies_Get": {
            "$ref": "./examples/PlacementPolicies_Get.json"
          }
        }
      },
      "put": {
        "operationId": "PlacementPolicies_CreateOrUpdate",
        "tags": [
          "PlacementPolicies"
        ],
        "description": "Create a PlacementPolicy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "placementPolicyName",
            "in": "path",
            "description": "Name of the placement policy.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "placementPolicy",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlacementPolicy"
            },
            "x-ms-client-name": "placementPolicy"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PlacementPolicy' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PlacementPolicy"
            }
          },
          "201": {
            "description": "Resource 'PlacementPolicy' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/PlacementPolicy"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PlacementPolicies_CreateOrUpdate": {
            "$ref": "./examples/PlacementPolicies_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "PlacementPolicies_Update",
        "tags": [
          "PlacementPolicies"
        ],
        "description": "Update a PlacementPolicy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "placementPolicyName",
            "in": "path",
            "description": "Name of the placement policy.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "placementPolicyUpdate",
            "in": "body",
            "description": "The placement policy properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlacementPolicyUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PlacementPolicy"
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/PlacementPolicy"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PlacementPolicies_Update": {
            "$ref": "./examples/PlacementPolicies_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "PlacementPolicies_Delete",
        "tags": [
          "PlacementPolicies"
        ],
        "description": "Delete a PlacementPolicy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "placementPolicyName",
            "in": "path",
            "description": "Name of the placement policy.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PlacementPolicies_Delete": {
            "$ref": "./examples/PlacementPolicies_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/virtualMachines": {
      "get": {
        "operationId": "VirtualMachines_List",
        "tags": [
          "VirtualMachines"
        ],
        "description": "List VirtualMachine resources by Cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VirtualMachinesList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VirtualMachines_List": {
            "$ref": "./examples/VirtualMachines_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/virtualMachines/{virtualMachineId}": {
      "get": {
        "operationId": "VirtualMachines_Get",
        "tags": [
          "VirtualMachines"
        ],
        "description": "Get a VirtualMachine",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "virtualMachineId",
            "in": "path",
            "description": "ID of the virtual machine.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VirtualMachine"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VirtualMachines_Get": {
            "$ref": "./examples/VirtualMachines_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/virtualMachines/{virtualMachineId}/restrictMovement": {
      "post": {
        "operationId": "VirtualMachines_RestrictMovement",
        "tags": [
          "VirtualMachines"
        ],
        "description": "Enable or disable DRS-driven VM movement restriction",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "virtualMachineId",
            "in": "path",
            "description": "ID of the virtual machine.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "restrictMovement",
            "in": "body",
            "description": "The body type of the operation request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualMachineRestrictMovement"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "VirtualMachines_RestrictMovement": {
            "$ref": "./examples/VirtualMachines_RestrictMovement.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/globalReachConnections": {
      "get": {
        "operationId": "GlobalReachConnections_List",
        "tags": [
          "GlobalReachConnections"
        ],
        "description": "List GlobalReachConnection resources by PrivateCloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GlobalReachConnectionList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GlobalReachConnections_List": {
            "$ref": "./examples/GlobalReachConnections_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/globalReachConnections/{globalReachConnectionName}": {
      "get": {
        "operationId": "GlobalReachConnections_Get",
        "tags": [
          "GlobalReachConnections"
        ],
        "description": "Get a GlobalReachConnection",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "globalReachConnectionName",
            "in": "path",
            "description": "Name of the global reach connection",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GlobalReachConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GlobalReachConnections_Get": {
            "$ref": "./examples/GlobalReachConnections_Get.json"
          }
        }
      },
      "put": {
        "operationId": "GlobalReachConnections_CreateOrUpdate",
        "tags": [
          "GlobalReachConnections"
        ],
        "description": "Create a GlobalReachConnection",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "globalReachConnectionName",
            "in": "path",
            "description": "Name of the global reach connection",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "globalReachConnection",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GlobalReachConnection"
            },
            "x-ms-client-name": "globalReachConnection"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'GlobalReachConnection' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/GlobalReachConnection"
            }
          },
          "201": {
            "description": "Resource 'GlobalReachConnection' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/GlobalReachConnection"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GlobalReachConnections_CreateOrUpdate": {
            "$ref": "./examples/GlobalReachConnections_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "GlobalReachConnections_Delete",
        "tags": [
          "GlobalReachConnections"
        ],
        "description": "Delete a GlobalReachConnection",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "globalReachConnectionName",
            "in": "path",
            "description": "Name of the global reach connection",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GlobalReachConnections_Delete": {
            "$ref": "./examples/GlobalReachConnections_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/hcxEnterpriseSites": {
      "get": {
        "operationId": "HcxEnterpriseSites_List",
        "tags": [
          "HcxEnterpriseSites"
        ],
        "description": "List HcxEnterpriseSite resources by PrivateCloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HcxEnterpriseSiteList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HcxEnterpriseSites_List": {
            "$ref": "./examples/HcxEnterpriseSites_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/hcxEnterpriseSites/{hcxEnterpriseSiteName}": {
      "get": {
        "operationId": "HcxEnterpriseSites_Get",
        "tags": [
          "HcxEnterpriseSites"
        ],
        "description": "Get a HcxEnterpriseSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "hcxEnterpriseSiteName",
            "in": "path",
            "description": "Name of the HCX Enterprise Site",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HcxEnterpriseSite"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HcxEnterpriseSites_Get": {
            "$ref": "./examples/HcxEnterpriseSites_Get.json"
          }
        }
      },
      "put": {
        "operationId": "HcxEnterpriseSites_CreateOrUpdate",
        "tags": [
          "HcxEnterpriseSites"
        ],
        "description": "Create a HcxEnterpriseSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "hcxEnterpriseSiteName",
            "in": "path",
            "description": "Name of the HCX Enterprise Site",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "hcxEnterpriseSite",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HcxEnterpriseSite"
            },
            "x-ms-client-name": "hcxEnterpriseSite"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'HcxEnterpriseSite' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/HcxEnterpriseSite"
            }
          },
          "201": {
            "description": "Resource 'HcxEnterpriseSite' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/HcxEnterpriseSite"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HcxEnterpriseSites_CreateOrUpdate": {
            "$ref": "./examples/HcxEnterpriseSites_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "HcxEnterpriseSites_Delete",
        "tags": [
          "HcxEnterpriseSites"
        ],
        "description": "Delete a HcxEnterpriseSite",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "hcxEnterpriseSiteName",
            "in": "path",
            "description": "Name of the HCX Enterprise Site",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HcxEnterpriseSites_Delete": {
            "$ref": "./examples/HcxEnterpriseSites_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/iscsiPaths": {
      "get": {
        "operationId": "IscsiPaths_ListByPrivateCloud",
        "tags": [
          "IscsiPaths"
        ],
        "description": "List IscsiPath resources by PrivateCloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IscsiPathListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IscsiPaths_ListByPrivateCloud": {
            "$ref": "./examples/IscsiPaths_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/iscsiPaths/default": {
      "get": {
        "operationId": "IscsiPaths_Get",
        "tags": [
          "IscsiPaths"
        ],
        "description": "Get a IscsiPath",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IscsiPath"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IscsiPaths_Get": {
            "$ref": "./examples/IscsiPaths_Get.json"
          }
        }
      },
      "put": {
        "operationId": "IscsiPaths_CreateOrUpdate",
        "tags": [
          "IscsiPaths"
        ],
        "description": "Create a IscsiPath",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IscsiPath"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'IscsiPath' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/IscsiPath"
            }
          },
          "201": {
            "description": "Resource 'IscsiPath' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/IscsiPath"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IscsiPaths_CreateOrUpdate": {
            "$ref": "./examples/IscsiPaths_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "IscsiPaths_Delete",
        "tags": [
          "IscsiPaths"
        ],
        "description": "Delete a IscsiPath",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IscsiPaths_Delete": {
            "$ref": "./examples/IscsiPaths_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/listAdminCredentials": {
      "post": {
        "operationId": "PrivateClouds_ListAdminCredentials",
        "tags": [
          "PrivateClouds"
        ],
        "description": "List the admin credentials for the private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AdminCredentials"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateClouds_ListAdminCredentials": {
            "$ref": "./examples/PrivateClouds_ListAdminCredentials.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/rotateNsxtPassword": {
      "post": {
        "operationId": "PrivateClouds_RotateNsxtPassword",
        "tags": [
          "PrivateClouds"
        ],
        "description": "Rotate the NSX-T Manager password",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Action completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateClouds_RotateNsxtPassword": {
            "$ref": "./examples/PrivateClouds_RotateNsxtPassword.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/rotateVcenterPassword": {
      "post": {
        "operationId": "PrivateClouds_RotateVcenterPassword",
        "tags": [
          "PrivateClouds"
        ],
        "description": "Rotate the vCenter password",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Action completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateClouds_RotateVcenterPassword": {
            "$ref": "./examples/PrivateClouds_RotateVcenterPassword.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptExecutions": {
      "get": {
        "operationId": "ScriptExecutions_List",
        "tags": [
          "ScriptExecutions"
        ],
        "description": "List ScriptExecution resources by PrivateCloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScriptExecutionsList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScriptExecutions_List": {
            "$ref": "./examples/ScriptExecutions_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptExecutions/{scriptExecutionName}": {
      "get": {
        "operationId": "ScriptExecutions_Get",
        "tags": [
          "ScriptExecutions"
        ],
        "description": "Get a ScriptExecution",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "scriptExecutionName",
            "in": "path",
            "description": "Name of the script cmdlet.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScriptExecution"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScriptExecutions_Get": {
            "$ref": "./examples/ScriptExecutions_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ScriptExecutions_CreateOrUpdate",
        "tags": [
          "ScriptExecutions"
        ],
        "description": "Create a ScriptExecution",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "scriptExecutionName",
            "in": "path",
            "description": "Name of the script cmdlet.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "scriptExecution",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScriptExecution"
            },
            "x-ms-client-name": "scriptExecution"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ScriptExecution' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ScriptExecution"
            }
          },
          "201": {
            "description": "Resource 'ScriptExecution' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ScriptExecution"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScriptExecutions_CreateOrUpdate": {
            "$ref": "./examples/ScriptExecutions_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ScriptExecutions_Delete",
        "tags": [
          "ScriptExecutions"
        ],
        "description": "Delete a ScriptExecution",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "scriptExecutionName",
            "in": "path",
            "description": "Name of the script cmdlet.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScriptExecutions_Delete": {
            "$ref": "./examples/ScriptExecutions_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptExecutions/{scriptExecutionName}/getExecutionLogs": {
      "post": {
        "operationId": "ScriptExecutions_GetExecutionLogs",
        "tags": [
          "ScriptExecutions"
        ],
        "description": "Return the logs for a script execution resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "scriptExecutionName",
            "in": "path",
            "description": "Name of the script cmdlet.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "scriptOutputStreamType",
            "in": "body",
            "description": "Name of the desired output stream to return. If not provided, will return all. An empty array will return nothing.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScriptOutputStreamType"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScriptExecution"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScriptExecutions_GetExecutionLogs": {
            "$ref": "./examples/ScriptExecutions_GetExecutionLogs.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptPackages": {
      "get": {
        "operationId": "ScriptPackages_List",
        "tags": [
          "ScriptPackages"
        ],
        "description": "List ScriptPackage resources by PrivateCloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScriptPackagesList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScriptPackages_List": {
            "$ref": "./examples/ScriptPackages_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptPackages/{scriptPackageName}": {
      "get": {
        "operationId": "ScriptPackages_Get",
        "tags": [
          "ScriptPackages"
        ],
        "description": "Get a ScriptPackage",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "scriptPackageName",
            "in": "path",
            "description": "Name of the script package.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._@]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScriptPackage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScriptPackages_Get": {
            "$ref": "./examples/ScriptPackages_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptPackages/{scriptPackageName}/scriptCmdlets": {
      "get": {
        "operationId": "ScriptCmdlets_List",
        "tags": [
          "ScriptCmdlets"
        ],
        "description": "List ScriptCmdlet resources by ScriptPackage",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "scriptPackageName",
            "in": "path",
            "description": "Name of the script package.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._@]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScriptCmdletsList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScriptCmdlets_List": {
            "$ref": "./examples/ScriptCmdlets_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptPackages/{scriptPackageName}/scriptCmdlets/{scriptCmdletName}": {
      "get": {
        "operationId": "ScriptCmdlets_Get",
        "tags": [
          "ScriptCmdlets"
        ],
        "description": "Get a ScriptCmdlet",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "scriptPackageName",
            "in": "path",
            "description": "Name of the script package.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._@]+$"
          },
          {
            "name": "scriptCmdletName",
            "in": "path",
            "description": "Name of the script cmdlet.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScriptCmdlet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScriptCmdlets_Get": {
            "$ref": "./examples/ScriptCmdlets_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks": {
      "get": {
        "operationId": "WorkloadNetworks_List",
        "tags": [
          "WorkloadNetworks"
        ],
        "description": "List WorkloadNetwork resources by PrivateCloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_List": {
            "$ref": "./examples/WorkloadNetworks_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default": {
      "get": {
        "operationId": "WorkloadNetworks_Get",
        "tags": [
          "WorkloadNetworks"
        ],
        "description": "Get a WorkloadNetwork",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetwork"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_Get": {
            "$ref": "./examples/WorkloadNetworks_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dhcpConfigurations": {
      "get": {
        "operationId": "WorkloadNetworks_ListDhcp",
        "description": "List WorkloadNetworkDhcp resources by WorkloadNetwork",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDhcpList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_ListDhcp": {
            "$ref": "./examples/WorkloadNetworks_ListDhcp.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dhcpConfigurations/{dhcpId}": {
      "get": {
        "operationId": "WorkloadNetworks_GetDhcp",
        "description": "Get a WorkloadNetworkDhcp",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DhcpIdParameter"
          },
          {
            "$ref": "#/parameters/PrivateCloudNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDhcp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_GetDhcp": {
            "$ref": "./examples/WorkloadNetworks_GetDhcp.json"
          }
        }
      },
      "put": {
        "operationId": "WorkloadNetworks_CreateDhcp",
        "description": "Create a WorkloadNetworkDhcp",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dhcpId",
            "in": "path",
            "description": "The ID of the DHCP configuration",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "workloadNetworkDhcp",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDhcp"
            },
            "x-ms-client-name": "workloadNetworkDhcp"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WorkloadNetworkDhcp' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDhcp"
            }
          },
          "201": {
            "description": "Resource 'WorkloadNetworkDhcp' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDhcp"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_CreateDhcp": {
            "$ref": "./examples/WorkloadNetworks_CreateDhcp.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "WorkloadNetworks_UpdateDhcp",
        "description": "Update a WorkloadNetworkDhcp",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dhcpId",
            "in": "path",
            "description": "The ID of the DHCP configuration",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "workloadNetworkDhcp",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDhcp"
            },
            "x-ms-client-name": "workloadNetworkDhcp"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDhcp"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_UpdateDhcp": {
            "$ref": "./examples/WorkloadNetworks_UpdateDhcp.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "WorkloadNetworks_DeleteDhcp",
        "description": "Delete a WorkloadNetworkDhcp",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dhcpId",
            "in": "path",
            "description": "The ID of the DHCP configuration",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_DeleteDhcp": {
            "$ref": "./examples/WorkloadNetworks_DeleteDhcp.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dnsServices": {
      "get": {
        "operationId": "WorkloadNetworks_ListDnsServices",
        "description": "List WorkloadNetworkDnsService resources by WorkloadNetwork",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsServicesList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_ListDnsServices": {
            "$ref": "./examples/WorkloadNetworks_ListDnsServices.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dnsServices/{dnsServiceId}": {
      "get": {
        "operationId": "WorkloadNetworks_GetDnsService",
        "description": "Get a WorkloadNetworkDnsService",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dnsServiceId",
            "in": "path",
            "description": "ID of the DNS service.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsService"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_GetDnsService": {
            "$ref": "./examples/WorkloadNetworks_GetDnsService.json"
          }
        }
      },
      "put": {
        "operationId": "WorkloadNetworks_CreateDnsService",
        "description": "Create a WorkloadNetworkDnsService",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dnsServiceId",
            "in": "path",
            "description": "ID of the DNS service.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "workloadNetworkDnsService",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsService"
            },
            "x-ms-client-name": "workloadNetworkDnsService"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WorkloadNetworkDnsService' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsService"
            }
          },
          "201": {
            "description": "Resource 'WorkloadNetworkDnsService' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsService"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_CreateDnsService": {
            "$ref": "./examples/WorkloadNetworks_CreateDnsService.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "WorkloadNetworks_UpdateDnsService",
        "description": "Update a WorkloadNetworkDnsService",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dnsServiceId",
            "in": "path",
            "description": "ID of the DNS service.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "workloadNetworkDnsService",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsService"
            },
            "x-ms-client-name": "workloadNetworkDnsService"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsService"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_UpdateDnsService": {
            "$ref": "./examples/WorkloadNetworks_UpdateDnsService.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "WorkloadNetworks_DeleteDnsService",
        "description": "Delete a WorkloadNetworkDnsService",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsServiceIdParameter"
          },
          {
            "$ref": "#/parameters/PrivateCloudNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_DeleteDnsService": {
            "$ref": "./examples/WorkloadNetworks_DeleteDnsService.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dnsZones": {
      "get": {
        "operationId": "WorkloadNetworks_ListDnsZones",
        "description": "List WorkloadNetworkDnsZone resources by WorkloadNetwork",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsZonesList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_ListDnsZones": {
            "$ref": "./examples/WorkloadNetworks_ListDnsZones.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dnsZones/{dnsZoneId}": {
      "get": {
        "operationId": "WorkloadNetworks_GetDnsZone",
        "description": "Get a WorkloadNetworkDnsZone",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dnsZoneId",
            "in": "path",
            "description": "ID of the DNS zone.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsZone"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_GetDnsZone": {
            "$ref": "./examples/WorkloadNetworks_GetDnsZone.json"
          }
        }
      },
      "put": {
        "operationId": "WorkloadNetworks_CreateDnsZone",
        "description": "Create a WorkloadNetworkDnsZone",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dnsZoneId",
            "in": "path",
            "description": "ID of the DNS zone.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "workloadNetworkDnsZone",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsZone"
            },
            "x-ms-client-name": "workloadNetworkDnsZone"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WorkloadNetworkDnsZone' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsZone"
            }
          },
          "201": {
            "description": "Resource 'WorkloadNetworkDnsZone' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsZone"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_CreateDnsZone": {
            "$ref": "./examples/WorkloadNetworks_CreateDnsZone.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "WorkloadNetworks_UpdateDnsZone",
        "description": "Update a WorkloadNetworkDnsZone",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dnsZoneId",
            "in": "path",
            "description": "ID of the DNS zone.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "workloadNetworkDnsZone",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsZone"
            },
            "x-ms-client-name": "workloadNetworkDnsZone"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsZone"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_UpdateDnsZone": {
            "$ref": "./examples/WorkloadNetworks_UpdateDnsZone.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "WorkloadNetworks_DeleteDnsZone",
        "description": "Delete a WorkloadNetworkDnsZone",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsZoneIdParameter"
          },
          {
            "$ref": "#/parameters/PrivateCloudNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_DeleteDnsZone": {
            "$ref": "./examples/WorkloadNetworks_DeleteDnsZone.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/gateways": {
      "get": {
        "operationId": "WorkloadNetworks_ListGateways",
        "tags": [
          "WorkloadNetworkGateways"
        ],
        "description": "List WorkloadNetworkGateway resources by WorkloadNetwork",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkGatewayList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_ListGateways": {
            "$ref": "./examples/WorkloadNetworks_ListGateways.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/gateways/{gatewayId}": {
      "get": {
        "operationId": "WorkloadNetworks_GetGateway",
        "tags": [
          "WorkloadNetworkGateways"
        ],
        "description": "Get a WorkloadNetworkGateway",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "gatewayId",
            "in": "path",
            "description": "The ID of the NSX Gateway",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkGateway"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_GetGateway": {
            "$ref": "./examples/WorkloadNetworks_GetGateway.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/portMirroringProfiles": {
      "get": {
        "operationId": "WorkloadNetworks_ListPortMirroring",
        "description": "List WorkloadNetworkPortMirroring resources by WorkloadNetwork",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPortMirroringList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_ListPortMirroring": {
            "$ref": "./examples/WorkloadNetworks_ListPortMirroring.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/portMirroringProfiles/{portMirroringId}": {
      "get": {
        "operationId": "WorkloadNetworks_GetPortMirroring",
        "description": "Get a WorkloadNetworkPortMirroring",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "portMirroringId",
            "in": "path",
            "description": "ID of the NSX port mirroring profile.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPortMirroring"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_GetPortMirroring": {
            "$ref": "./examples/WorkloadNetworks_GetPortMirroring.json"
          }
        }
      },
      "put": {
        "operationId": "WorkloadNetworks_CreatePortMirroring",
        "description": "Create a WorkloadNetworkPortMirroring",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "portMirroringId",
            "in": "path",
            "description": "ID of the NSX port mirroring profile.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "workloadNetworkPortMirroring",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPortMirroring"
            },
            "x-ms-client-name": "workloadNetworkPortMirroring"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WorkloadNetworkPortMirroring' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPortMirroring"
            }
          },
          "201": {
            "description": "Resource 'WorkloadNetworkPortMirroring' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPortMirroring"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_CreatePortMirroring": {
            "$ref": "./examples/WorkloadNetworks_CreatePortMirroring.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "WorkloadNetworks_UpdatePortMirroring",
        "description": "Update a WorkloadNetworkPortMirroring",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "portMirroringId",
            "in": "path",
            "description": "ID of the NSX port mirroring profile.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "workloadNetworkPortMirroring",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPortMirroring"
            },
            "x-ms-client-name": "workloadNetworkPortMirroring"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPortMirroring"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_UpdatePortMirroring": {
            "$ref": "./examples/WorkloadNetworks_UpdatePortMirroring.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "WorkloadNetworks_DeletePortMirroring",
        "description": "Delete a WorkloadNetworkPortMirroring",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortMirroringProfileParameter"
          },
          {
            "$ref": "#/parameters/PrivateCloudNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_DeletePortMirroring": {
            "$ref": "./examples/WorkloadNetworks_DeletePortMirroring.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/publicIPs": {
      "get": {
        "operationId": "WorkloadNetworks_ListPublicIPs",
        "description": "List WorkloadNetworkPublicIP resources by WorkloadNetwork",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPublicIPsList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_ListPublicIPs": {
            "$ref": "./examples/WorkloadNetworks_ListPublicIPs.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/publicIPs/{publicIPId}": {
      "get": {
        "operationId": "WorkloadNetworks_GetPublicIP",
        "description": "Get a WorkloadNetworkPublicIP",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "publicIPId",
            "in": "path",
            "description": "ID of the DNS zone.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPublicIP"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_GetPublicIP": {
            "$ref": "./examples/WorkloadNetworks_GetPublicIP.json"
          }
        }
      },
      "put": {
        "operationId": "WorkloadNetworks_CreatePublicIP",
        "description": "Create a WorkloadNetworkPublicIP",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "publicIPId",
            "in": "path",
            "description": "ID of the DNS zone.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "workloadNetworkPublicIP",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPublicIP"
            },
            "x-ms-client-name": "workloadNetworkPublicIP"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WorkloadNetworkPublicIP' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPublicIP"
            }
          },
          "201": {
            "description": "Resource 'WorkloadNetworkPublicIP' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPublicIP"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_CreatePublicIP": {
            "$ref": "./examples/WorkloadNetworks_CreatePublicIP.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "WorkloadNetworks_DeletePublicIP",
        "description": "Delete a WorkloadNetworkPublicIP",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublicIPIdParameter"
          },
          {
            "$ref": "#/parameters/PrivateCloudNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_DeletePublicIP": {
            "$ref": "./examples/WorkloadNetworks_DeletePublicIP.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/segments": {
      "get": {
        "operationId": "WorkloadNetworks_ListSegments",
        "tags": [
          "WorkloadNetworkSegments"
        ],
        "description": "List WorkloadNetworkSegment resources by WorkloadNetwork",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkSegmentsList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_ListSegments": {
            "$ref": "./examples/WorkloadNetworks_ListSegments.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/segments/{segmentId}": {
      "get": {
        "operationId": "WorkloadNetworks_GetSegment",
        "tags": [
          "WorkloadNetworkSegments"
        ],
        "description": "Get a WorkloadNetworkSegment",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "The ID of the NSX Segment",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkSegment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_GetSegment": {
            "$ref": "./examples/WorkloadNetworks_GetSegment.json"
          }
        }
      },
      "put": {
        "operationId": "WorkloadNetworks_CreateSegments",
        "tags": [
          "WorkloadNetworkSegments"
        ],
        "description": "Create a WorkloadNetworkSegment",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "The ID of the NSX Segment",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "workloadNetworkSegment",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkSegment"
            },
            "x-ms-client-name": "workloadNetworkSegment"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WorkloadNetworkSegment' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkSegment"
            }
          },
          "201": {
            "description": "Resource 'WorkloadNetworkSegment' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkSegment"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_CreateSegments": {
            "$ref": "./examples/WorkloadNetworks_CreateSegments.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "WorkloadNetworks_UpdateSegments",
        "tags": [
          "WorkloadNetworkSegments"
        ],
        "description": "Update a WorkloadNetworkSegment",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "The ID of the NSX Segment",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "workloadNetworkSegment",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkSegment"
            },
            "x-ms-client-name": "workloadNetworkSegment"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkSegment"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_UpdateSegments": {
            "$ref": "./examples/WorkloadNetworks_UpdateSegments.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "WorkloadNetworks_DeleteSegment",
        "tags": [
          "WorkloadNetworkSegments"
        ],
        "description": "Delete a WorkloadNetworkSegment",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "The ID of the NSX Segment",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_DeleteSegment": {
            "$ref": "./examples/WorkloadNetworks_DeleteSegment.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/virtualMachines": {
      "get": {
        "operationId": "WorkloadNetworks_ListVirtualMachines",
        "tags": [
          "WorkloadNetworkVirtualMachines"
        ],
        "description": "List WorkloadNetworkVirtualMachine resources by WorkloadNetwork",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkVirtualMachinesList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_ListVirtualMachines": {
            "$ref": "./examples/WorkloadNetworks_ListVirtualMachines.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/virtualMachines/{virtualMachineId}": {
      "get": {
        "operationId": "WorkloadNetworks_GetVirtualMachine",
        "tags": [
          "WorkloadNetworkVirtualMachines"
        ],
        "description": "Get a WorkloadNetworkVirtualMachine",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "virtualMachineId",
            "in": "path",
            "description": "ID of the virtual machine.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkVirtualMachine"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_GetVirtualMachine": {
            "$ref": "./examples/WorkloadNetworks_GetVirtualMachine.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/vmGroups": {
      "get": {
        "operationId": "WorkloadNetworks_ListVMGroups",
        "description": "List WorkloadNetworkVMGroup resources by WorkloadNetwork",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkVMGroupsList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_ListVMGroups": {
            "$ref": "./examples/WorkloadNetworks_ListVMGroups.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/vmGroups/{vmGroupId}": {
      "get": {
        "operationId": "WorkloadNetworks_GetVMGroup",
        "description": "Get a WorkloadNetworkVMGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "vmGroupId",
            "in": "path",
            "description": "ID of the VM group.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkVMGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_GetVMGroup": {
            "$ref": "./examples/WorkloadNetworks_GetVMGroup.json"
          }
        }
      },
      "put": {
        "operationId": "WorkloadNetworks_CreateVMGroup",
        "description": "Create a WorkloadNetworkVMGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "vmGroupId",
            "in": "path",
            "description": "ID of the VM group.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "workloadNetworkVMGroup",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkVMGroup"
            },
            "x-ms-client-name": "workloadNetworkVMGroup"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WorkloadNetworkVMGroup' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkVMGroup"
            }
          },
          "201": {
            "description": "Resource 'WorkloadNetworkVMGroup' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkVMGroup"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_CreateVMGroup": {
            "$ref": "./examples/WorkloadNetworks_CreateVMGroup.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "WorkloadNetworks_UpdateVMGroup",
        "description": "Update a WorkloadNetworkVMGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "vmGroupId",
            "in": "path",
            "description": "ID of the VM group.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "workloadNetworkVMGroup",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkVMGroup"
            },
            "x-ms-client-name": "workloadNetworkVMGroup"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkVMGroup"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_UpdateVMGroup": {
            "$ref": "./examples/WorkloadNetworks_UpdateVMGroup.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "WorkloadNetworks_DeleteVMGroup",
        "description": "Delete a WorkloadNetworkVMGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VmGroupIdParameter"
          },
          {
            "$ref": "#/parameters/PrivateCloudNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_DeleteVMGroup": {
            "$ref": "./examples/WorkloadNetworks_DeleteVMGroup.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "Addon": {
      "type": "object",
      "description": "An addon resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AddonProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AddonArcProperties": {
      "type": "object",
      "description": "The properties of an Arc addon",
      "properties": {
        "vCenter": {
          "type": "string",
          "description": "The VMware vCenter resource ID"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AddonProperties"
        }
      ],
      "x-ms-discriminator-value": "Arc"
    },
    "AddonHcxProperties": {
      "type": "object",
      "description": "The properties of an HCX addon",
      "properties": {
        "offer": {
          "type": "string",
          "description": "The HCX offer, example VMware MaaS Cloud Provider (Enterprise)"
        }
      },
      "required": [
        "offer"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AddonProperties"
        }
      ],
      "x-ms-discriminator-value": "HCX"
    },
    "AddonList": {
      "type": "object",
      "description": "The response of a Addon list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Addon items on this page",
          "items": {
            "$ref": "#/definitions/Addon"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AddonProperties": {
      "type": "object",
      "description": "The properties of an addon",
      "properties": {
        "addonType": {
          "$ref": "#/definitions/AddonType",
          "description": "Addon type"
        },
        "provisioningState": {
          "$ref": "#/definitions/AddonProvisioningState",
          "description": "The state of the addon provisioning",
          "readOnly": true
        }
      },
      "discriminator": "addonType",
      "required": [
        "addonType"
      ]
    },
    "AddonProvisioningState": {
      "type": "string",
      "description": "Addon provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Cancelled",
        "Building",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "AddonProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Cancelled",
            "value": "Cancelled",
            "description": "is cancelled"
          },
          {
            "name": "Building",
            "value": "Building",
            "description": "is building"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "AddonSrmProperties": {
      "type": "object",
      "description": "The properties of a Site Recovery Manager (SRM) addon",
      "properties": {
        "licenseKey": {
          "type": "string",
          "description": "The Site Recovery Manager (SRM) license"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AddonProperties"
        }
      ],
      "x-ms-discriminator-value": "SRM"
    },
    "AddonType": {
      "type": "string",
      "description": "Addon type",
      "enum": [
        "SRM",
        "VR",
        "HCX",
        "Arc"
      ],
      "x-ms-enum": {
        "name": "AddonType",
        "modelAsString": true,
        "values": [
          {
            "name": "SRM",
            "value": "SRM"
          },
          {
            "name": "VR",
            "value": "VR"
          },
          {
            "name": "HCX",
            "value": "HCX"
          },
          {
            "name": "Arc",
            "value": "Arc"
          }
        ]
      }
    },
    "AddonVrProperties": {
      "type": "object",
      "description": "The properties of a vSphere Replication (VR) addon",
      "properties": {
        "vrsCount": {
          "type": "integer",
          "format": "int32",
          "description": "The vSphere Replication Server (VRS) count"
        }
      },
      "required": [
        "vrsCount"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AddonProperties"
        }
      ],
      "x-ms-discriminator-value": "VR"
    },
    "AdminCredentials": {
      "type": "object",
      "description": "Administrative credentials for accessing vCenter and NSX-T",
      "properties": {
        "nsxtUsername": {
          "type": "string",
          "description": "NSX-T Manager username",
          "readOnly": true
        },
        "nsxtPassword": {
          "type": "string",
          "format": "password",
          "description": "NSX-T Manager password",
          "readOnly": true,
          "x-ms-secret": true
        },
        "vcenterUsername": {
          "type": "string",
          "description": "vCenter admin username",
          "readOnly": true
        },
        "vcenterPassword": {
          "type": "string",
          "format": "password",
          "description": "vCenter admin password",
          "readOnly": true,
          "x-ms-secret": true
        }
      }
    },
    "AffinityStrength": {
      "type": "string",
      "description": "Affinity Strength",
      "enum": [
        "Should",
        "Must"
      ],
      "x-ms-enum": {
        "name": "AffinityStrength",
        "modelAsString": true,
        "values": [
          {
            "name": "Should",
            "value": "Should",
            "description": "is should"
          },
          {
            "name": "Must",
            "value": "Must",
            "description": "is must"
          }
        ]
      }
    },
    "AffinityType": {
      "type": "string",
      "description": "Affinity type",
      "enum": [
        "Affinity",
        "AntiAffinity"
      ],
      "x-ms-enum": {
        "name": "AffinityType",
        "modelAsString": true,
        "values": [
          {
            "name": "Affinity",
            "value": "Affinity",
            "description": "is affinity"
          },
          {
            "name": "AntiAffinity",
            "value": "AntiAffinity",
            "description": "is anti-affinity"
          }
        ]
      }
    },
    "AvailabilityProperties": {
      "type": "object",
      "description": "The properties describing private cloud availability zone distribution",
      "properties": {
        "strategy": {
          "$ref": "#/definitions/AvailabilityStrategy",
          "description": "The availability strategy for the private cloud"
        },
        "zone": {
          "type": "integer",
          "format": "int32",
          "description": "The primary availability zone for the private cloud"
        },
        "secondaryZone": {
          "type": "integer",
          "format": "int32",
          "description": "The secondary availability zone for the private cloud"
        }
      }
    },
    "AvailabilityStrategy": {
      "type": "string",
      "description": "Whether the private clouds is available in a single zone or two zones",
      "enum": [
        "SingleZone",
        "DualZone"
      ],
      "x-ms-enum": {
        "name": "AvailabilityStrategy",
        "modelAsString": true,
        "values": [
          {
            "name": "SingleZone",
            "value": "SingleZone",
            "description": "in single zone"
          },
          {
            "name": "DualZone",
            "value": "DualZone",
            "description": "in two zones"
          }
        ]
      }
    },
    "AzureHybridBenefitType": {
      "type": "string",
      "description": "Azure Hybrid Benefit type",
      "enum": [
        "SqlHost",
        "None"
      ],
      "x-ms-enum": {
        "name": "AzureHybridBenefitType",
        "modelAsString": true,
        "values": [
          {
            "name": "SqlHost",
            "value": "SqlHost",
            "description": "is SqlHost"
          },
          {
            "name": "None",
            "value": "None",
            "description": "is None"
          }
        ]
      }
    },
    "Circuit": {
      "type": "object",
      "description": "An ExpressRoute Circuit",
      "properties": {
        "primarySubnet": {
          "type": "string",
          "description": "CIDR of primary subnet",
          "readOnly": true
        },
        "secondarySubnet": {
          "type": "string",
          "description": "CIDR of secondary subnet",
          "readOnly": true
        },
        "expressRouteID": {
          "type": "string",
          "description": "Identifier of the ExpressRoute Circuit (Microsoft Colo only)",
          "readOnly": true
        },
        "expressRoutePrivatePeeringID": {
          "type": "string",
          "description": "ExpressRoute Circuit private peering identifier",
          "readOnly": true
        }
      }
    },
    "CloudLink": {
      "type": "object",
      "description": "A cloud link resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CloudLinkProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "CloudLinkList": {
      "type": "object",
      "description": "The response of a CloudLink list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CloudLink items on this page",
          "items": {
            "$ref": "#/definitions/CloudLink"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CloudLinkProperties": {
      "type": "object",
      "description": "The properties of a cloud link.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/CloudLinkProvisioningState",
          "description": "The provisioning state of the resource.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/CloudLinkStatus",
          "description": "The state of the cloud link.",
          "readOnly": true
        },
        "linkedCloud": {
          "type": "string",
          "description": "Identifier of the other private cloud participating in the link."
        }
      }
    },
    "CloudLinkProvisioningState": {
      "type": "string",
      "description": "cloud link provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "CloudLinkProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      },
      "readOnly": true
    },
    "CloudLinkStatus": {
      "type": "string",
      "description": "Cloud Link status",
      "enum": [
        "Active",
        "Building",
        "Deleting",
        "Failed",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "CloudLinkStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Active",
            "value": "Active",
            "description": "is active"
          },
          {
            "name": "Building",
            "value": "Building",
            "description": "is building"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "is failed"
          },
          {
            "name": "Disconnected",
            "value": "Disconnected",
            "description": "is disconnected"
          }
        ]
      }
    },
    "Cluster": {
      "type": "object",
      "description": "A cluster resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ClusterProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        }
      },
      "required": [
        "sku"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ClusterList": {
      "type": "object",
      "description": "The response of a Cluster list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Cluster items on this page",
          "items": {
            "$ref": "#/definitions/Cluster"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ClusterProperties": {
      "type": "object",
      "description": "The properties of a cluster",
      "properties": {
        "clusterSize": {
          "type": "integer",
          "format": "int32",
          "description": "The cluster size"
        },
        "provisioningState": {
          "$ref": "#/definitions/ClusterProvisioningState",
          "description": "The state of the cluster provisioning",
          "readOnly": true
        },
        "clusterId": {
          "type": "integer",
          "format": "int32",
          "description": "The identity",
          "readOnly": true
        },
        "hosts": {
          "type": "array",
          "description": "The hosts",
          "items": {
            "type": "string"
          }
        },
        "vsanDatastoreName": {
          "type": "string",
          "description": "Name of the vsan datastore associated with the cluster"
        }
      }
    },
    "ClusterProvisioningState": {
      "type": "string",
      "description": "Cluster provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Cancelled",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "ClusterProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Cancelled",
            "value": "Cancelled",
            "description": "is cancelled"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "ClusterUpdate": {
      "type": "object",
      "description": "An update of a cluster resource",
      "properties": {
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        },
        "properties": {
          "$ref": "#/definitions/ClusterUpdateProperties",
          "description": "The properties of a cluster resource that may be updated",
          "x-ms-client-flatten": true
        }
      }
    },
    "ClusterUpdateProperties": {
      "type": "object",
      "description": "The properties of a cluster that may be updated",
      "properties": {
        "clusterSize": {
          "type": "integer",
          "format": "int32",
          "description": "The cluster size"
        },
        "hosts": {
          "type": "array",
          "description": "The hosts",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ClusterZone": {
      "type": "object",
      "description": "Zone and associated hosts info",
      "properties": {
        "hosts": {
          "type": "array",
          "description": "List of hosts belonging to the availability zone in a cluster",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "zone": {
          "type": "string",
          "description": "Availability zone identifier",
          "readOnly": true
        }
      }
    },
    "ClusterZoneList": {
      "type": "object",
      "description": "List of all zones and associated hosts for a cluster",
      "properties": {
        "zones": {
          "type": "array",
          "description": "Zone and associated hosts info",
          "items": {
            "$ref": "#/definitions/ClusterZone"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Datastore": {
      "type": "object",
      "description": "A datastore resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DatastoreProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DatastoreList": {
      "type": "object",
      "description": "The response of a Datastore list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Datastore items on this page",
          "items": {
            "$ref": "#/definitions/Datastore"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DatastoreProperties": {
      "type": "object",
      "description": "The properties of a datastore",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/DatastoreProvisioningState",
          "description": "The state of the datastore provisioning",
          "readOnly": true
        },
        "netAppVolume": {
          "$ref": "#/definitions/NetAppVolume",
          "description": "An Azure NetApp Files volume"
        },
        "diskPoolVolume": {
          "$ref": "#/definitions/DiskPoolVolume",
          "description": "An iSCSI volume"
        },
        "elasticSanVolume": {
          "$ref": "#/definitions/ElasticSanVolume",
          "description": "An Elastic SAN volume"
        },
        "status": {
          "$ref": "#/definitions/DatastoreStatus",
          "description": "The operational status of the datastore",
          "readOnly": true
        }
      }
    },
    "DatastoreProvisioningState": {
      "type": "string",
      "description": "datastore provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Cancelled",
        "Pending",
        "Creating",
        "Updating",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "DatastoreProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Cancelled",
            "value": "Cancelled",
            "description": "is cancelled"
          },
          {
            "name": "Pending",
            "value": "Pending",
            "description": "is pending"
          },
          {
            "name": "Creating",
            "value": "Creating",
            "description": "is creating"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          }
        ]
      },
      "readOnly": true
    },
    "DatastoreStatus": {
      "type": "string",
      "description": "datastore status",
      "enum": [
        "Unknown",
        "Accessible",
        "Inaccessible",
        "Attached",
        "Detached",
        "LostCommunication",
        "DeadOrError"
      ],
      "x-ms-enum": {
        "name": "DatastoreStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "is unknown"
          },
          {
            "name": "Accessible",
            "value": "Accessible",
            "description": "is accessible"
          },
          {
            "name": "Inaccessible",
            "value": "Inaccessible",
            "description": "is inaccessible"
          },
          {
            "name": "Attached",
            "value": "Attached",
            "description": "is attached"
          },
          {
            "name": "Detached",
            "value": "Detached",
            "description": "is detached"
          },
          {
            "name": "LostCommunication",
            "value": "LostCommunication",
            "description": "is lost communication"
          },
          {
            "name": "DeadOrError",
            "value": "DeadOrError",
            "description": "is dead or error"
          }
        ]
      }
    },
    "DhcpTypeEnum": {
      "type": "string",
      "description": "Type of DHCP: SERVER or RELAY.",
      "enum": [
        "SERVER",
        "RELAY"
      ],
      "x-ms-enum": {
        "name": "DhcpTypeEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "SERVER",
            "value": "SERVER"
          },
          {
            "name": "RELAY",
            "value": "RELAY"
          }
        ]
      }
    },
    "DiskPoolVolume": {
      "type": "object",
      "description": "An iSCSI volume from Microsoft.StoragePool provider",
      "properties": {
        "targetId": {
          "type": "string",
          "description": "Azure resource ID of the iSCSI target"
        },
        "lunName": {
          "type": "string",
          "description": "Name of the LUN to be used for datastore"
        },
        "mountOption": {
          "type": "string",
          "description": "Mode that describes whether the LUN has to be mounted as a datastore or\nattached as a LUN",
          "default": "MOUNT",
          "enum": [
            "MOUNT",
            "ATTACH"
          ],
          "x-ms-enum": {
            "name": "MountOptionEnum",
            "modelAsString": true,
            "values": [
              {
                "name": "MOUNT",
                "value": "MOUNT",
                "description": "is mount"
              },
              {
                "name": "ATTACH",
                "value": "ATTACH",
                "description": "is attach"
              }
            ]
          }
        },
        "path": {
          "type": "string",
          "description": "Device path",
          "readOnly": true
        }
      },
      "required": [
        "targetId",
        "lunName"
      ]
    },
    "DnsServiceLogLevelEnum": {
      "type": "string",
      "description": "DNS service log level",
      "enum": [
        "DEBUG",
        "INFO",
        "WARNING",
        "ERROR",
        "FATAL"
      ],
      "x-ms-enum": {
        "name": "DnsServiceLogLevelEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "DEBUG",
            "value": "DEBUG",
            "description": "is debug"
          },
          {
            "name": "INFO",
            "value": "INFO",
            "description": "is info"
          },
          {
            "name": "WARNING",
            "value": "WARNING",
            "description": "is warning"
          },
          {
            "name": "ERROR",
            "value": "ERROR",
            "description": "is error"
          },
          {
            "name": "FATAL",
            "value": "FATAL",
            "description": "is fatal"
          }
        ]
      }
    },
    "DnsServiceStatusEnum": {
      "type": "string",
      "description": "DNS service status",
      "enum": [
        "SUCCESS",
        "FAILURE"
      ],
      "x-ms-enum": {
        "name": "DnsServiceStatusEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "SUCCESS",
            "value": "SUCCESS",
            "description": "is success"
          },
          {
            "name": "FAILURE",
            "value": "FAILURE",
            "description": "is failure"
          }
        ]
      }
    },
    "DnsZoneType": {
      "type": "string",
      "description": "The type of DNS zone.",
      "enum": [
        "Public",
        "Private"
      ],
      "x-ms-enum": {
        "name": "DnsZoneType",
        "modelAsString": true,
        "values": [
          {
            "name": "Public",
            "value": "Public",
            "description": "Primary DNS zone."
          },
          {
            "name": "Private",
            "value": "Private",
            "description": "Private DNS zone."
          }
        ]
      }
    },
    "ElasticSanVolume": {
      "type": "object",
      "description": "An Elastic SAN volume from Microsoft.ElasticSan provider",
      "properties": {
        "targetId": {
          "type": "string",
          "format": "arm-id",
          "description": "Azure resource ID of the Elastic SAN Volume",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ElasticSan/elasticSans/volumeGroups/volumes"
              }
            ]
          }
        }
      },
      "required": [
        "targetId"
      ]
    },
    "Encryption": {
      "type": "object",
      "description": "The properties of customer managed encryption key",
      "properties": {
        "status": {
          "$ref": "#/definitions/EncryptionState",
          "description": "Status of customer managed encryption key"
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/EncryptionKeyVaultProperties",
          "description": "The key vault where the encryption key is stored"
        }
      }
    },
    "EncryptionKeyStatus": {
      "type": "string",
      "description": "Whether the the encryption key is connected or access denied",
      "enum": [
        "Connected",
        "AccessDenied"
      ],
      "x-ms-enum": {
        "name": "EncryptionKeyStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Connected",
            "value": "Connected",
            "description": "is connected"
          },
          {
            "name": "AccessDenied",
            "value": "AccessDenied",
            "description": "is access denied"
          }
        ]
      }
    },
    "EncryptionKeyVaultProperties": {
      "type": "object",
      "description": "An Encryption Key",
      "properties": {
        "keyName": {
          "type": "string",
          "description": "The name of the key."
        },
        "keyVersion": {
          "type": "string",
          "description": "The version of the key."
        },
        "autoDetectedKeyVersion": {
          "type": "string",
          "description": "The auto-detected version of the key if versionType is auto-detected.",
          "readOnly": true
        },
        "keyVaultUrl": {
          "type": "string",
          "description": "The URL of the vault."
        },
        "keyState": {
          "$ref": "#/definitions/EncryptionKeyStatus",
          "description": "The state of key provided",
          "readOnly": true
        },
        "versionType": {
          "$ref": "#/definitions/EncryptionVersionType",
          "description": "Property of the key if user provided or auto detected",
          "readOnly": true
        }
      }
    },
    "EncryptionState": {
      "type": "string",
      "description": "Whether encryption is enabled or disabled",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "EncryptionState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "is enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "is disabled"
          }
        ]
      }
    },
    "EncryptionVersionType": {
      "type": "string",
      "description": "Whether the encryption version is fixed or auto-detected",
      "enum": [
        "Fixed",
        "AutoDetected"
      ],
      "x-ms-enum": {
        "name": "EncryptionVersionType",
        "modelAsString": true,
        "values": [
          {
            "name": "Fixed",
            "value": "Fixed",
            "description": "is fixed"
          },
          {
            "name": "AutoDetected",
            "value": "AutoDetected",
            "description": "is auto-detected"
          }
        ]
      }
    },
    "Endpoints": {
      "type": "object",
      "description": "Endpoint addresses",
      "properties": {
        "nsxtManager": {
          "type": "string",
          "description": "Endpoint FQDN for the NSX-T Data Center manager",
          "readOnly": true
        },
        "vcsa": {
          "type": "string",
          "description": "Endpoint FQDN for Virtual Center Server Appliance",
          "readOnly": true
        },
        "hcxCloudManager": {
          "type": "string",
          "description": "Endpoint FQDN for the HCX Cloud Manager",
          "readOnly": true
        },
        "nsxtManagerIp": {
          "type": "string",
          "description": "Endpoint IP for the NSX-T Data Center manager",
          "readOnly": true
        },
        "vcenterIp": {
          "type": "string",
          "description": "Endpoint IP for Virtual Center Server Appliance",
          "readOnly": true
        },
        "hcxCloudManagerIp": {
          "type": "string",
          "description": "Endpoint IP for the HCX Cloud Manager",
          "readOnly": true
        }
      }
    },
    "ExpressRouteAuthorization": {
      "type": "object",
      "description": "ExpressRoute Circuit Authorization",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ExpressRouteAuthorizationProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ExpressRouteAuthorizationList": {
      "type": "object",
      "description": "The response of a ExpressRouteAuthorization list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ExpressRouteAuthorization items on this page",
          "items": {
            "$ref": "#/definitions/ExpressRouteAuthorization"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ExpressRouteAuthorizationProperties": {
      "type": "object",
      "description": "The properties of an ExpressRoute Circuit Authorization resource",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ExpressRouteAuthorizationProvisioningState",
          "description": "The state of the ExpressRoute Circuit Authorization provisioning",
          "readOnly": true
        },
        "expressRouteAuthorizationId": {
          "type": "string",
          "description": "The ID of the ExpressRoute Circuit Authorization",
          "readOnly": true
        },
        "expressRouteAuthorizationKey": {
          "type": "string",
          "description": "The key of the ExpressRoute Circuit Authorization",
          "readOnly": true
        },
        "expressRouteId": {
          "type": "string",
          "description": "The ID of the ExpressRoute Circuit"
        }
      }
    },
    "ExpressRouteAuthorizationProvisioningState": {
      "type": "string",
      "description": "Express Route Circuit Authorization provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "ExpressRouteAuthorizationProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "GlobalReachConnection": {
      "type": "object",
      "description": "A global reach connection resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GlobalReachConnectionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "GlobalReachConnectionList": {
      "type": "object",
      "description": "The response of a GlobalReachConnection list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The GlobalReachConnection items on this page",
          "items": {
            "$ref": "#/definitions/GlobalReachConnection"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "GlobalReachConnectionProperties": {
      "type": "object",
      "description": "The properties of a global reach connection",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/GlobalReachConnectionProvisioningState",
          "description": "The state of the  ExpressRoute Circuit Authorization provisioning",
          "readOnly": true
        },
        "addressPrefix": {
          "type": "string",
          "description": "The network used for global reach carved out from the original network block\nprovided for the private cloud",
          "readOnly": true
        },
        "authorizationKey": {
          "type": "string",
          "description": "Authorization key from the peer express route used for the global reach\nconnection"
        },
        "circuitConnectionStatus": {
          "$ref": "#/definitions/GlobalReachConnectionStatus",
          "description": "The connection status of the global reach connection",
          "readOnly": true
        },
        "peerExpressRouteCircuit": {
          "type": "string",
          "description": "Identifier of the ExpressRoute Circuit to peer with in the global reach\nconnection"
        },
        "expressRouteId": {
          "type": "string",
          "description": "The ID of the Private Cloud's ExpressRoute Circuit that is participating in the\nglobal reach connection"
        }
      }
    },
    "GlobalReachConnectionProvisioningState": {
      "type": "string",
      "description": "Global Reach Connection provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "GlobalReachConnectionProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "GlobalReachConnectionStatus": {
      "type": "string",
      "description": "Global Reach Connection status",
      "enum": [
        "Connected",
        "Connecting",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "GlobalReachConnectionStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Connected",
            "value": "Connected",
            "description": "is connected"
          },
          {
            "name": "Connecting",
            "value": "Connecting",
            "description": "is connecting"
          },
          {
            "name": "Disconnected",
            "value": "Disconnected",
            "description": "is disconnected"
          }
        ]
      }
    },
    "HcxEnterpriseSite": {
      "type": "object",
      "description": "An HCX Enterprise Site resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/HcxEnterpriseSiteProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "HcxEnterpriseSiteList": {
      "type": "object",
      "description": "The response of a HcxEnterpriseSite list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The HcxEnterpriseSite items on this page",
          "items": {
            "$ref": "#/definitions/HcxEnterpriseSite"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "HcxEnterpriseSiteProperties": {
      "type": "object",
      "description": "The properties of an HCX Enterprise Site",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/HcxEnterpriseSiteProvisioningState",
          "description": "The provisioning state of the resource.",
          "readOnly": true
        },
        "activationKey": {
          "type": "string",
          "description": "The activation key",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/HcxEnterpriseSiteStatus",
          "description": "The status of the HCX Enterprise Site",
          "readOnly": true
        }
      }
    },
    "HcxEnterpriseSiteProvisioningState": {
      "type": "string",
      "description": "HCX Enterprise Site provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "HcxEnterpriseSiteProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      },
      "readOnly": true
    },
    "HcxEnterpriseSiteStatus": {
      "type": "string",
      "description": "HCX Enterprise Site status",
      "enum": [
        "Available",
        "Consumed",
        "Deactivated",
        "Deleted"
      ],
      "x-ms-enum": {
        "name": "HcxEnterpriseSiteStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Available",
            "value": "Available",
            "description": "is available"
          },
          {
            "name": "Consumed",
            "value": "Consumed",
            "description": "is consumed"
          },
          {
            "name": "Deactivated",
            "value": "Deactivated",
            "description": "is deactivated"
          },
          {
            "name": "Deleted",
            "value": "Deleted",
            "description": "is deleted"
          }
        ]
      }
    },
    "IdentitySource": {
      "type": "object",
      "description": "vCenter Single Sign On Identity Source",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the identity source"
        },
        "alias": {
          "type": "string",
          "description": "The domain's NetBIOS name"
        },
        "domain": {
          "type": "string",
          "description": "The domain's dns name"
        },
        "baseUserDN": {
          "type": "string",
          "description": "The base distinguished name for users"
        },
        "baseGroupDN": {
          "type": "string",
          "description": "The base distinguished name for groups"
        },
        "primaryServer": {
          "type": "string",
          "description": "Primary server URL"
        },
        "secondaryServer": {
          "type": "string",
          "description": "Secondary server URL"
        },
        "ssl": {
          "$ref": "#/definitions/SslEnum",
          "description": "Protect LDAP communication using SSL certificate (LDAPS)"
        },
        "username": {
          "type": "string",
          "description": "The ID of an Active Directory user with a minimum of read-only access to Base\nDN for users and group"
        },
        "password": {
          "type": "string",
          "format": "password",
          "description": "The password of the Active Directory user with a minimum of read-only access to\nBase DN for users and groups.",
          "x-ms-secret": true
        }
      }
    },
    "InternetEnum": {
      "type": "string",
      "description": "Whether internet is enabled or disabled",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "InternetEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "is enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "is disabled"
          }
        ]
      }
    },
    "IscsiPath": {
      "type": "object",
      "description": "An iSCSI path resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IscsiPathProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "IscsiPathListResult": {
      "type": "object",
      "description": "The response of a IscsiPath list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IscsiPath items on this page",
          "items": {
            "$ref": "#/definitions/IscsiPath"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "IscsiPathProperties": {
      "type": "object",
      "description": "The properties of an iSCSI path resource",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/IscsiPathProvisioningState",
          "description": "The state of the iSCSI path provisioning",
          "readOnly": true
        },
        "networkBlock": {
          "type": "string",
          "description": "CIDR Block for iSCSI path.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "networkBlock"
      ]
    },
    "IscsiPathProvisioningState": {
      "type": "string",
      "description": "private cloud provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Pending",
        "Building",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "IscsiPathProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Pending",
            "value": "Pending",
            "description": "is pending"
          },
          {
            "name": "Building",
            "value": "Building",
            "description": "is building"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "ManagementCluster": {
      "type": "object",
      "description": "The properties of a management cluster",
      "properties": {
        "clusterSize": {
          "type": "integer",
          "format": "int32",
          "description": "The cluster size"
        },
        "provisioningState": {
          "$ref": "#/definitions/ClusterProvisioningState",
          "description": "The state of the cluster provisioning",
          "readOnly": true
        },
        "clusterId": {
          "type": "integer",
          "format": "int32",
          "description": "The identity",
          "readOnly": true
        },
        "hosts": {
          "type": "array",
          "description": "The hosts",
          "items": {
            "type": "string"
          }
        },
        "vsanDatastoreName": {
          "type": "string",
          "description": "Name of the vsan datastore associated with the cluster"
        }
      }
    },
    "NetAppVolume": {
      "type": "object",
      "description": "An Azure NetApp Files volume from Microsoft.NetApp provider",
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure resource ID of the NetApp volume"
        }
      },
      "required": [
        "id"
      ]
    },
    "NsxPublicIpQuotaRaisedEnum": {
      "type": "string",
      "description": "NSX public IP quota raised",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "NsxPublicIpQuotaRaisedEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "is enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "is disabled"
          }
        ]
      }
    },
    "OptionalParamEnum": {
      "type": "string",
      "description": "Optional Param",
      "enum": [
        "Optional",
        "Required"
      ],
      "x-ms-enum": {
        "name": "OptionalParamEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "Optional",
            "value": "Optional",
            "description": "is optional"
          },
          {
            "name": "Required",
            "value": "Required",
            "description": "is required"
          }
        ]
      }
    },
    "PSCredentialExecutionParameter": {
      "type": "object",
      "description": "a powershell credential object",
      "properties": {
        "username": {
          "type": "string",
          "description": "username for login"
        },
        "password": {
          "type": "string",
          "format": "password",
          "description": "password for login",
          "x-ms-secret": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ScriptExecutionParameter"
        }
      ],
      "x-ms-discriminator-value": "Credential"
    },
    "PlacementPoliciesList": {
      "type": "object",
      "description": "The response of a PlacementPolicy list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PlacementPolicy items on this page",
          "items": {
            "$ref": "#/definitions/PlacementPolicy"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PlacementPolicy": {
      "type": "object",
      "description": "A vSphere Distributed Resource Scheduler (DRS) placement policy",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PlacementPolicyProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PlacementPolicyProperties": {
      "type": "object",
      "description": "Abstract placement policy properties",
      "properties": {
        "type": {
          "$ref": "#/definitions/PlacementPolicyType",
          "description": "Placement Policy type"
        },
        "state": {
          "$ref": "#/definitions/PlacementPolicyState",
          "description": "Whether the placement policy is enabled or disabled"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the placement policy"
        },
        "provisioningState": {
          "$ref": "#/definitions/PlacementPolicyProvisioningState",
          "description": "The provisioning state",
          "readOnly": true
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "PlacementPolicyProvisioningState": {
      "type": "string",
      "description": "Placement Policy provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Building",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "PlacementPolicyProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Building",
            "value": "Building",
            "description": "is building"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "PlacementPolicyState": {
      "type": "string",
      "description": "Placement Policy state",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "PlacementPolicyState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "is enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "is disabled"
          }
        ]
      }
    },
    "PlacementPolicyType": {
      "type": "string",
      "description": "Placement Policy type",
      "enum": [
        "VmVm",
        "VmHost"
      ],
      "x-ms-enum": {
        "name": "PlacementPolicyType",
        "modelAsString": true,
        "values": [
          {
            "name": "VmVm",
            "value": "VmVm"
          },
          {
            "name": "VmHost",
            "value": "VmHost"
          }
        ]
      }
    },
    "PlacementPolicyUpdate": {
      "type": "object",
      "description": "An update of a DRS placement policy resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PlacementPolicyUpdateProperties",
          "description": "The properties of a placement policy resource that may be updated",
          "x-ms-client-flatten": true
        }
      }
    },
    "PlacementPolicyUpdateProperties": {
      "type": "object",
      "description": "The properties of a placement policy resource that may be updated",
      "properties": {
        "state": {
          "$ref": "#/definitions/PlacementPolicyState",
          "description": "Whether the placement policy is enabled or disabled"
        },
        "vmMembers": {
          "type": "array",
          "description": "Virtual machine members list",
          "items": {
            "type": "string"
          }
        },
        "hostMembers": {
          "type": "array",
          "description": "Host members list",
          "items": {
            "type": "string"
          }
        },
        "affinityStrength": {
          "$ref": "#/definitions/AffinityStrength",
          "description": "vm-host placement policy affinity strength (should/must)"
        },
        "azureHybridBenefitType": {
          "$ref": "#/definitions/AzureHybridBenefitType",
          "description": "placement policy azure hybrid benefit opt-in type"
        }
      }
    },
    "PortMirroringDirectionEnum": {
      "type": "string",
      "description": "Port Mirroring Direction",
      "enum": [
        "INGRESS",
        "EGRESS",
        "BIDIRECTIONAL"
      ],
      "x-ms-enum": {
        "name": "PortMirroringDirectionEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "INGRESS",
            "value": "INGRESS",
            "description": "is ingress"
          },
          {
            "name": "EGRESS",
            "value": "EGRESS",
            "description": "is egress"
          },
          {
            "name": "BIDIRECTIONAL",
            "value": "BIDIRECTIONAL",
            "description": "is bidirectional"
          }
        ]
      }
    },
    "PortMirroringStatusEnum": {
      "type": "string",
      "description": "Port Mirroring status",
      "enum": [
        "SUCCESS",
        "FAILURE"
      ],
      "x-ms-enum": {
        "name": "PortMirroringStatusEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "SUCCESS",
            "value": "SUCCESS",
            "description": "is success"
          },
          {
            "name": "FAILURE",
            "value": "FAILURE",
            "description": "is failure"
          }
        ]
      }
    },
    "PrivateCloud": {
      "type": "object",
      "description": "A private cloud resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateCloudProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/SystemAssignedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "required": [
        "sku"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "PrivateCloudList": {
      "type": "object",
      "description": "The response of a PrivateCloud list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateCloud items on this page",
          "items": {
            "$ref": "#/definitions/PrivateCloud"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateCloudProperties": {
      "type": "object",
      "description": "The properties of a private cloud resource",
      "properties": {
        "managementCluster": {
          "$ref": "#/definitions/ManagementCluster",
          "description": "The default cluster used for management"
        },
        "internet": {
          "type": "string",
          "description": "Connectivity to internet is enabled or disabled",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "InternetEnum",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "is enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "is disabled"
              }
            ]
          }
        },
        "identitySources": {
          "type": "array",
          "description": "vCenter Single Sign On Identity Sources",
          "items": {
            "$ref": "#/definitions/IdentitySource"
          },
          "x-ms-identifiers": []
        },
        "availability": {
          "$ref": "#/definitions/AvailabilityProperties",
          "description": "Properties describing how the cloud is distributed across availability zones",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "encryption": {
          "$ref": "#/definitions/Encryption",
          "description": "Customer managed key encryption, can be enabled or disabled"
        },
        "extendedNetworkBlocks": {
          "type": "array",
          "description": "Array of additional networks noncontiguous with networkBlock. Networks must be\nunique and non-overlapping across VNet in your subscription, on-premise, and\nthis privateCloud networkBlock attribute. Make sure the CIDR format conforms to\n(A.B.C.D/X).",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/PrivateCloudProvisioningState",
          "description": "The provisioning state",
          "readOnly": true
        },
        "circuit": {
          "$ref": "#/definitions/Circuit",
          "description": "An ExpressRoute Circuit"
        },
        "endpoints": {
          "$ref": "#/definitions/Endpoints",
          "description": "The endpoints",
          "readOnly": true
        },
        "networkBlock": {
          "type": "string",
          "description": "The block of addresses should be unique across VNet in your subscription as\nwell as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where\nA,B,C,D are between 0 and 255, and X is between 0 and 22"
        },
        "managementNetwork": {
          "type": "string",
          "description": "Network used to access vCenter Server and NSX-T Manager",
          "readOnly": true
        },
        "provisioningNetwork": {
          "type": "string",
          "description": "Used for virtual machine cold migration, cloning, and snapshot migration",
          "readOnly": true
        },
        "vmotionNetwork": {
          "type": "string",
          "description": "Used for live migration of virtual machines",
          "readOnly": true
        },
        "vcenterPassword": {
          "type": "string",
          "format": "password",
          "description": "Optionally, set the vCenter admin password when the private cloud is created",
          "x-ms-secret": true
        },
        "nsxtPassword": {
          "type": "string",
          "format": "password",
          "description": "Optionally, set the NSX-T Manager password when the private cloud is created",
          "x-ms-secret": true
        },
        "vcenterCertificateThumbprint": {
          "type": "string",
          "description": "Thumbprint of the vCenter Server SSL certificate",
          "readOnly": true
        },
        "nsxtCertificateThumbprint": {
          "type": "string",
          "description": "Thumbprint of the NSX-T Manager SSL certificate",
          "readOnly": true
        },
        "externalCloudLinks": {
          "type": "array",
          "description": "Array of cloud link IDs from other clouds that connect to this one",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "secondaryCircuit": {
          "$ref": "#/definitions/Circuit",
          "description": "A secondary expressRoute circuit from a separate AZ. Only present in a\nstretched private cloud"
        },
        "nsxPublicIpQuotaRaised": {
          "$ref": "#/definitions/NsxPublicIpQuotaRaisedEnum",
          "description": "Flag to indicate whether the private cloud has the quota for provisioned NSX\nPublic IP count raised from 64 to 1024",
          "readOnly": true
        },
        "virtualNetworkId": {
          "type": "string",
          "format": "arm-id",
          "description": "Azure resource ID of the virtual network",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "\\Microsoft.Network\\vnet"
              }
            ]
          }
        },
        "dnsZoneType": {
          "$ref": "#/definitions/DnsZoneType",
          "description": "The type of DNS zone to use."
        }
      },
      "required": [
        "managementCluster",
        "networkBlock"
      ]
    },
    "PrivateCloudProvisioningState": {
      "type": "string",
      "description": "private cloud provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Cancelled",
        "Pending",
        "Building",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "PrivateCloudProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Cancelled",
            "value": "Cancelled",
            "description": "is cancelled"
          },
          {
            "name": "Pending",
            "value": "Pending",
            "description": "is pending"
          },
          {
            "name": "Building",
            "value": "Building",
            "description": "is building"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "PrivateCloudUpdate": {
      "type": "object",
      "description": "An update to a private cloud resource",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/SystemAssignedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        },
        "properties": {
          "$ref": "#/definitions/PrivateCloudUpdateProperties",
          "description": "The updatable properties of a private cloud resource",
          "x-ms-client-flatten": true
        }
      }
    },
    "PrivateCloudUpdateProperties": {
      "type": "object",
      "description": "The properties of a private cloud resource that may be updated",
      "properties": {
        "managementCluster": {
          "$ref": "#/definitions/ManagementCluster",
          "description": "The default cluster used for management"
        },
        "internet": {
          "$ref": "#/definitions/InternetEnum",
          "description": "Connectivity to internet is enabled or disabled"
        },
        "identitySources": {
          "type": "array",
          "description": "vCenter Single Sign On Identity Sources",
          "items": {
            "$ref": "#/definitions/IdentitySource"
          },
          "x-ms-identifiers": []
        },
        "availability": {
          "$ref": "#/definitions/AvailabilityProperties",
          "description": "Properties describing how the cloud is distributed across availability zones",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "encryption": {
          "$ref": "#/definitions/Encryption",
          "description": "Customer managed key encryption, can be enabled or disabled"
        },
        "extendedNetworkBlocks": {
          "type": "array",
          "description": "Array of additional networks noncontiguous with networkBlock. Networks must be\nunique and non-overlapping across VNet in your subscription, on-premise, and\nthis privateCloud networkBlock attribute. Make sure the CIDR format conforms to\n(A.B.C.D/X).",
          "items": {
            "type": "string"
          }
        },
        "dnsZoneType": {
          "$ref": "#/definitions/DnsZoneType",
          "description": "The type of DNS zone to use."
        }
      }
    },
    "Quota": {
      "type": "object",
      "description": "Subscription quotas",
      "properties": {
        "hostsRemaining": {
          "type": "object",
          "description": "Remaining hosts quota by sku type",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          },
          "readOnly": true
        },
        "quotaEnabled": {
          "$ref": "#/definitions/QuotaEnabled",
          "description": "Host quota is active for current subscription",
          "readOnly": true
        }
      }
    },
    "QuotaEnabled": {
      "type": "string",
      "description": "quota enabled",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "QuotaEnabled",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "is enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "is disabled"
          }
        ]
      }
    },
    "ScriptCmdlet": {
      "type": "object",
      "description": "A cmdlet available for script execution",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScriptCmdletProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ScriptCmdletAudience": {
      "type": "string",
      "description": "Specifies whether a script cmdlet is intended to be invoked only through automation or visible to customers",
      "enum": [
        "Automation",
        "Any"
      ],
      "x-ms-enum": {
        "name": "ScriptCmdletAudience",
        "modelAsString": true,
        "values": [
          {
            "name": "Automation",
            "value": "Automation",
            "description": "is automation"
          },
          {
            "name": "Any",
            "value": "Any",
            "description": "is any"
          }
        ]
      }
    },
    "ScriptCmdletProperties": {
      "type": "object",
      "description": "Properties of a pre-canned script",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ScriptCmdletProvisioningState",
          "description": "The provisioning state of the resource.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of the scripts functionality",
          "readOnly": true
        },
        "timeout": {
          "type": "string",
          "description": "Recommended time limit for execution",
          "readOnly": true
        },
        "audience": {
          "$ref": "#/definitions/ScriptCmdletAudience",
          "description": "Specifies whether a script cmdlet is intended to be invoked only through automation or visible to customers",
          "readOnly": true
        },
        "parameters": {
          "type": "array",
          "description": "Parameters the script will accept",
          "items": {
            "$ref": "#/definitions/ScriptParameter"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ScriptCmdletProvisioningState": {
      "type": "string",
      "description": "A script cmdlet provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ScriptCmdletProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      },
      "readOnly": true
    },
    "ScriptCmdletsList": {
      "type": "object",
      "description": "The response of a ScriptCmdlet list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ScriptCmdlet items on this page",
          "items": {
            "$ref": "#/definitions/ScriptCmdlet"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ScriptExecution": {
      "type": "object",
      "description": "An instance of a script executed by a user - custom or AVS",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScriptExecutionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ScriptExecutionParameter": {
      "type": "object",
      "description": "The arguments passed in to the execution",
      "properties": {
        "type": {
          "$ref": "#/definitions/ScriptExecutionParameterType",
          "description": "script execution parameter type"
        },
        "name": {
          "type": "string",
          "description": "The parameter name"
        }
      },
      "discriminator": "type",
      "required": [
        "type",
        "name"
      ]
    },
    "ScriptExecutionParameterType": {
      "type": "string",
      "description": "script execution parameter type",
      "enum": [
        "Value",
        "SecureValue",
        "Credential"
      ],
      "x-ms-enum": {
        "name": "ScriptExecutionParameterType",
        "modelAsString": true,
        "values": [
          {
            "name": "Value",
            "value": "Value"
          },
          {
            "name": "SecureValue",
            "value": "SecureValue"
          },
          {
            "name": "Credential",
            "value": "Credential"
          }
        ]
      }
    },
    "ScriptExecutionProperties": {
      "type": "object",
      "description": "Properties of a user-invoked script",
      "properties": {
        "scriptCmdletId": {
          "type": "string",
          "description": "A reference to the script cmdlet resource if user is running a AVS script"
        },
        "parameters": {
          "type": "array",
          "description": "Parameters the script will accept",
          "items": {
            "$ref": "#/definitions/ScriptExecutionParameter"
          },
          "x-ms-identifiers": []
        },
        "hiddenParameters": {
          "type": "array",
          "description": "Parameters that will be hidden/not visible to ARM, such as passwords and\ncredentials",
          "items": {
            "$ref": "#/definitions/ScriptExecutionParameter"
          },
          "x-ms-identifiers": []
        },
        "failureReason": {
          "type": "string",
          "description": "Error message if the script was able to run, but if the script itself had\nerrors or powershell threw an exception"
        },
        "timeout": {
          "type": "string",
          "description": "Time limit for execution"
        },
        "retention": {
          "type": "string",
          "description": "Time to live for the resource. If not provided, will be available for 60 days"
        },
        "submittedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time the script execution was submitted",
          "readOnly": true
        },
        "startedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time the script execution was started",
          "readOnly": true
        },
        "finishedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time the script execution was finished",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ScriptExecutionProvisioningState",
          "description": "The state of the script execution resource",
          "readOnly": true
        },
        "output": {
          "type": "array",
          "description": "Standard output stream from the powershell execution",
          "items": {
            "type": "string"
          }
        },
        "namedOutputs": {
          "type": "object",
          "description": "User-defined dictionary.",
          "additionalProperties": {
            "type": "object"
          }
        },
        "information": {
          "type": "array",
          "description": "Standard information out stream from the powershell execution",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "warnings": {
          "type": "array",
          "description": "Standard warning out stream from the powershell execution",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "description": "Standard error output stream from the powershell execution",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "required": [
        "timeout"
      ]
    },
    "ScriptExecutionProvisioningState": {
      "type": "string",
      "description": "Script Execution provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Pending",
        "Running",
        "Cancelling",
        "Cancelled",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "ScriptExecutionProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Pending",
            "value": "Pending",
            "description": "is pending"
          },
          {
            "name": "Running",
            "value": "Running",
            "description": "is running"
          },
          {
            "name": "Cancelling",
            "value": "Cancelling",
            "description": "is cancelling"
          },
          {
            "name": "Cancelled",
            "value": "Cancelled",
            "description": "is cancelled"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          }
        ]
      },
      "readOnly": true
    },
    "ScriptExecutionsList": {
      "type": "object",
      "description": "The response of a ScriptExecution list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ScriptExecution items on this page",
          "items": {
            "$ref": "#/definitions/ScriptExecution"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ScriptOutputStreamType": {
      "type": "string",
      "description": "Script Output Stream type",
      "enum": [
        "Information",
        "Warning",
        "Output",
        "Error"
      ],
      "x-ms-enum": {
        "name": "ScriptOutputStreamType",
        "modelAsString": true,
        "values": [
          {
            "name": "Information",
            "value": "Information",
            "description": "is information"
          },
          {
            "name": "Warning",
            "value": "Warning",
            "description": "is warning"
          },
          {
            "name": "Output",
            "value": "Output",
            "description": "is output"
          },
          {
            "name": "Error",
            "value": "Error",
            "description": "is error"
          }
        ]
      }
    },
    "ScriptPackage": {
      "type": "object",
      "description": "Script Package resources available for execution",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScriptPackageProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ScriptPackageProperties": {
      "type": "object",
      "description": "Properties of a Script Package subresource",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ScriptPackageProvisioningState",
          "description": "The provisioning state of the resource.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "User friendly description of the package",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Module version",
          "readOnly": true
        },
        "company": {
          "type": "string",
          "description": "Company that created and supports the package",
          "readOnly": true
        },
        "uri": {
          "type": "string",
          "description": "Link to support by the package vendor",
          "readOnly": true
        }
      }
    },
    "ScriptPackageProvisioningState": {
      "type": "string",
      "description": "Script Package provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ScriptPackageProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      },
      "readOnly": true
    },
    "ScriptPackagesList": {
      "type": "object",
      "description": "The response of a ScriptPackage list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ScriptPackage items on this page",
          "items": {
            "$ref": "#/definitions/ScriptPackage"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ScriptParameter": {
      "type": "object",
      "description": "An parameter that the script will accept",
      "properties": {
        "type": {
          "$ref": "#/definitions/ScriptParameterTypes",
          "description": "The type of parameter the script is expecting. psCredential is a\nPSCredentialObject",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The parameter name that the script will expect a parameter value for"
        },
        "description": {
          "type": "string",
          "description": "User friendly description of the parameter",
          "readOnly": true
        },
        "visibility": {
          "$ref": "#/definitions/VisibilityParameterEnum",
          "description": "Should this parameter be visible to arm and passed in the parameters argument\nwhen executing",
          "readOnly": true
        },
        "optional": {
          "$ref": "#/definitions/OptionalParamEnum",
          "description": "Is this parameter required or optional",
          "readOnly": true
        }
      }
    },
    "ScriptParameterTypes": {
      "type": "string",
      "description": "Script Parameter types",
      "enum": [
        "String",
        "SecureString",
        "Credential",
        "Int",
        "Bool",
        "Float"
      ],
      "x-ms-enum": {
        "name": "ScriptParameterTypes",
        "modelAsString": true,
        "values": [
          {
            "name": "String",
            "value": "String",
            "description": "is string"
          },
          {
            "name": "SecureString",
            "value": "SecureString",
            "description": "is secure string"
          },
          {
            "name": "Credential",
            "value": "Credential",
            "description": "is credential"
          },
          {
            "name": "Int",
            "value": "Int",
            "description": "is int"
          },
          {
            "name": "Bool",
            "value": "Bool",
            "description": "is bool"
          },
          {
            "name": "Float",
            "value": "Float",
            "description": "is float"
          }
        ]
      }
    },
    "ScriptSecureStringExecutionParameter": {
      "type": "object",
      "description": "a plain text value execution parameter",
      "properties": {
        "secureValue": {
          "type": "string",
          "format": "password",
          "description": "A secure value for the passed parameter, not to be stored in logs",
          "x-ms-secret": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ScriptExecutionParameter"
        }
      ],
      "x-ms-discriminator-value": "SecureValue"
    },
    "ScriptStringExecutionParameter": {
      "type": "object",
      "description": "a plain text value execution parameter",
      "properties": {
        "value": {
          "type": "string",
          "description": "The value for the passed parameter"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ScriptExecutionParameter"
        }
      ],
      "x-ms-discriminator-value": "Value"
    },
    "SegmentStatusEnum": {
      "type": "string",
      "description": "Segment status",
      "enum": [
        "SUCCESS",
        "FAILURE"
      ],
      "x-ms-enum": {
        "name": "SegmentStatusEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "SUCCESS",
            "value": "SUCCESS",
            "description": "is success"
          },
          {
            "name": "FAILURE",
            "value": "FAILURE",
            "description": "is failure"
          }
        ]
      }
    },
    "SslEnum": {
      "type": "string",
      "description": "Whether SSL is enabled or disabled",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "SslEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "is enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "is disabled"
          }
        ]
      }
    },
    "Trial": {
      "type": "object",
      "description": "Subscription trial availability",
      "properties": {
        "status": {
          "$ref": "#/definitions/TrialStatus",
          "description": "Trial status",
          "readOnly": true
        },
        "availableHosts": {
          "type": "integer",
          "format": "int32",
          "description": "Number of trial hosts available",
          "readOnly": true
        }
      }
    },
    "TrialStatus": {
      "type": "string",
      "description": "trial status",
      "enum": [
        "TrialAvailable",
        "TrialUsed",
        "TrialDisabled"
      ],
      "x-ms-enum": {
        "name": "TrialStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "TrialAvailable",
            "value": "TrialAvailable",
            "description": "is available"
          },
          {
            "name": "TrialUsed",
            "value": "TrialUsed",
            "description": "is used"
          },
          {
            "name": "TrialDisabled",
            "value": "TrialDisabled",
            "description": "is disabled"
          }
        ]
      }
    },
    "VMGroupStatusEnum": {
      "type": "string",
      "description": "VM group status",
      "enum": [
        "SUCCESS",
        "FAILURE"
      ],
      "x-ms-enum": {
        "name": "VMGroupStatusEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "SUCCESS",
            "value": "SUCCESS",
            "description": "is success"
          },
          {
            "name": "FAILURE",
            "value": "FAILURE",
            "description": "is failure"
          }
        ]
      }
    },
    "VMTypeEnum": {
      "type": "string",
      "description": "VM type",
      "enum": [
        "REGULAR",
        "EDGE",
        "SERVICE"
      ],
      "x-ms-enum": {
        "name": "VMTypeEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "REGULAR",
            "value": "REGULAR",
            "description": "is regular"
          },
          {
            "name": "EDGE",
            "value": "EDGE",
            "description": "is edge"
          },
          {
            "name": "SERVICE",
            "value": "SERVICE",
            "description": "is service"
          }
        ]
      }
    },
    "VirtualMachine": {
      "type": "object",
      "description": "Virtual Machine",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VirtualMachineProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "VirtualMachineProperties": {
      "type": "object",
      "description": "Virtual Machine Properties",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/VirtualMachineProvisioningState",
          "description": "The provisioning state of the resource.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the VM.",
          "readOnly": true
        },
        "moRefId": {
          "type": "string",
          "description": "Virtual machine managed object reference id",
          "readOnly": true
        },
        "folderPath": {
          "type": "string",
          "description": "Path to virtual machine's folder starting from datacenter virtual machine folder",
          "readOnly": true
        },
        "restrictMovement": {
          "$ref": "#/definitions/VirtualMachineRestrictMovementState",
          "description": "Whether VM DRS-driven movement is restricted (enabled) or not (disabled)",
          "readOnly": true
        }
      }
    },
    "VirtualMachineProvisioningState": {
      "type": "string",
      "description": "Virtual Machine provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "VirtualMachineProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      },
      "readOnly": true
    },
    "VirtualMachineRestrictMovement": {
      "type": "object",
      "description": "Set VM DRS-driven movement to restricted (enabled) or not (disabled)",
      "properties": {
        "restrictMovement": {
          "$ref": "#/definitions/VirtualMachineRestrictMovementState",
          "description": "Whether VM DRS-driven movement is restricted (enabled) or not (disabled)"
        }
      }
    },
    "VirtualMachineRestrictMovementState": {
      "type": "string",
      "description": "Virtual Machine Restrict Movement state",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "VirtualMachineRestrictMovementState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "is enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "is disabled"
          }
        ]
      }
    },
    "VirtualMachinesList": {
      "type": "object",
      "description": "The response of a VirtualMachine list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The VirtualMachine items on this page",
          "items": {
            "$ref": "#/definitions/VirtualMachine"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "VisibilityParameterEnum": {
      "type": "string",
      "description": "Visibility Parameter",
      "enum": [
        "Visible",
        "Hidden"
      ],
      "x-ms-enum": {
        "name": "VisibilityParameterEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "Visible",
            "value": "Visible",
            "description": "is visible"
          },
          {
            "name": "Hidden",
            "value": "Hidden",
            "description": "is hidden"
          }
        ]
      }
    },
    "VmHostPlacementPolicyProperties": {
      "type": "object",
      "description": "VM-Host placement policy properties",
      "properties": {
        "vmMembers": {
          "type": "array",
          "description": "Virtual machine members list",
          "items": {
            "type": "string"
          }
        },
        "hostMembers": {
          "type": "array",
          "description": "Host members list",
          "items": {
            "type": "string"
          }
        },
        "affinityType": {
          "$ref": "#/definitions/AffinityType",
          "description": "placement policy affinity type"
        },
        "affinityStrength": {
          "$ref": "#/definitions/AffinityStrength",
          "description": "vm-host placement policy affinity strength (should/must)"
        },
        "azureHybridBenefitType": {
          "$ref": "#/definitions/AzureHybridBenefitType",
          "description": "placement policy azure hybrid benefit opt-in type"
        }
      },
      "required": [
        "vmMembers",
        "hostMembers",
        "affinityType"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/PlacementPolicyProperties"
        }
      ],
      "x-ms-discriminator-value": "VmHost"
    },
    "VmVmPlacementPolicyProperties": {
      "type": "object",
      "description": "VM-VM placement policy properties",
      "properties": {
        "vmMembers": {
          "type": "array",
          "description": "Virtual machine members list",
          "items": {
            "type": "string"
          }
        },
        "affinityType": {
          "$ref": "#/definitions/AffinityType",
          "description": "placement policy affinity type"
        }
      },
      "required": [
        "vmMembers",
        "affinityType"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/PlacementPolicyProperties"
        }
      ],
      "x-ms-discriminator-value": "VmVm"
    },
    "WorkloadNetwork": {
      "type": "object",
      "description": "Workload Network",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadNetworkProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkloadNetworkDhcp": {
      "type": "object",
      "description": "NSX DHCP",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadNetworkDhcpEntity",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkloadNetworkDhcpEntity": {
      "type": "object",
      "description": "Base class for WorkloadNetworkDhcpServer and WorkloadNetworkDhcpRelay to\ninherit from",
      "properties": {
        "dhcpType": {
          "$ref": "#/definitions/DhcpTypeEnum",
          "description": "Type of DHCP: SERVER or RELAY."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the DHCP entity."
        },
        "segments": {
          "type": "array",
          "description": "NSX Segments consuming DHCP.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/WorkloadNetworkDhcpProvisioningState",
          "description": "The provisioning state",
          "readOnly": true
        },
        "revision": {
          "type": "integer",
          "format": "int64",
          "description": "NSX revision number."
        }
      },
      "discriminator": "dhcpType",
      "required": [
        "dhcpType"
      ]
    },
    "WorkloadNetworkDhcpList": {
      "type": "object",
      "description": "The response of a WorkloadNetworkDhcp list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetworkDhcp items on this page",
          "items": {
            "$ref": "#/definitions/WorkloadNetworkDhcp"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadNetworkDhcpProvisioningState": {
      "type": "string",
      "description": "Workload Network DHCP provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Building",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "WorkloadNetworkDhcpProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Building",
            "value": "Building",
            "description": "is building"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "WorkloadNetworkDhcpRelay": {
      "type": "object",
      "description": "NSX DHCP Relay",
      "properties": {
        "serverAddresses": {
          "type": "array",
          "description": "DHCP Relay Addresses. Max 3.",
          "minItems": 1,
          "maxItems": 3,
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/WorkloadNetworkDhcpEntity"
        }
      ],
      "x-ms-discriminator-value": "RELAY"
    },
    "WorkloadNetworkDhcpServer": {
      "type": "object",
      "description": "NSX DHCP Server",
      "properties": {
        "serverAddress": {
          "type": "string",
          "description": "DHCP Server Address."
        },
        "leaseTime": {
          "type": "integer",
          "format": "int64",
          "description": "DHCP Server Lease Time."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/WorkloadNetworkDhcpEntity"
        }
      ],
      "x-ms-discriminator-value": "SERVER"
    },
    "WorkloadNetworkDnsService": {
      "type": "object",
      "description": "NSX DNS Service",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadNetworkDnsServiceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkloadNetworkDnsServiceProperties": {
      "type": "object",
      "description": "NSX DNS Service Properties",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the DNS Service."
        },
        "dnsServiceIp": {
          "type": "string",
          "description": "DNS service IP of the DNS Service."
        },
        "defaultDnsZone": {
          "type": "string",
          "description": "Default DNS zone of the DNS Service."
        },
        "fqdnZones": {
          "type": "array",
          "description": "FQDN zones of the DNS Service.",
          "items": {
            "type": "string"
          }
        },
        "logLevel": {
          "$ref": "#/definitions/DnsServiceLogLevelEnum",
          "description": "DNS Service log level."
        },
        "status": {
          "$ref": "#/definitions/DnsServiceStatusEnum",
          "description": "DNS Service status.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/WorkloadNetworkDnsServiceProvisioningState",
          "description": "The provisioning state",
          "readOnly": true
        },
        "revision": {
          "type": "integer",
          "format": "int64",
          "description": "NSX revision number."
        }
      }
    },
    "WorkloadNetworkDnsServiceProvisioningState": {
      "type": "string",
      "description": "Workload Network DNS Service provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Building",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "WorkloadNetworkDnsServiceProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Building",
            "value": "Building",
            "description": "is building"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "WorkloadNetworkDnsServicesList": {
      "type": "object",
      "description": "The response of a WorkloadNetworkDnsService list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetworkDnsService items on this page",
          "items": {
            "$ref": "#/definitions/WorkloadNetworkDnsService"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadNetworkDnsZone": {
      "type": "object",
      "description": "NSX DNS Zone",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadNetworkDnsZoneProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkloadNetworkDnsZoneProperties": {
      "type": "object",
      "description": "NSX DNS Zone Properties",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the DNS Zone."
        },
        "domain": {
          "type": "array",
          "description": "Domain names of the DNS Zone.",
          "items": {
            "type": "string"
          }
        },
        "dnsServerIps": {
          "type": "array",
          "description": "DNS Server IP array of the DNS Zone.",
          "items": {
            "type": "string"
          }
        },
        "sourceIp": {
          "type": "string",
          "description": "Source IP of the DNS Zone."
        },
        "dnsServices": {
          "type": "integer",
          "format": "int64",
          "description": "Number of DNS Services using the DNS zone."
        },
        "provisioningState": {
          "$ref": "#/definitions/WorkloadNetworkDnsZoneProvisioningState",
          "description": "The provisioning state",
          "readOnly": true
        },
        "revision": {
          "type": "integer",
          "format": "int64",
          "description": "NSX revision number."
        }
      }
    },
    "WorkloadNetworkDnsZoneProvisioningState": {
      "type": "string",
      "description": "Workload Network DNS Zone provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Building",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "WorkloadNetworkDnsZoneProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Building",
            "value": "Building",
            "description": "is building"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "WorkloadNetworkDnsZonesList": {
      "type": "object",
      "description": "The response of a WorkloadNetworkDnsZone list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetworkDnsZone items on this page",
          "items": {
            "$ref": "#/definitions/WorkloadNetworkDnsZone"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadNetworkGateway": {
      "type": "object",
      "description": "NSX Gateway.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadNetworkGatewayProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkloadNetworkGatewayList": {
      "type": "object",
      "description": "The response of a WorkloadNetworkGateway list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetworkGateway items on this page",
          "items": {
            "$ref": "#/definitions/WorkloadNetworkGateway"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadNetworkGatewayProperties": {
      "type": "object",
      "description": "Properties of a NSX Gateway.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/WorkloadNetworkProvisioningState",
          "description": "The provisioning state of the resource.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the DHCP entity."
        },
        "path": {
          "type": "string",
          "description": "NSX Gateway Path.",
          "readOnly": true
        }
      }
    },
    "WorkloadNetworkList": {
      "type": "object",
      "description": "The response of a WorkloadNetwork list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetwork items on this page",
          "items": {
            "$ref": "#/definitions/WorkloadNetwork"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadNetworkPortMirroring": {
      "type": "object",
      "description": "NSX Port Mirroring",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadNetworkPortMirroringProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkloadNetworkPortMirroringList": {
      "type": "object",
      "description": "The response of a WorkloadNetworkPortMirroring list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetworkPortMirroring items on this page",
          "items": {
            "$ref": "#/definitions/WorkloadNetworkPortMirroring"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadNetworkPortMirroringProperties": {
      "type": "object",
      "description": "NSX Port Mirroring Properties",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the port mirroring profile."
        },
        "direction": {
          "$ref": "#/definitions/PortMirroringDirectionEnum",
          "description": "Direction of port mirroring profile."
        },
        "source": {
          "type": "string",
          "description": "Source VM Group."
        },
        "destination": {
          "type": "string",
          "description": "Destination VM Group."
        },
        "status": {
          "$ref": "#/definitions/PortMirroringStatusEnum",
          "description": "Port Mirroring Status.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/WorkloadNetworkPortMirroringProvisioningState",
          "description": "The provisioning state",
          "readOnly": true
        },
        "revision": {
          "type": "integer",
          "format": "int64",
          "description": "NSX revision number."
        }
      }
    },
    "WorkloadNetworkPortMirroringProvisioningState": {
      "type": "string",
      "description": "Workload Network Port Mirroring provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Building",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "WorkloadNetworkPortMirroringProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Building",
            "value": "Building",
            "description": "is building"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "WorkloadNetworkProperties": {
      "type": "object",
      "description": "The properties of a workload network",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/WorkloadNetworkProvisioningState",
          "description": "The provisioning state of the resource.",
          "readOnly": true
        }
      }
    },
    "WorkloadNetworkProvisioningState": {
      "type": "string",
      "description": "base Workload Network provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Building",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "WorkloadNetworkProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Building",
            "value": "Building",
            "description": "is building"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "WorkloadNetworkPublicIP": {
      "type": "object",
      "description": "NSX Public IP Block",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadNetworkPublicIPProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkloadNetworkPublicIPProperties": {
      "type": "object",
      "description": "NSX Public IP Block Properties",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the Public IP Block."
        },
        "numberOfPublicIPs": {
          "type": "integer",
          "format": "int64",
          "description": "Number of Public IPs requested."
        },
        "publicIPBlock": {
          "type": "string",
          "description": "CIDR Block of the Public IP Block.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/WorkloadNetworkPublicIPProvisioningState",
          "description": "The provisioning state",
          "readOnly": true
        }
      }
    },
    "WorkloadNetworkPublicIPProvisioningState": {
      "type": "string",
      "description": "Workload Network Public IP provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Building",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "WorkloadNetworkPublicIPProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Building",
            "value": "Building",
            "description": "is building"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "WorkloadNetworkPublicIPsList": {
      "type": "object",
      "description": "The response of a WorkloadNetworkPublicIP list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetworkPublicIP items on this page",
          "items": {
            "$ref": "#/definitions/WorkloadNetworkPublicIP"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadNetworkSegment": {
      "type": "object",
      "description": "NSX Segment",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadNetworkSegmentProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkloadNetworkSegmentPortVif": {
      "type": "object",
      "description": "Ports and any VIF attached to segment.",
      "properties": {
        "portName": {
          "type": "string",
          "description": "Name of port or VIF attached to segment."
        }
      }
    },
    "WorkloadNetworkSegmentProperties": {
      "type": "object",
      "description": "NSX Segment Properties",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the segment."
        },
        "connectedGateway": {
          "type": "string",
          "description": "Gateway which to connect segment to."
        },
        "subnet": {
          "$ref": "#/definitions/WorkloadNetworkSegmentSubnet",
          "description": "Subnet which to connect segment to."
        },
        "portVif": {
          "type": "array",
          "description": "Port Vif which segment is associated with.",
          "items": {
            "$ref": "#/definitions/WorkloadNetworkSegmentPortVif"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "status": {
          "$ref": "#/definitions/SegmentStatusEnum",
          "description": "Segment status.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/WorkloadNetworkSegmentProvisioningState",
          "description": "The provisioning state",
          "readOnly": true
        },
        "revision": {
          "type": "integer",
          "format": "int64",
          "description": "NSX revision number."
        }
      }
    },
    "WorkloadNetworkSegmentProvisioningState": {
      "type": "string",
      "description": "Workload Network Segment provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Building",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "WorkloadNetworkSegmentProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Building",
            "value": "Building",
            "description": "is building"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "WorkloadNetworkSegmentSubnet": {
      "type": "object",
      "description": "Subnet configuration for segment",
      "properties": {
        "dhcpRanges": {
          "type": "array",
          "description": "DHCP Range assigned for subnet.",
          "items": {
            "type": "string"
          }
        },
        "gatewayAddress": {
          "type": "string",
          "description": "Gateway address."
        }
      }
    },
    "WorkloadNetworkSegmentsList": {
      "type": "object",
      "description": "The response of a WorkloadNetworkSegment list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetworkSegment items on this page",
          "items": {
            "$ref": "#/definitions/WorkloadNetworkSegment"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadNetworkVMGroup": {
      "type": "object",
      "description": "NSX VM Group",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadNetworkVMGroupProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkloadNetworkVMGroupProperties": {
      "type": "object",
      "description": "NSX VM Group Properties",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the VM group."
        },
        "members": {
          "type": "array",
          "description": "Virtual machine members of this group.",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "$ref": "#/definitions/VMGroupStatusEnum",
          "description": "VM Group status.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/WorkloadNetworkVMGroupProvisioningState",
          "description": "The provisioning state",
          "readOnly": true
        },
        "revision": {
          "type": "integer",
          "format": "int64",
          "description": "NSX revision number."
        }
      }
    },
    "WorkloadNetworkVMGroupProvisioningState": {
      "type": "string",
      "description": "Workload Network VM Group provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Building",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "WorkloadNetworkVMGroupProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Building",
            "value": "Building",
            "description": "is building"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "WorkloadNetworkVMGroupsList": {
      "type": "object",
      "description": "The response of a WorkloadNetworkVMGroup list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetworkVMGroup items on this page",
          "items": {
            "$ref": "#/definitions/WorkloadNetworkVMGroup"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadNetworkVirtualMachine": {
      "type": "object",
      "description": "NSX Virtual Machine",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadNetworkVirtualMachineProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkloadNetworkVirtualMachineProperties": {
      "type": "object",
      "description": "NSX Virtual Machine Properties",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/WorkloadNetworkProvisioningState",
          "description": "The provisioning state of the resource.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the VM."
        },
        "vmType": {
          "$ref": "#/definitions/VMTypeEnum",
          "description": "Virtual machine type.",
          "readOnly": true
        }
      }
    },
    "WorkloadNetworkVirtualMachinesList": {
      "type": "object",
      "description": "The response of a WorkloadNetworkVirtualMachine list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetworkVirtualMachine items on this page",
          "items": {
            "$ref": "#/definitions/WorkloadNetworkVirtualMachine"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    }
  },
  "parameters": {
    "DhcpIdParameter": {
      "name": "dhcpId",
      "in": "path",
      "description": "The ID of the DHCP configuration",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._]+$",
      "x-ms-parameter-location": "method"
    },
    "DnsServiceIdParameter": {
      "name": "dnsServiceId",
      "in": "path",
      "description": "ID of the DNS service.",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._]+$",
      "x-ms-parameter-location": "method"
    },
    "DnsZoneIdParameter": {
      "name": "dnsZoneId",
      "in": "path",
      "description": "ID of the DNS zone.",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._]+$",
      "x-ms-parameter-location": "method"
    },
    "PortMirroringProfileParameter": {
      "name": "portMirroringId",
      "in": "path",
      "description": "ID of the NSX port mirroring profile.",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._]+$",
      "x-ms-parameter-location": "method"
    },
    "PrivateCloudNameParameter": {
      "name": "privateCloudName",
      "in": "path",
      "description": "Name of the private cloud",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._]+$",
      "x-ms-parameter-location": "method"
    },
    "PublicIPIdParameter": {
      "name": "publicIPId",
      "in": "path",
      "description": "ID of the DNS zone.",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._]+$",
      "x-ms-parameter-location": "method"
    },
    "VmGroupIdParameter": {
      "name": "vmGroupId",
      "in": "path",
      "description": "ID of the VM group.",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._]+$",
      "x-ms-parameter-location": "method"
    }
  }
}